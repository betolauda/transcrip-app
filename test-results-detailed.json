{
  "security": {
    "tests": {
      "command": "python -m pytest tests/security/ -v --tb=short",
      "returncode": -1,
      "stdout": "",
      "stderr": "[Errno 2] No such file or directory: 'python'",
      "duration": 0.031372785568237305,
      "success": false
    },
    "bandit": {
      "command": "bandit -r src/ --severity-level medium -f json -o security-report.json",
      "returncode": 1,
      "stdout": "",
      "stderr": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n[json]\tINFO\tJSON output written to file: security-report.json\n",
      "duration": 0.15595030784606934,
      "success": false
    },
    "safety": {
      "command": "safety check --json",
      "returncode": 64,
      "stdout": "\n\n+===========================================================================================================================================================================================+\n\n\nDEPRECATED: this command (`check`) has been DEPRECATED, and will be unsupported beyond 01 June 2024.\n\n\nWe highly encourage switching to the new `scan` command which is easier to use, more powerful, and can be set up to mimic the deprecated command if required.\n\n\n+===========================================================================================================================================================================================+\n\n\n{\n    \"report_meta\": {\n        \"scan_target\": \"environment\",\n        \"scanned\": [\n            \"/usr/lib/python3.12\",\n            \"/home/beto/.local/lib/python3.12/site-packages\",\n            \"/usr/local/lib/python3.12/dist-packages\",\n            \"/usr/lib/python3.12/lib-dynload\",\n            \"/usr/lib/python312.zip\",\n            \"/usr/lib/python3/dist-packages\",\n            \"/home/beto/.local/bin\"\n        ],\n        \"scanned_full_path\": [\n            \"/home/beto/.local/bin\",\n            \"/usr/lib/python312.zip\",\n            \"/usr/lib/python3.12\",\n            \"/usr/lib/python3.12/lib-dynload\",\n            \"/home/beto/.local/lib/python3.12/site-packages\",\n            \"/usr/local/lib/python3.12/dist-packages\",\n            \"/usr/lib/python3/dist-packages\"\n        ],\n        \"target_languages\": [\n            \"python\"\n        ],\n        \"policy_file\": null,\n        \"policy_file_source\": \"local\",\n        \"audit_and_monitor\": false,\n        \"api_key\": false,\n        \"account\": \"\",\n        \"local_database_path\": null,\n        \"safety_version\": \"3.6.1\",\n        \"timestamp\": \"2025-09-16 17:44:35\",\n        \"packages_found\": 157,\n        \"vulnerabilities_found\": 22,\n        \"vulnerabilities_ignored\": 0,\n        \"remediations_recommended\": 0,\n        \"telemetry\": {\n            \"safety_options\": {\n                \"json\": {\n                    \"--json\": 1\n                }\n            },\n            \"safety_version\": \"3.6.1\",\n            \"safety_source\": \"cli\",\n            \"os_type\": \"Linux\",\n            \"os_release\": \"6.6.87.2-microsoft-standard-WSL2\",\n            \"os_description\": \"Linux-6.6.87.2-microsoft-standard-WSL2-x86_64-with-glibc2.39\",\n            \"python_version\": \"3.12.3\",\n            \"safety_command\": \"check\"\n        },\n        \"git\": {\n            \"branch\": \"main\",\n            \"tag\": \"\",\n            \"commit\": \"a17f33f4c16b7a317c2d4bd3d15ce55cdbeda4b6\",\n            \"dirty\": \"False\",\n            \"origin\": \"https://github.com/betolauda/transcrip-app.git\"\n        },\n        \"project\": null,\n        \"json_version\": \"1.1\",\n        \"remediations_attempted\": 0,\n        \"remediations_completed\": 0,\n        \"remediation_mode\": \"NON_INTERACTIVE\"\n    },\n    \"scanned_packages\": {\n        \"altair\": {\n            \"name\": \"altair\",\n            \"version\": \"5.5.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"altair==5.5.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"altair\",\n                    \"specifier\": \"==5.5.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"annotated-types\": {\n            \"name\": \"annotated-types\",\n            \"version\": \"0.7.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"annotated-types==0.7.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"annotated-types\",\n                    \"specifier\": \"==0.7.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"anyio\": {\n            \"name\": \"anyio\",\n            \"version\": \"4.10.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"anyio==4.10.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"anyio\",\n                    \"specifier\": \"==4.10.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"authlib\": {\n            \"name\": \"authlib\",\n            \"version\": \"1.6.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"authlib==1.6.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"authlib\",\n                    \"specifier\": \"==1.6.3\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"bandit\": {\n            \"name\": \"bandit\",\n            \"version\": \"1.8.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"bandit==1.8.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"bandit\",\n                    \"specifier\": \"==1.8.6\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"black\": {\n            \"name\": \"black\",\n            \"version\": \"25.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"black==25.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"black\",\n                    \"specifier\": \"==25.1.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"cachetools\": {\n            \"name\": \"cachetools\",\n            \"version\": \"6.2.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"cachetools==6.2.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"cachetools\",\n                    \"specifier\": \"==6.2.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"coverage\": {\n            \"name\": \"coverage\",\n            \"version\": \"7.10.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"coverage==7.10.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"coverage\",\n                    \"specifier\": \"==7.10.6\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"dparse\": {\n            \"name\": \"dparse\",\n            \"version\": \"0.6.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"dparse==0.6.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"dparse\",\n                    \"specifier\": \"==0.6.4\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"factory-boy\": {\n            \"name\": \"factory-boy\",\n            \"version\": \"3.3.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"factory-boy==3.3.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"factory-boy\",\n                    \"specifier\": \"==3.3.3\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"faker\": {\n            \"name\": \"faker\",\n            \"version\": \"37.8.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"faker==37.8.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"faker\",\n                    \"specifier\": \"==37.8.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"fastapi\": {\n            \"name\": \"fastapi\",\n            \"version\": \"0.116.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"fastapi==0.116.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"fastapi\",\n                    \"specifier\": \"==0.116.2\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"filelock\": {\n            \"name\": \"filelock\",\n            \"version\": \"3.19.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"filelock==3.19.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"filelock\",\n                    \"specifier\": \"==3.19.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"flake8\": {\n            \"name\": \"flake8\",\n            \"version\": \"7.3.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"flake8==7.3.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"flake8\",\n                    \"specifier\": \"==7.3.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"fsspec\": {\n            \"name\": \"fsspec\",\n            \"version\": \"2025.9.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"fsspec==2025.9.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"fsspec\",\n                    \"specifier\": \"==2025.9.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"gitdb\": {\n            \"name\": \"gitdb\",\n            \"version\": \"4.0.12\",\n            \"requirements\": [\n                {\n                    \"raw\": \"gitdb==4.0.12\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"gitdb\",\n                    \"specifier\": \"==4.0.12\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"gitpython\": {\n            \"name\": \"gitpython\",\n            \"version\": \"3.1.45\",\n            \"requirements\": [\n                {\n                    \"raw\": \"gitpython==3.1.45\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"gitpython\",\n                    \"specifier\": \"==3.1.45\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"h11\": {\n            \"name\": \"h11\",\n            \"version\": \"0.16.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"h11==0.16.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"h11\",\n                    \"specifier\": \"==0.16.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"httpcore\": {\n            \"name\": \"httpcore\",\n            \"version\": \"1.0.9\",\n            \"requirements\": [\n                {\n                    \"raw\": \"httpcore==1.0.9\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"httpcore\",\n                    \"specifier\": \"==1.0.9\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"httpx\": {\n            \"name\": \"httpx\",\n            \"version\": \"0.28.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"httpx==0.28.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"httpx\",\n                    \"specifier\": \"==0.28.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"iniconfig\": {\n            \"name\": \"iniconfig\",\n            \"version\": \"2.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"iniconfig==2.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"iniconfig\",\n                    \"specifier\": \"==2.1.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"isort\": {\n            \"name\": \"isort\",\n            \"version\": \"6.0.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"isort==6.0.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"isort\",\n                    \"specifier\": \"==6.0.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"joblib\": {\n            \"name\": \"joblib\",\n            \"version\": \"1.5.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"joblib==1.5.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"joblib\",\n                    \"specifier\": \"==1.5.2\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"llvmlite\": {\n            \"name\": \"llvmlite\",\n            \"version\": \"0.44.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"llvmlite==0.44.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"llvmlite\",\n                    \"specifier\": \"==0.44.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"marshmallow\": {\n            \"name\": \"marshmallow\",\n            \"version\": \"4.0.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"marshmallow==4.0.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"marshmallow\",\n                    \"specifier\": \"==4.0.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"mccabe\": {\n            \"name\": \"mccabe\",\n            \"version\": \"0.7.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mccabe==0.7.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mccabe\",\n                    \"specifier\": \"==0.7.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"more-itertools\": {\n            \"name\": \"more-itertools\",\n            \"version\": \"10.8.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"more-itertools==10.8.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"more-itertools\",\n                    \"specifier\": \"==10.8.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"mpmath\": {\n            \"name\": \"mpmath\",\n            \"version\": \"1.3.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mpmath==1.3.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mpmath\",\n                    \"specifier\": \"==1.3.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"mypy\": {\n            \"name\": \"mypy\",\n            \"version\": \"1.18.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mypy==1.18.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mypy\",\n                    \"specifier\": \"==1.18.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"mypy-extensions\": {\n            \"name\": \"mypy-extensions\",\n            \"version\": \"1.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mypy-extensions==1.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mypy-extensions\",\n                    \"specifier\": \"==1.1.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"narwhals\": {\n            \"name\": \"narwhals\",\n            \"version\": \"2.5.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"narwhals==2.5.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"narwhals\",\n                    \"specifier\": \"==2.5.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"networkx\": {\n            \"name\": \"networkx\",\n            \"version\": \"3.5\",\n            \"requirements\": [\n                {\n                    \"raw\": \"networkx==3.5\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"networkx\",\n                    \"specifier\": \"==3.5\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nltk\": {\n            \"name\": \"nltk\",\n            \"version\": \"3.9.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nltk==3.9.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nltk\",\n                    \"specifier\": \"==3.9.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"numba\": {\n            \"name\": \"numba\",\n            \"version\": \"0.61.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"numba==0.61.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"numba\",\n                    \"specifier\": \"==0.61.2\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"numpy\": {\n            \"name\": \"numpy\",\n            \"version\": \"2.2.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"numpy==2.2.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"numpy\",\n                    \"specifier\": \"==2.2.6\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-cublas-cu12\": {\n            \"name\": \"nvidia-cublas-cu12\",\n            \"version\": \"12.8.4.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-cublas-cu12==12.8.4.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-cublas-cu12\",\n                    \"specifier\": \"==12.8.4.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-cuda-cupti-cu12\": {\n            \"name\": \"nvidia-cuda-cupti-cu12\",\n            \"version\": \"12.8.90\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-cuda-cupti-cu12==12.8.90\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-cuda-cupti-cu12\",\n                    \"specifier\": \"==12.8.90\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-cuda-nvrtc-cu12\": {\n            \"name\": \"nvidia-cuda-nvrtc-cu12\",\n            \"version\": \"12.8.93\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-cuda-nvrtc-cu12==12.8.93\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-cuda-nvrtc-cu12\",\n                    \"specifier\": \"==12.8.93\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-cuda-runtime-cu12\": {\n            \"name\": \"nvidia-cuda-runtime-cu12\",\n            \"version\": \"12.8.90\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-cuda-runtime-cu12==12.8.90\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-cuda-runtime-cu12\",\n                    \"specifier\": \"==12.8.90\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-cudnn-cu12\": {\n            \"name\": \"nvidia-cudnn-cu12\",\n            \"version\": \"9.10.2.21\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-cudnn-cu12==9.10.2.21\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-cudnn-cu12\",\n                    \"specifier\": \"==9.10.2.21\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-cufft-cu12\": {\n            \"name\": \"nvidia-cufft-cu12\",\n            \"version\": \"11.3.3.83\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-cufft-cu12==11.3.3.83\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-cufft-cu12\",\n                    \"specifier\": \"==11.3.3.83\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-cufile-cu12\": {\n            \"name\": \"nvidia-cufile-cu12\",\n            \"version\": \"1.13.1.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-cufile-cu12==1.13.1.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-cufile-cu12\",\n                    \"specifier\": \"==1.13.1.3\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-curand-cu12\": {\n            \"name\": \"nvidia-curand-cu12\",\n            \"version\": \"10.3.9.90\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-curand-cu12==10.3.9.90\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-curand-cu12\",\n                    \"specifier\": \"==10.3.9.90\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-cusolver-cu12\": {\n            \"name\": \"nvidia-cusolver-cu12\",\n            \"version\": \"11.7.3.90\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-cusolver-cu12==11.7.3.90\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-cusolver-cu12\",\n                    \"specifier\": \"==11.7.3.90\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-cusparse-cu12\": {\n            \"name\": \"nvidia-cusparse-cu12\",\n            \"version\": \"12.5.8.93\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-cusparse-cu12==12.5.8.93\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-cusparse-cu12\",\n                    \"specifier\": \"==12.5.8.93\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-cusparselt-cu12\": {\n            \"name\": \"nvidia-cusparselt-cu12\",\n            \"version\": \"0.7.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-cusparselt-cu12==0.7.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-cusparselt-cu12\",\n                    \"specifier\": \"==0.7.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-nccl-cu12\": {\n            \"name\": \"nvidia-nccl-cu12\",\n            \"version\": \"2.27.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-nccl-cu12==2.27.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-nccl-cu12\",\n                    \"specifier\": \"==2.27.3\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-nvjitlink-cu12\": {\n            \"name\": \"nvidia-nvjitlink-cu12\",\n            \"version\": \"12.8.93\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-nvjitlink-cu12==12.8.93\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-nvjitlink-cu12\",\n                    \"specifier\": \"==12.8.93\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nvidia-nvtx-cu12\": {\n            \"name\": \"nvidia-nvtx-cu12\",\n            \"version\": \"12.8.90\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nvidia-nvtx-cu12==12.8.90\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nvidia-nvtx-cu12\",\n                    \"specifier\": \"==12.8.90\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"openai-whisper\": {\n            \"name\": \"openai-whisper\",\n            \"version\": \"20250625\",\n            \"requirements\": [\n                {\n                    \"raw\": \"openai-whisper==20250625\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"openai-whisper\",\n                    \"specifier\": \"==20250625\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"packaging\": {\n            \"name\": \"packaging\",\n            \"version\": \"25.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"packaging==25.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"packaging\",\n                    \"specifier\": \"==25.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pandas\": {\n            \"name\": \"pandas\",\n            \"version\": \"2.3.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pandas==2.3.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pandas\",\n                    \"specifier\": \"==2.3.2\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pathspec\": {\n            \"name\": \"pathspec\",\n            \"version\": \"0.12.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pathspec==0.12.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pathspec\",\n                    \"specifier\": \"==0.12.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pillow\": {\n            \"name\": \"pillow\",\n            \"version\": \"11.3.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pillow==11.3.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pillow\",\n                    \"specifier\": \"==11.3.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"platformdirs\": {\n            \"name\": \"platformdirs\",\n            \"version\": \"4.4.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"platformdirs==4.4.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"platformdirs\",\n                    \"specifier\": \"==4.4.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pluggy\": {\n            \"name\": \"pluggy\",\n            \"version\": \"1.6.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pluggy==1.6.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pluggy\",\n                    \"specifier\": \"==1.6.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"protobuf\": {\n            \"name\": \"protobuf\",\n            \"version\": \"6.32.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"protobuf==6.32.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"protobuf\",\n                    \"specifier\": \"==6.32.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"psutil\": {\n            \"name\": \"psutil\",\n            \"version\": \"7.0.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"psutil==7.0.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"psutil\",\n                    \"specifier\": \"==7.0.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pyarrow\": {\n            \"name\": \"pyarrow\",\n            \"version\": \"21.0.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyarrow==21.0.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyarrow\",\n                    \"specifier\": \"==21.0.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pycodestyle\": {\n            \"name\": \"pycodestyle\",\n            \"version\": \"2.14.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pycodestyle==2.14.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pycodestyle\",\n                    \"specifier\": \"==2.14.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pydantic\": {\n            \"name\": \"pydantic\",\n            \"version\": \"2.9.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pydantic==2.9.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pydantic\",\n                    \"specifier\": \"==2.9.2\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pydantic-core\": {\n            \"name\": \"pydantic-core\",\n            \"version\": \"2.23.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pydantic-core==2.23.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pydantic-core\",\n                    \"specifier\": \"==2.23.4\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pydeck\": {\n            \"name\": \"pydeck\",\n            \"version\": \"0.9.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pydeck==0.9.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pydeck\",\n                    \"specifier\": \"==0.9.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pyflakes\": {\n            \"name\": \"pyflakes\",\n            \"version\": \"3.4.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyflakes==3.4.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyflakes\",\n                    \"specifier\": \"==3.4.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pytest\": {\n            \"name\": \"pytest\",\n            \"version\": \"8.4.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pytest==8.4.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pytest\",\n                    \"specifier\": \"==8.4.2\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pytest-asyncio\": {\n            \"name\": \"pytest-asyncio\",\n            \"version\": \"1.2.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pytest-asyncio==1.2.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pytest-asyncio\",\n                    \"specifier\": \"==1.2.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pytest-cov\": {\n            \"name\": \"pytest-cov\",\n            \"version\": \"7.0.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pytest-cov==7.0.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pytest-cov\",\n                    \"specifier\": \"==7.0.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"python-dateutil\": {\n            \"name\": \"python-dateutil\",\n            \"version\": \"2.9.0.post0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"python-dateutil==2.9.0.post0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"python-dateutil\",\n                    \"specifier\": \"==2.9.0.post0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"python-magic\": {\n            \"name\": \"python-magic\",\n            \"version\": \"0.4.27\",\n            \"requirements\": [\n                {\n                    \"raw\": \"python-magic==0.4.27\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"python-magic\",\n                    \"specifier\": \"==0.4.27\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"python-multipart\": {\n            \"name\": \"python-multipart\",\n            \"version\": \"0.0.20\",\n            \"requirements\": [\n                {\n                    \"raw\": \"python-multipart==0.0.20\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"python-multipart\",\n                    \"specifier\": \"==0.0.20\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"regex\": {\n            \"name\": \"regex\",\n            \"version\": \"2025.9.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"regex==2025.9.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"regex\",\n                    \"specifier\": \"==2025.9.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"ruamel.yaml\": {\n            \"name\": \"ruamel.yaml\",\n            \"version\": \"0.18.15\",\n            \"requirements\": [\n                {\n                    \"raw\": \"ruamel.yaml==0.18.15\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"ruamel.yaml\",\n                    \"specifier\": \"==0.18.15\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"ruamel.yaml.clib\": {\n            \"name\": \"ruamel.yaml.clib\",\n            \"version\": \"0.2.12\",\n            \"requirements\": [\n                {\n                    \"raw\": \"ruamel.yaml.clib==0.2.12\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"ruamel.yaml.clib\",\n                    \"specifier\": \"==0.2.12\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"safety\": {\n            \"name\": \"safety\",\n            \"version\": \"3.6.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"safety==3.6.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"safety\",\n                    \"specifier\": \"==3.6.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"safety-schemas\": {\n            \"name\": \"safety-schemas\",\n            \"version\": \"0.0.14\",\n            \"requirements\": [\n                {\n                    \"raw\": \"safety-schemas==0.0.14\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"safety-schemas\",\n                    \"specifier\": \"==0.0.14\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"shellingham\": {\n            \"name\": \"shellingham\",\n            \"version\": \"1.5.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"shellingham==1.5.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"shellingham\",\n                    \"specifier\": \"==1.5.4\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"smmap\": {\n            \"name\": \"smmap\",\n            \"version\": \"5.0.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"smmap==5.0.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"smmap\",\n                    \"specifier\": \"==5.0.2\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"sniffio\": {\n            \"name\": \"sniffio\",\n            \"version\": \"1.3.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"sniffio==1.3.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"sniffio\",\n                    \"specifier\": \"==1.3.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"starlette\": {\n            \"name\": \"starlette\",\n            \"version\": \"0.48.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"starlette==0.48.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"starlette\",\n                    \"specifier\": \"==0.48.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"stevedore\": {\n            \"name\": \"stevedore\",\n            \"version\": \"5.5.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"stevedore==5.5.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"stevedore\",\n                    \"specifier\": \"==5.5.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"streamlit\": {\n            \"name\": \"streamlit\",\n            \"version\": \"1.49.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"streamlit==1.49.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"streamlit\",\n                    \"specifier\": \"==1.49.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"sympy\": {\n            \"name\": \"sympy\",\n            \"version\": \"1.14.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"sympy==1.14.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"sympy\",\n                    \"specifier\": \"==1.14.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"tenacity\": {\n            \"name\": \"tenacity\",\n            \"version\": \"9.1.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"tenacity==9.1.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"tenacity\",\n                    \"specifier\": \"==9.1.2\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"tiktoken\": {\n            \"name\": \"tiktoken\",\n            \"version\": \"0.11.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"tiktoken==0.11.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"tiktoken\",\n                    \"specifier\": \"==0.11.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"toml\": {\n            \"name\": \"toml\",\n            \"version\": \"0.10.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"toml==0.10.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"toml\",\n                    \"specifier\": \"==0.10.2\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"tomlkit\": {\n            \"name\": \"tomlkit\",\n            \"version\": \"0.13.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"tomlkit==0.13.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"tomlkit\",\n                    \"specifier\": \"==0.13.3\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"torch\": {\n            \"name\": \"torch\",\n            \"version\": \"2.8.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"torch==2.8.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"torch\",\n                    \"specifier\": \"==2.8.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"tornado\": {\n            \"name\": \"tornado\",\n            \"version\": \"6.5.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"tornado==6.5.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"tornado\",\n                    \"specifier\": \"==6.5.2\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"tqdm\": {\n            \"name\": \"tqdm\",\n            \"version\": \"4.67.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"tqdm==4.67.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"tqdm\",\n                    \"specifier\": \"==4.67.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"triton\": {\n            \"name\": \"triton\",\n            \"version\": \"3.4.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"triton==3.4.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"triton\",\n                    \"specifier\": \"==3.4.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"typer\": {\n            \"name\": \"typer\",\n            \"version\": \"0.17.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"typer==0.17.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"typer\",\n                    \"specifier\": \"==0.17.4\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"typing-extensions\": {\n            \"name\": \"typing-extensions\",\n            \"version\": \"4.15.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"typing-extensions==4.15.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"typing-extensions\",\n                    \"specifier\": \"==4.15.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"typing-inspection\": {\n            \"name\": \"typing-inspection\",\n            \"version\": \"0.4.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"typing-inspection==0.4.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"typing-inspection\",\n                    \"specifier\": \"==0.4.1\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"tzdata\": {\n            \"name\": \"tzdata\",\n            \"version\": \"2025.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"tzdata==2025.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"tzdata\",\n                    \"specifier\": \"==2025.2\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"uvicorn\": {\n            \"name\": \"uvicorn\",\n            \"version\": \"0.35.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"uvicorn==0.35.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"uvicorn\",\n                    \"specifier\": \"==0.35.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"watchdog\": {\n            \"name\": \"watchdog\",\n            \"version\": \"6.0.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"watchdog==6.0.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"watchdog\",\n                    \"specifier\": \"==6.0.0\",\n                    \"url\": null,\n                    \"found\": \"/home/beto/.local/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"automat\": {\n            \"name\": \"automat\",\n            \"version\": \"22.10.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"automat==22.10.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"automat\",\n                    \"specifier\": \"==22.10.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"babel\": {\n            \"name\": \"babel\",\n            \"version\": \"2.10.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"babel==2.10.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"babel\",\n                    \"specifier\": \"==2.10.3\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"jinja2\": {\n            \"name\": \"jinja2\",\n            \"version\": \"3.1.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jinja2==3.1.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jinja2\",\n                    \"specifier\": \"==3.1.2\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"markupsafe\": {\n            \"name\": \"markupsafe\",\n            \"version\": \"2.1.5\",\n            \"requirements\": [\n                {\n                    \"raw\": \"markupsafe==2.1.5\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"markupsafe\",\n                    \"specifier\": \"==2.1.5\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pygobject\": {\n            \"name\": \"pygobject\",\n            \"version\": \"3.48.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pygobject==3.48.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pygobject\",\n                    \"specifier\": \"==3.48.2\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pyjwt\": {\n            \"name\": \"pyjwt\",\n            \"version\": \"2.7.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyjwt==2.7.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyjwt\",\n                    \"specifier\": \"==2.7.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pyyaml\": {\n            \"name\": \"pyyaml\",\n            \"version\": \"6.0.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyyaml==6.0.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyyaml\",\n                    \"specifier\": \"==6.0.1\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"attrs\": {\n            \"name\": \"attrs\",\n            \"version\": \"23.2.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"attrs==23.2.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"attrs\",\n                    \"specifier\": \"==23.2.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"bcrypt\": {\n            \"name\": \"bcrypt\",\n            \"version\": \"3.2.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"bcrypt==3.2.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"bcrypt\",\n                    \"specifier\": \"==3.2.2\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"blinker\": {\n            \"name\": \"blinker\",\n            \"version\": \"1.7.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"blinker==1.7.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"blinker\",\n                    \"specifier\": \"==1.7.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"certifi\": {\n            \"name\": \"certifi\",\n            \"version\": \"2023.11.17\",\n            \"requirements\": [\n                {\n                    \"raw\": \"certifi==2023.11.17\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"certifi\",\n                    \"specifier\": \"==2023.11.17\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"chardet\": {\n            \"name\": \"chardet\",\n            \"version\": \"5.2.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"chardet==5.2.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"chardet\",\n                    \"specifier\": \"==5.2.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"click\": {\n            \"name\": \"click\",\n            \"version\": \"8.1.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"click==8.1.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"click\",\n                    \"specifier\": \"==8.1.6\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"cloud-init\": {\n            \"name\": \"cloud-init\",\n            \"version\": \"25.1.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"cloud-init==25.1.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"cloud-init\",\n                    \"specifier\": \"==25.1.4\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"colorama\": {\n            \"name\": \"colorama\",\n            \"version\": \"0.4.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"colorama==0.4.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"colorama\",\n                    \"specifier\": \"==0.4.6\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"command-not-found\": {\n            \"name\": \"command-not-found\",\n            \"version\": \"0.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"command-not-found==0.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"command-not-found\",\n                    \"specifier\": \"==0.3\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"configobj\": {\n            \"name\": \"configobj\",\n            \"version\": \"5.0.8\",\n            \"requirements\": [\n                {\n                    \"raw\": \"configobj==5.0.8\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"configobj\",\n                    \"specifier\": \"==5.0.8\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"constantly\": {\n            \"name\": \"constantly\",\n            \"version\": \"23.10.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"constantly==23.10.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"constantly\",\n                    \"specifier\": \"==23.10.4\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"cryptography\": {\n            \"name\": \"cryptography\",\n            \"version\": \"41.0.7\",\n            \"requirements\": [\n                {\n                    \"raw\": \"cryptography==41.0.7\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"cryptography\",\n                    \"specifier\": \"==41.0.7\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"dbus-python\": {\n            \"name\": \"dbus-python\",\n            \"version\": \"1.3.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"dbus-python==1.3.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"dbus-python\",\n                    \"specifier\": \"==1.3.2\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"distro\": {\n            \"name\": \"distro\",\n            \"version\": \"1.9.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"distro==1.9.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"distro\",\n                    \"specifier\": \"==1.9.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"distro-info\": {\n            \"name\": \"distro-info\",\n            \"version\": \"1.7+build1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"distro-info==1.7+build1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"distro-info\",\n                    \"specifier\": \"==1.7+build1\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"httplib2\": {\n            \"name\": \"httplib2\",\n            \"version\": \"0.20.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"httplib2==0.20.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"httplib2\",\n                    \"specifier\": \"==0.20.4\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"hyperlink\": {\n            \"name\": \"hyperlink\",\n            \"version\": \"21.0.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"hyperlink==21.0.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"hyperlink\",\n                    \"specifier\": \"==21.0.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"idna\": {\n            \"name\": \"idna\",\n            \"version\": \"3.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"idna==3.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"idna\",\n                    \"specifier\": \"==3.6\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"incremental\": {\n            \"name\": \"incremental\",\n            \"version\": \"22.10.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"incremental==22.10.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"incremental\",\n                    \"specifier\": \"==22.10.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"jsonpatch\": {\n            \"name\": \"jsonpatch\",\n            \"version\": \"1.32\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jsonpatch==1.32\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jsonpatch\",\n                    \"specifier\": \"==1.32\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"jsonpointer\": {\n            \"name\": \"jsonpointer\",\n            \"version\": \"2.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jsonpointer==2.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jsonpointer\",\n                    \"specifier\": \"==2.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"jsonschema\": {\n            \"name\": \"jsonschema\",\n            \"version\": \"4.10.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jsonschema==4.10.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jsonschema\",\n                    \"specifier\": \"==4.10.3\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"launchpadlib\": {\n            \"name\": \"launchpadlib\",\n            \"version\": \"1.11.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"launchpadlib==1.11.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"launchpadlib\",\n                    \"specifier\": \"==1.11.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"lazr.restfulclient\": {\n            \"name\": \"lazr.restfulclient\",\n            \"version\": \"0.14.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"lazr.restfulclient==0.14.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"lazr.restfulclient\",\n                    \"specifier\": \"==0.14.6\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"lazr.uri\": {\n            \"name\": \"lazr.uri\",\n            \"version\": \"1.0.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"lazr.uri==1.0.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"lazr.uri\",\n                    \"specifier\": \"==1.0.6\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"markdown-it-py\": {\n            \"name\": \"markdown-it-py\",\n            \"version\": \"3.0.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"markdown-it-py==3.0.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"markdown-it-py\",\n                    \"specifier\": \"==3.0.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"mdurl\": {\n            \"name\": \"mdurl\",\n            \"version\": \"0.1.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mdurl==0.1.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mdurl\",\n                    \"specifier\": \"==0.1.2\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"netifaces\": {\n            \"name\": \"netifaces\",\n            \"version\": \"0.11.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"netifaces==0.11.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"netifaces\",\n                    \"specifier\": \"==0.11.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"oauthlib\": {\n            \"name\": \"oauthlib\",\n            \"version\": \"3.2.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"oauthlib==3.2.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"oauthlib\",\n                    \"specifier\": \"==3.2.2\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pip\": {\n            \"name\": \"pip\",\n            \"version\": \"24.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pip==24.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pip\",\n                    \"specifier\": \"==24.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pyopenssl\": {\n            \"name\": \"pyopenssl\",\n            \"version\": \"23.2.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyopenssl==23.2.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyopenssl\",\n                    \"specifier\": \"==23.2.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pyasn1\": {\n            \"name\": \"pyasn1\",\n            \"version\": \"0.4.8\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyasn1==0.4.8\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyasn1\",\n                    \"specifier\": \"==0.4.8\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pyasn1-modules\": {\n            \"name\": \"pyasn1-modules\",\n            \"version\": \"0.2.8\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyasn1-modules==0.2.8\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyasn1-modules\",\n                    \"specifier\": \"==0.2.8\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pycurl\": {\n            \"name\": \"pycurl\",\n            \"version\": \"7.45.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pycurl==7.45.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pycurl\",\n                    \"specifier\": \"==7.45.3\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pygments\": {\n            \"name\": \"pygments\",\n            \"version\": \"2.17.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pygments==2.17.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pygments\",\n                    \"specifier\": \"==2.17.2\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pyhamcrest\": {\n            \"name\": \"pyhamcrest\",\n            \"version\": \"2.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyhamcrest==2.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyhamcrest\",\n                    \"specifier\": \"==2.1.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pyparsing\": {\n            \"name\": \"pyparsing\",\n            \"version\": \"3.1.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyparsing==3.1.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyparsing\",\n                    \"specifier\": \"==3.1.1\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pyrsistent\": {\n            \"name\": \"pyrsistent\",\n            \"version\": \"0.20.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyrsistent==0.20.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyrsistent\",\n                    \"specifier\": \"==0.20.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pyserial\": {\n            \"name\": \"pyserial\",\n            \"version\": \"3.5\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyserial==3.5\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyserial\",\n                    \"specifier\": \"==3.5\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"python-apt\": {\n            \"name\": \"python-apt\",\n            \"version\": \"2.7.7+ubuntu5\",\n            \"requirements\": [\n                {\n                    \"raw\": \"python-apt==2.7.7+ubuntu5\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"python-apt\",\n                    \"specifier\": \"==2.7.7+ubuntu5\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"pytz\": {\n            \"name\": \"pytz\",\n            \"version\": \"2024.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pytz==2024.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pytz\",\n                    \"specifier\": \"==2024.1\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"requests\": {\n            \"name\": \"requests\",\n            \"version\": \"2.31.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"requests==2.31.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"requests\",\n                    \"specifier\": \"==2.31.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"rich\": {\n            \"name\": \"rich\",\n            \"version\": \"13.7.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"rich==13.7.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"rich\",\n                    \"specifier\": \"==13.7.1\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"service-identity\": {\n            \"name\": \"service-identity\",\n            \"version\": \"24.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"service-identity==24.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"service-identity\",\n                    \"specifier\": \"==24.1.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"setuptools\": {\n            \"name\": \"setuptools\",\n            \"version\": \"68.1.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"setuptools==68.1.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"setuptools\",\n                    \"specifier\": \"==68.1.2\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"six\": {\n            \"name\": \"six\",\n            \"version\": \"1.16.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"six==1.16.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"six\",\n                    \"specifier\": \"==1.16.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"systemd-python\": {\n            \"name\": \"systemd-python\",\n            \"version\": \"235\",\n            \"requirements\": [\n                {\n                    \"raw\": \"systemd-python==235\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"systemd-python\",\n                    \"specifier\": \"==235\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"twisted\": {\n            \"name\": \"twisted\",\n            \"version\": \"24.3.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"twisted==24.3.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"twisted\",\n                    \"specifier\": \"==24.3.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"ubuntu-pro-client\": {\n            \"name\": \"ubuntu-pro-client\",\n            \"version\": \"8001\",\n            \"requirements\": [\n                {\n                    \"raw\": \"ubuntu-pro-client==8001\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"ubuntu-pro-client\",\n                    \"specifier\": \"==8001\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"unattended-upgrades\": {\n            \"name\": \"unattended-upgrades\",\n            \"version\": \"0.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"unattended-upgrades==0.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"unattended-upgrades\",\n                    \"specifier\": \"==0.1\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"urllib3\": {\n            \"name\": \"urllib3\",\n            \"version\": \"2.0.7\",\n            \"requirements\": [\n                {\n                    \"raw\": \"urllib3==2.0.7\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"urllib3\",\n                    \"specifier\": \"==2.0.7\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"wadllib\": {\n            \"name\": \"wadllib\",\n            \"version\": \"1.3.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"wadllib==1.3.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"wadllib\",\n                    \"specifier\": \"==1.3.6\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"wheel\": {\n            \"name\": \"wheel\",\n            \"version\": \"0.42.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"wheel==0.42.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"wheel\",\n                    \"specifier\": \"==0.42.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        },\n        \"zope.interface\": {\n            \"name\": \"zope.interface\",\n            \"version\": \"6.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"zope.interface==6.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"zope.interface\",\n                    \"specifier\": \"==6.1\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ]\n        }\n    },\n    \"affected_packages\": {\n        \"urllib3\": {\n            \"name\": \"urllib3\",\n            \"version\": \"2.0.7\",\n            \"requirements\": [\n                {\n                    \"raw\": \"urllib3==2.0.7\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"urllib3\",\n                    \"specifier\": \"==2.0.7\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ],\n            \"found\": null,\n            \"insecure_versions\": [\n                \"0.2\",\n                \"0.3\",\n                \"0.3.1\",\n                \"0.4.0\",\n                \"0.4.1\",\n                \"1.0\",\n                \"1.0.1\",\n                \"1.0.2\",\n                \"1.1\",\n                \"1.10\",\n                \"1.10.1\",\n                \"1.10.2\",\n                \"1.10.3\",\n                \"1.10.4\",\n                \"1.11\",\n                \"1.12\",\n                \"1.13\",\n                \"1.13.1\",\n                \"1.14\",\n                \"1.15\",\n                \"1.15.1\",\n                \"1.16\",\n                \"1.17\",\n                \"1.18\",\n                \"1.18.1\",\n                \"1.19\",\n                \"1.19.1\",\n                \"1.2\",\n                \"1.20\",\n                \"1.21\",\n                \"1.2.1\",\n                \"1.21.1\",\n                \"1.22\",\n                \"1.2.2\",\n                \"1.23\",\n                \"1.24\",\n                \"1.24.1\",\n                \"1.24.2\",\n                \"1.24.3\",\n                \"1.25\",\n                \"1.25.1\",\n                \"1.25.10\",\n                \"1.25.11\",\n                \"1.25.2\",\n                \"1.25.3\",\n                \"1.25.4\",\n                \"1.25.5\",\n                \"1.25.6\",\n                \"1.25.7\",\n                \"1.25.8\",\n                \"1.25.9\",\n                \"1.26.0\",\n                \"1.26.1\",\n                \"1.26.10\",\n                \"1.26.11\",\n                \"1.26.12\",\n                \"1.26.13\",\n                \"1.26.14\",\n                \"1.26.15\",\n                \"1.26.16\",\n                \"1.26.17\",\n                \"1.26.18\",\n                \"1.26.19\",\n                \"1.26.2\",\n                \"1.26.20\",\n                \"1.26.3\",\n                \"1.26.4\",\n                \"1.26.5\",\n                \"1.26.6\",\n                \"1.26.7\",\n                \"1.26.8\",\n                \"1.26.9\",\n                \"1.3\",\n                \"1.4\",\n                \"1.5\",\n                \"1.6\",\n                \"1.7\",\n                \"1.7.1\",\n                \"1.8\",\n                \"1.8.2\",\n                \"1.8.3\",\n                \"1.9\",\n                \"1.9.1\",\n                \"2.0.0\",\n                \"2.0.0a1\",\n                \"2.0.0a2\",\n                \"2.0.0a3\",\n                \"2.0.0a4\",\n                \"2.0.1\",\n                \"2.0.2\",\n                \"2.0.3\",\n                \"2.0.4\",\n                \"2.0.5\",\n                \"2.0.6\",\n                \"2.0.7\",\n                \"2.1.0\",\n                \"2.2.0\",\n                \"2.2.1\",\n                \"2.2.2\",\n                \"2.2.3\",\n                \"2.3.0\",\n                \"2.4.0\"\n            ],\n            \"secure_versions\": [\n                \"2.5.0\"\n            ],\n            \"latest_version_without_known_vulnerabilities\": \"2.5.0\",\n            \"latest_version\": \"2.5.0\",\n            \"more_info_url\": \"https://data.safetycli.com/p/pypi/urllib3/97c/\"\n        },\n        \"twisted\": {\n            \"name\": \"twisted\",\n            \"version\": \"24.3.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"twisted==24.3.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"twisted\",\n                    \"specifier\": \"==24.3.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ],\n            \"found\": null,\n            \"insecure_versions\": [\n                \"10.0.0\",\n                \"1.0.1\",\n                \"10.1.0\",\n                \"10.2.0\",\n                \"1.0.3\",\n                \"1.0.4\",\n                \"1.0.5\",\n                \"1.0.6\",\n                \"1.0.7\",\n                \"1.1.0\",\n                \"11.0.0\",\n                \"1.1.1\",\n                \"11.1.0\",\n                \"1.2.0\",\n                \"12.0.0\",\n                \"12.1.0\",\n                \"12.2.0\",\n                \"12.3.0\",\n                \"13.0.0\",\n                \"13.1.0\",\n                \"13.2.0\",\n                \"14.0.0\",\n                \"14.0.1\",\n                \"14.0.2\",\n                \"15.0.0\",\n                \"15.1.0\",\n                \"15.2.0\",\n                \"15.2.1\",\n                \"15.3.0\",\n                \"15.4.0\",\n                \"15.5.0\",\n                \"16.0.0\",\n                \"16.1.0\",\n                \"16.1.1\",\n                \"16.2.0\",\n                \"16.3.0\",\n                \"16.3.1\",\n                \"16.3.2\",\n                \"16.4.0\",\n                \"16.4.1\",\n                \"16.5.0\",\n                \"16.5.0rc1\",\n                \"16.5.0rc2\",\n                \"16.6.0\",\n                \"16.6.0rc1\",\n                \"16.7.0rc1\",\n                \"16.7.0rc2\",\n                \"17.1.0\",\n                \"17.1.0rc1\",\n                \"17.5.0\",\n                \"17.9.0\",\n                \"17.9.0rc1\",\n                \"18.4.0\",\n                \"18.4.0rc1\",\n                \"18.7.0\",\n                \"18.7.0rc1\",\n                \"18.7.0rc2\",\n                \"18.9.0\",\n                \"18.9.0rc1\",\n                \"19.10.0\",\n                \"19.10.0rc1\",\n                \"19.2.0\",\n                \"19.2.0rc1\",\n                \"19.2.0rc2\",\n                \"19.2.1\",\n                \"19.7.0\",\n                \"19.7.0rc1\",\n                \"20.3.0\",\n                \"20.3.0rc1\",\n                \"2.1.0\",\n                \"21.2.0\",\n                \"21.2.0rc1\",\n                \"21.7.0\",\n                \"21.7.0rc1\",\n                \"21.7.0rc2\",\n                \"21.7.0rc3\",\n                \"22.1.0\",\n                \"22.10.0\",\n                \"22.10.0rc1\",\n                \"22.1.0rc1\",\n                \"22.2.0\",\n                \"22.2.0rc1\",\n                \"22.4.0\",\n                \"22.4.0rc1\",\n                \"22.8.0\",\n                \"22.8.0rc1\",\n                \"23.10.0\",\n                \"23.10.0rc1\",\n                \"23.8.0\",\n                \"23.8.0rc1\",\n                \"2.4.0\",\n                \"24.2.0rc1\",\n                \"24.3.0\",\n                \"2.5.0\",\n                \"8.0.0\",\n                \"8.0.1\",\n                \"8.1.0\",\n                \"8.2.0\",\n                \"9.0.0\"\n            ],\n            \"secure_versions\": [\n                \"25.5.0\",\n                \"25.5.0rc1\",\n                \"24.11.0\",\n                \"24.11.0rc2\",\n                \"24.11.0rc1\",\n                \"24.10.0\",\n                \"24.10.0rc1\",\n                \"24.7.0\",\n                \"24.7.0rc2\",\n                \"24.7.0rc1\"\n            ],\n            \"latest_version_without_known_vulnerabilities\": \"25.5.0\",\n            \"latest_version\": \"25.5.0\",\n            \"more_info_url\": \"https://data.safetycli.com/p/pypi/twisted/97c/\"\n        },\n        \"setuptools\": {\n            \"name\": \"setuptools\",\n            \"version\": \"68.1.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"setuptools==68.1.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"setuptools\",\n                    \"specifier\": \"==68.1.2\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ],\n            \"found\": null,\n            \"insecure_versions\": [\n                \"0.6b1\",\n                \"0.6b2\",\n                \"0.6b3\",\n                \"0.6b4\",\n                \"0.6rc1\",\n                \"0.6rc10\",\n                \"0.6rc11\",\n                \"0.6rc2\",\n                \"0.6rc3\",\n                \"0.6rc4\",\n                \"0.6rc5\",\n                \"0.6rc6\",\n                \"0.6rc7\",\n                \"0.6rc8\",\n                \"0.6rc9\",\n                \"0.7.2\",\n                \"0.7.3\",\n                \"0.7.4\",\n                \"0.7.5\",\n                \"0.7.6\",\n                \"0.7.7\",\n                \"0.7.8\",\n                \"0.8\",\n                \"0.9\",\n                \"0.9.1\",\n                \"0.9.2\",\n                \"0.9.3\",\n                \"0.9.4\",\n                \"0.9.5\",\n                \"0.9.6\",\n                \"0.9.7\",\n                \"0.9.8\",\n                \"1.0\",\n                \"10.0\",\n                \"10.0.1\",\n                \"10.1\",\n                \"10.2\",\n                \"10.2.1\",\n                \"1.1\",\n                \"11.0\",\n                \"1.1.1\",\n                \"11.1\",\n                \"1.1.2\",\n                \"11.2\",\n                \"1.1.3\",\n                \"11.3\",\n                \"11.3.1\",\n                \"1.1.4\",\n                \"1.1.5\",\n                \"1.1.6\",\n                \"1.1.7\",\n                \"1.2\",\n                \"12.0\",\n                \"12.0.1\",\n                \"12.0.2\",\n                \"12.0.3\",\n                \"12.0.4\",\n                \"12.0.5\",\n                \"12.1\",\n                \"12.2\",\n                \"12.3\",\n                \"12.4\",\n                \"1.3\",\n                \"13.0\",\n                \"13.0.1\",\n                \"13.0.2\",\n                \"1.3.1\",\n                \"1.3.2\",\n                \"1.4\",\n                \"14.0\",\n                \"1.4.1\",\n                \"14.1\",\n                \"14.1.1\",\n                \"1.4.2\",\n                \"14.2\",\n                \"14.3\",\n                \"14.3.1\",\n                \"15.0\",\n                \"15.1\",\n                \"15.2\",\n                \"16.0\",\n                \"17.0\",\n                \"17.1\",\n                \"17.1.1\",\n                \"18.0\",\n                \"18.0.1\",\n                \"18.1\",\n                \"18.2\",\n                \"18.3\",\n                \"18.3.1\",\n                \"18.3.2\",\n                \"18.4\",\n                \"18.5\",\n                \"18.6\",\n                \"18.6.1\",\n                \"18.7\",\n                \"18.7.1\",\n                \"18.8\",\n                \"18.8.1\",\n                \"19.0\",\n                \"19.1\",\n                \"19.1.1\",\n                \"19.2\",\n                \"19.3\",\n                \"19.4\",\n                \"19.4.1\",\n                \"19.5\",\n                \"19.6\",\n                \"19.6.1\",\n                \"19.6.2\",\n                \"19.7\",\n                \"2.0\",\n                \"20.0\",\n                \"2.0.1\",\n                \"20.1\",\n                \"20.10.1\",\n                \"20.1.1\",\n                \"2.0.2\",\n                \"20.2.2\",\n                \"20.3\",\n                \"20.3.1\",\n                \"20.4\",\n                \"20.6.6\",\n                \"20.6.7\",\n                \"20.6.8\",\n                \"20.7.0\",\n                \"20.8.0\",\n                \"20.8.1\",\n                \"20.9.0\",\n                \"2.1\",\n                \"21.0.0\",\n                \"2.1.1\",\n                \"21.1.0\",\n                \"2.1.2\",\n                \"21.2.0\",\n                \"21.2.1\",\n                \"21.2.2\",\n                \"2.2\",\n                \"22.0.0\",\n                \"22.0.1\",\n                \"22.0.2\",\n                \"22.0.4\",\n                \"22.0.5\",\n                \"23.0.0\",\n                \"23.1.0\",\n                \"23.2.0\",\n                \"23.2.1\",\n                \"24.0.0\",\n                \"24.0.1\",\n                \"24.0.2\",\n                \"24.0.3\",\n                \"24.1.0\",\n                \"24.1.1\",\n                \"24.2.0\",\n                \"24.2.1\",\n                \"24.3.0\",\n                \"24.3.1\",\n                \"25.0.0\",\n                \"25.0.1\",\n                \"25.0.2\",\n                \"25.1.0\",\n                \"25.1.1\",\n                \"25.1.2\",\n                \"25.1.3\",\n                \"25.1.4\",\n                \"25.1.5\",\n                \"25.1.6\",\n                \"25.2.0\",\n                \"25.3.0\",\n                \"25.4.0\",\n                \"26.0.0\",\n                \"26.1.0\",\n                \"26.1.1\",\n                \"27.0.0\",\n                \"27.1.0\",\n                \"27.1.2\",\n                \"27.2.0\",\n                \"27.3.0\",\n                \"27.3.1\",\n                \"28.0.0\",\n                \"28.1.0\",\n                \"28.2.0\",\n                \"28.3.0\",\n                \"28.4.0\",\n                \"28.5.0\",\n                \"28.6.0\",\n                \"28.6.1\",\n                \"28.7.0\",\n                \"28.7.1\",\n                \"28.8.0\",\n                \"28.8.1\",\n                \"29.0.0\",\n                \"29.0.1\",\n                \"3.0\",\n                \"30.0.0\",\n                \"3.0.1\",\n                \"30.1.0\",\n                \"3.0.2\",\n                \"30.2.0\",\n                \"30.2.1\",\n                \"30.3.0\",\n                \"30.4.0\",\n                \"3.1\",\n                \"31.0.0\",\n                \"31.0.1\",\n                \"3.2\",\n                \"32.0.0\",\n                \"32.1.0\",\n                \"32.1.1\",\n                \"32.1.2\",\n                \"32.1.3\",\n                \"32.2.0\",\n                \"32.3.0\",\n                \"32.3.1\",\n                \"3.3\",\n                \"33.1.0\",\n                \"33.1.1\",\n                \"3.4\",\n                \"34.0.0\",\n                \"34.0.1\",\n                \"34.0.2\",\n                \"34.0.3\",\n                \"3.4.1\",\n                \"34.1.0\",\n                \"34.1.1\",\n                \"3.4.2\",\n                \"34.2.0\",\n                \"3.4.3\",\n                \"34.3.0\",\n                \"34.3.1\",\n                \"34.3.2\",\n                \"34.3.3\",\n                \"3.4.4\",\n                \"34.4.0\",\n                \"34.4.1\",\n                \"3.5\",\n                \"35.0.0\",\n                \"35.0.1\",\n                \"35.0.2\",\n                \"3.5.1\",\n                \"3.5.2\",\n                \"3.6\",\n                \"36.0.1\",\n                \"36.1.0\",\n                \"36.1.1\",\n                \"36.2.0\",\n                \"36.2.1\",\n                \"36.2.2\",\n                \"36.2.3\",\n                \"36.2.4\",\n                \"36.2.5\",\n                \"36.2.6\",\n                \"36.2.7\",\n                \"36.3.0\",\n                \"36.4.0\",\n                \"36.5.0\",\n                \"36.6.0\",\n                \"36.6.1\",\n                \"36.7.0\",\n                \"36.7.1\",\n                \"36.7.2\",\n                \"36.8.0\",\n                \"3.7\",\n                \"37.0.0\",\n                \"3.7.1\",\n                \"3.8\",\n                \"38.0.0\",\n                \"3.8.1\",\n                \"38.1.0\",\n                \"38.2.0\",\n                \"38.2.1\",\n                \"38.2.3\",\n                \"38.2.4\",\n                \"38.2.5\",\n                \"38.3.0\",\n                \"38.4.0\",\n                \"38.4.1\",\n                \"38.5.0\",\n                \"38.5.1\",\n                \"38.5.2\",\n                \"38.6.0\",\n                \"38.6.1\",\n                \"38.7.0\",\n                \"39.0.0\",\n                \"39.0.1\",\n                \"39.1.0\",\n                \"39.2.0\",\n                \"4.0\",\n                \"40.0.0\",\n                \"4.0.1\",\n                \"40.1.0\",\n                \"40.1.1\",\n                \"40.2.0\",\n                \"40.3.0\",\n                \"40.4.0\",\n                \"40.4.1\",\n                \"40.4.2\",\n                \"40.4.3\",\n                \"40.5.0\",\n                \"40.6.0\",\n                \"40.6.1\",\n                \"40.6.2\",\n                \"40.6.3\",\n                \"40.7.0\",\n                \"40.7.1\",\n                \"40.7.2\",\n                \"40.7.3\",\n                \"40.8.0\",\n                \"40.9.0\",\n                \"41.0.0\",\n                \"41.0.1\",\n                \"41.1.0\",\n                \"41.2.0\",\n                \"41.3.0\",\n                \"41.4.0\",\n                \"41.5.0\",\n                \"41.5.1\",\n                \"41.6.0\",\n                \"42.0.0\",\n                \"42.0.1\",\n                \"42.0.2\",\n                \"43.0.0\",\n                \"44.0.0\",\n                \"44.1.0\",\n                \"44.1.1\",\n                \"45.0.0\",\n                \"45.1.0\",\n                \"45.2.0\",\n                \"45.3.0\",\n                \"46.0.0\",\n                \"46.1.0\",\n                \"46.1.1\",\n                \"46.1.2\",\n                \"46.1.3\",\n                \"46.2.0\",\n                \"46.3.0\",\n                \"46.3.1\",\n                \"46.4.0\",\n                \"47.0.0\",\n                \"47.1.0\",\n                \"47.1.1\",\n                \"47.2.0\",\n                \"47.3.0\",\n                \"47.3.1\",\n                \"47.3.2\",\n                \"48.0.0\",\n                \"49.0.0\",\n                \"49.0.1\",\n                \"49.1.0\",\n                \"49.1.1\",\n                \"49.1.2\",\n                \"49.1.3\",\n                \"49.2.0\",\n                \"49.2.1\",\n                \"49.3.0\",\n                \"49.3.1\",\n                \"49.3.2\",\n                \"49.4.0\",\n                \"49.5.0\",\n                \"49.6.0\",\n                \"5.0\",\n                \"50.0.0\",\n                \"50.0.1\",\n                \"50.0.2\",\n                \"50.0.3\",\n                \"5.0.1\",\n                \"50.1.0\",\n                \"5.0.2\",\n                \"50.2.0\",\n                \"50.3.0\",\n                \"50.3.1\",\n                \"50.3.2\",\n                \"5.1\",\n                \"51.0.0\",\n                \"51.1.0\",\n                \"51.1.0.post20201221\",\n                \"51.1.1\",\n                \"51.1.2\",\n                \"51.2.0\",\n                \"51.3.0\",\n                \"51.3.1\",\n                \"51.3.2\",\n                \"51.3.3\",\n                \"5.2\",\n                \"52.0.0\",\n                \"5.3\",\n                \"53.0.0\",\n                \"53.1.0\",\n                \"5.4\",\n                \"54.0.0\",\n                \"5.4.1\",\n                \"54.1.0\",\n                \"54.1.1\",\n                \"54.1.2\",\n                \"54.1.3\",\n                \"5.4.2\",\n                \"54.2.0\",\n                \"5.5\",\n                \"5.5.1\",\n                \"5.6\",\n                \"56.0.0\",\n                \"56.1.0\",\n                \"56.2.0\",\n                \"5.7\",\n                \"57.0.0\",\n                \"57.1.0\",\n                \"57.2.0\",\n                \"57.3.0\",\n                \"57.4.0\",\n                \"57.5.0\",\n                \"5.8\",\n                \"58.0.0\",\n                \"58.0.1\",\n                \"58.0.2\",\n                \"58.0.3\",\n                \"58.0.4\",\n                \"58.1.0\",\n                \"58.2.0\",\n                \"58.3.0\",\n                \"58.4.0\",\n                \"58.5.0\",\n                \"58.5.1\",\n                \"58.5.2\",\n                \"58.5.3\",\n                \"59.0.1\",\n                \"59.1.0\",\n                \"59.1.1\",\n                \"59.2.0\",\n                \"59.3.0\",\n                \"59.4.0\",\n                \"59.5.0\",\n                \"59.6.0\",\n                \"59.7.0\",\n                \"59.8.0\",\n                \"60.0.0\",\n                \"60.0.1\",\n                \"60.0.2\",\n                \"60.0.3\",\n                \"60.0.4\",\n                \"60.0.5\",\n                \"6.0.1\",\n                \"60.1.0\",\n                \"60.10.0\",\n                \"60.1.1\",\n                \"6.0.2\",\n                \"60.2.0\",\n                \"60.3.0\",\n                \"60.3.1\",\n                \"60.4.0\",\n                \"60.5.0\",\n                \"60.6.0\",\n                \"60.7.0\",\n                \"60.7.1\",\n                \"60.8.0\",\n                \"60.8.1\",\n                \"60.8.2\",\n                \"60.9.0\",\n                \"60.9.1\",\n                \"60.9.2\",\n                \"60.9.3\",\n                \"6.1\",\n                \"61.0.0\",\n                \"61.1.0\",\n                \"61.1.1\",\n                \"61.2.0\",\n                \"61.3.0\",\n                \"61.3.1\",\n                \"62.0.0\",\n                \"62.1.0\",\n                \"62.2.0\",\n                \"62.3.0\",\n                \"62.3.1\",\n                \"62.3.2\",\n                \"62.3.3\",\n                \"62.3.4\",\n                \"62.4.0\",\n                \"62.5.0\",\n                \"62.6.0\",\n                \"63.0.0\",\n                \"63.0.0b1\",\n                \"63.1.0\",\n                \"63.2.0\",\n                \"63.3.0\",\n                \"63.4.0\",\n                \"63.4.1\",\n                \"63.4.2\",\n                \"63.4.3\",\n                \"64.0.0\",\n                \"64.0.1\",\n                \"64.0.2\",\n                \"64.0.3\",\n                \"65.0.0\",\n                \"65.0.1\",\n                \"65.0.2\",\n                \"65.1.0\",\n                \"65.1.1\",\n                \"65.2.0\",\n                \"65.3.0\",\n                \"65.4.0\",\n                \"65.4.1\",\n                \"65.5.0\",\n                \"65.5.1\",\n                \"65.6.0\",\n                \"65.6.1\",\n                \"65.6.2\",\n                \"65.6.3\",\n                \"65.7.0\",\n                \"66.0.0\",\n                \"66.1.0\",\n                \"66.1.1\",\n                \"67.0.0\",\n                \"67.1.0\",\n                \"67.2.0\",\n                \"67.3.1\",\n                \"67.3.2\",\n                \"67.3.3\",\n                \"67.4.0\",\n                \"67.5.0\",\n                \"67.5.1\",\n                \"67.6.0\",\n                \"67.6.1\",\n                \"67.7.0\",\n                \"67.7.1\",\n                \"67.7.2\",\n                \"67.8.0\",\n                \"68.0.0\",\n                \"68.1.0\",\n                \"68.1.2\",\n                \"68.2.0\",\n                \"68.2.1\",\n                \"68.2.2\",\n                \"69.0.0\",\n                \"69.0.1\",\n                \"69.0.2\",\n                \"69.0.3\",\n                \"69.1.0\",\n                \"69.1.1\",\n                \"69.2.0\",\n                \"69.3.0\",\n                \"69.3.1\",\n                \"69.4.0\",\n                \"69.4.1\",\n                \"69.4.2\",\n                \"69.5.0\",\n                \"69.5.1\",\n                \"7.0\",\n                \"70.0.0\",\n                \"70.1.0\",\n                \"70.1.1\",\n                \"70.2.0\",\n                \"70.3.0\",\n                \"71.0.0\",\n                \"71.0.1\",\n                \"71.0.2\",\n                \"71.0.3\",\n                \"71.0.4\",\n                \"71.1.0\",\n                \"72.0.0\",\n                \"72.1.0\",\n                \"72.2.0\",\n                \"73.0.0\",\n                \"73.0.1\",\n                \"74.0.0\",\n                \"74.1.0\",\n                \"74.1.1\",\n                \"74.1.2\",\n                \"74.1.3\",\n                \"75.0.0\",\n                \"75.1.0\",\n                \"75.2.0\",\n                \"75.3.0\",\n                \"75.3.1\",\n                \"75.3.2\",\n                \"75.4.0\",\n                \"75.5.0\",\n                \"75.6.0\",\n                \"75.7.0\",\n                \"75.8.0\",\n                \"75.8.1\",\n                \"75.8.2\",\n                \"75.9.0\",\n                \"75.9.1\",\n                \"76.0.0\",\n                \"76.1.0\",\n                \"77.0.1\",\n                \"77.0.3\",\n                \"78.0.1\",\n                \"78.0.2\",\n                \"78.1.0\",\n                \"8.0\",\n                \"8.0.1\",\n                \"8.0.2\",\n                \"8.0.3\",\n                \"8.0.4\",\n                \"8.1\",\n                \"8.2\",\n                \"8.2.1\",\n                \"8.3\",\n                \"9.0\",\n                \"9.0.1\",\n                \"9.1\"\n            ],\n            \"secure_versions\": [\n                \"80.9.0\",\n                \"80.8.0\",\n                \"80.7.1\",\n                \"80.7.0\",\n                \"80.6.0\",\n                \"80.4.0\",\n                \"80.3.1\",\n                \"80.3.0\",\n                \"80.2.0\",\n                \"80.1.0\",\n                \"80.0.1\",\n                \"80.0.0\",\n                \"79.0.1\",\n                \"79.0.0\",\n                \"78.1.1\"\n            ],\n            \"latest_version_without_known_vulnerabilities\": \"80.9.0\",\n            \"latest_version\": \"80.9.0\",\n            \"more_info_url\": \"https://data.safetycli.com/p/pypi/setuptools/97c/\"\n        },\n        \"requests\": {\n            \"name\": \"requests\",\n            \"version\": \"2.31.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"requests==2.31.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"requests\",\n                    \"specifier\": \"==2.31.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ],\n            \"found\": null,\n            \"insecure_versions\": [\n                \"0.0.1\",\n                \"0.10.0\",\n                \"0.10.1\",\n                \"0.10.2\",\n                \"0.10.3\",\n                \"0.10.4\",\n                \"0.10.6\",\n                \"0.10.7\",\n                \"0.10.8\",\n                \"0.11.1\",\n                \"0.11.2\",\n                \"0.12.0\",\n                \"0.12.1\",\n                \"0.13.0\",\n                \"0.13.1\",\n                \"0.13.2\",\n                \"0.13.3\",\n                \"0.13.4\",\n                \"0.13.5\",\n                \"0.13.6\",\n                \"0.13.7\",\n                \"0.13.8\",\n                \"0.13.9\",\n                \"0.14.0\",\n                \"0.14.1\",\n                \"0.14.2\",\n                \"0.2.0\",\n                \"0.2.1\",\n                \"0.2.2\",\n                \"0.2.3\",\n                \"0.2.4\",\n                \"0.3.0\",\n                \"0.3.1\",\n                \"0.3.2\",\n                \"0.3.3\",\n                \"0.3.4\",\n                \"0.4.0\",\n                \"0.4.1\",\n                \"0.5.0\",\n                \"0.5.1\",\n                \"0.6.0\",\n                \"0.6.1\",\n                \"0.6.2\",\n                \"0.6.3\",\n                \"0.6.4\",\n                \"0.6.5\",\n                \"0.6.6\",\n                \"0.7.0\",\n                \"0.7.1\",\n                \"0.7.2\",\n                \"0.7.3\",\n                \"0.7.4\",\n                \"0.7.5\",\n                \"0.7.6\",\n                \"0.8.0\",\n                \"0.8.1\",\n                \"0.8.2\",\n                \"0.8.3\",\n                \"0.8.4\",\n                \"0.8.5\",\n                \"0.8.6\",\n                \"0.8.7\",\n                \"0.8.8\",\n                \"0.8.9\",\n                \"0.9.0\",\n                \"0.9.1\",\n                \"0.9.2\",\n                \"0.9.3\",\n                \"1.0.0\",\n                \"1.0.1\",\n                \"1.0.2\",\n                \"1.0.3\",\n                \"1.0.4\",\n                \"1.1.0\",\n                \"1.2.0\",\n                \"1.2.1\",\n                \"1.2.2\",\n                \"1.2.3\",\n                \"2.0.0\",\n                \"2.0.1\",\n                \"2.1.0\",\n                \"2.10.0\",\n                \"2.11.0\",\n                \"2.11.1\",\n                \"2.12.0\",\n                \"2.12.1\",\n                \"2.12.2\",\n                \"2.12.3\",\n                \"2.12.4\",\n                \"2.12.5\",\n                \"2.13.0\",\n                \"2.14.0\",\n                \"2.14.1\",\n                \"2.14.2\",\n                \"2.15.0\",\n                \"2.15.1\",\n                \"2.16.0\",\n                \"2.16.1\",\n                \"2.16.2\",\n                \"2.16.3\",\n                \"2.16.4\",\n                \"2.16.5\",\n                \"2.17.0\",\n                \"2.17.1\",\n                \"2.17.2\",\n                \"2.17.3\",\n                \"2.18.0\",\n                \"2.18.1\",\n                \"2.18.2\",\n                \"2.18.3\",\n                \"2.18.4\",\n                \"2.19.0\",\n                \"2.19.1\",\n                \"2.2.0\",\n                \"2.20.0\",\n                \"2.20.1\",\n                \"2.2.1\",\n                \"2.21.0\",\n                \"2.22.0\",\n                \"2.23.0\",\n                \"2.24.0\",\n                \"2.25.0\",\n                \"2.25.1\",\n                \"2.26.0\",\n                \"2.27.0\",\n                \"2.27.1\",\n                \"2.28.0\",\n                \"2.28.1\",\n                \"2.28.2\",\n                \"2.29.0\",\n                \"2.3.0\",\n                \"2.30.0\",\n                \"2.31.0\",\n                \"2.32.0\",\n                \"2.32.1\",\n                \"2.32.2\",\n                \"2.32.3\",\n                \"2.4.0\",\n                \"2.4.1\",\n                \"2.4.2\",\n                \"2.4.3\",\n                \"2.5.0\",\n                \"2.5.1\",\n                \"2.5.2\",\n                \"2.5.3\",\n                \"2.6.0\",\n                \"2.6.1\",\n                \"2.6.2\",\n                \"2.7.0\",\n                \"2.8.0\",\n                \"2.8.1\",\n                \"2.9.0\",\n                \"2.9.1\",\n                \"2.9.2\"\n            ],\n            \"secure_versions\": [\n                \"2.32.5\",\n                \"2.32.4\"\n            ],\n            \"latest_version_without_known_vulnerabilities\": \"2.32.5\",\n            \"latest_version\": \"2.32.5\",\n            \"more_info_url\": \"https://data.safetycli.com/p/pypi/requests/97c/\"\n        },\n        \"pip\": {\n            \"name\": \"pip\",\n            \"version\": \"24.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pip==24.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pip\",\n                    \"specifier\": \"==24.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ],\n            \"found\": null,\n            \"insecure_versions\": [\n                \"0.2\",\n                \"0.2.1\",\n                \"0.3\",\n                \"0.3.1\",\n                \"0.4\",\n                \"0.5\",\n                \"0.5.1\",\n                \"0.6\",\n                \"0.6.1\",\n                \"0.6.2\",\n                \"0.6.3\",\n                \"0.7\",\n                \"0.7.1\",\n                \"0.7.2\",\n                \"0.8\",\n                \"0.8.1\",\n                \"0.8.2\",\n                \"0.8.3\",\n                \"1.0\",\n                \"10.0.0\",\n                \"10.0.0b1\",\n                \"10.0.0b2\",\n                \"10.0.1\",\n                \"1.0.1\",\n                \"1.0.2\",\n                \"1.1\",\n                \"1.2\",\n                \"1.2.1\",\n                \"1.3\",\n                \"1.3.1\",\n                \"1.4\",\n                \"1.4.1\",\n                \"1.5\",\n                \"1.5.1\",\n                \"1.5.2\",\n                \"1.5.3\",\n                \"1.5.4\",\n                \"1.5.5\",\n                \"1.5.6\",\n                \"18.0\",\n                \"18.1\",\n                \"19.0\",\n                \"19.0.1\",\n                \"19.0.2\",\n                \"19.0.3\",\n                \"19.1\",\n                \"19.1.1\",\n                \"19.2\",\n                \"19.2.1\",\n                \"19.2.2\",\n                \"19.2.3\",\n                \"19.3\",\n                \"19.3.1\",\n                \"20.0\",\n                \"20.0.1\",\n                \"20.0.2\",\n                \"20.1\",\n                \"20.1.1\",\n                \"20.1b1\",\n                \"20.2\",\n                \"20.2.1\",\n                \"20.2.2\",\n                \"20.2.3\",\n                \"20.2.4\",\n                \"20.2b1\",\n                \"20.3\",\n                \"20.3.1\",\n                \"20.3.2\",\n                \"20.3.3\",\n                \"20.3.4\",\n                \"20.3b1\",\n                \"21.0\",\n                \"21.0.1\",\n                \"21.1\",\n                \"21.1.1\",\n                \"21.1.2\",\n                \"21.1.3\",\n                \"21.2\",\n                \"21.2.1\",\n                \"21.2.2\",\n                \"21.2.3\",\n                \"21.2.4\",\n                \"21.3\",\n                \"21.3.1\",\n                \"22.0\",\n                \"22.0.1\",\n                \"22.0.2\",\n                \"22.0.3\",\n                \"22.0.4\",\n                \"22.1\",\n                \"22.1.1\",\n                \"22.1.2\",\n                \"22.1b1\",\n                \"22.2\",\n                \"22.2.1\",\n                \"22.2.2\",\n                \"22.3\",\n                \"22.3.1\",\n                \"23.0\",\n                \"23.0.1\",\n                \"23.1\",\n                \"23.1.1\",\n                \"23.1.2\",\n                \"23.2\",\n                \"23.2.1\",\n                \"23.3\",\n                \"23.3.1\",\n                \"23.3.2\",\n                \"24.0\",\n                \"24.1\",\n                \"24.1.1\",\n                \"24.1.2\",\n                \"24.1b1\",\n                \"24.1b2\",\n                \"24.2\",\n                \"24.3\",\n                \"24.3.1\",\n                \"6.0\",\n                \"6.0.1\",\n                \"6.0.2\",\n                \"6.0.3\",\n                \"6.0.4\",\n                \"6.0.5\",\n                \"6.0.6\",\n                \"6.0.7\",\n                \"6.0.8\",\n                \"6.1.0\",\n                \"6.1.1\",\n                \"7.0.0\",\n                \"7.0.1\",\n                \"7.0.2\",\n                \"7.0.3\",\n                \"7.1.0\",\n                \"7.1.1\",\n                \"7.1.2\",\n                \"8.0.0\",\n                \"8.0.1\",\n                \"8.0.2\",\n                \"8.0.3\",\n                \"8.1.0\",\n                \"8.1.1\",\n                \"8.1.2\",\n                \"9.0.0\",\n                \"9.0.1\",\n                \"9.0.2\",\n                \"9.0.3\"\n            ],\n            \"secure_versions\": [\n                \"25.2\",\n                \"25.1.1\",\n                \"25.1\",\n                \"25.0.1\",\n                \"25.0\"\n            ],\n            \"latest_version_without_known_vulnerabilities\": \"25.2\",\n            \"latest_version\": \"25.2\",\n            \"more_info_url\": \"https://data.safetycli.com/p/pypi/pip/97c/\"\n        },\n        \"idna\": {\n            \"name\": \"idna\",\n            \"version\": \"3.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"idna==3.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"idna\",\n                    \"specifier\": \"==3.6\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ],\n            \"found\": null,\n            \"insecure_versions\": [\n                \"0.1\",\n                \"0.2\",\n                \"0.3\",\n                \"0.4\",\n                \"0.5\",\n                \"0.6\",\n                \"0.7\",\n                \"0.8\",\n                \"0.9\",\n                \"1.0\",\n                \"1.1\",\n                \"2.0\",\n                \"2.1\",\n                \"2.10\",\n                \"2.2\",\n                \"2.3\",\n                \"2.4\",\n                \"2.5\",\n                \"2.6\",\n                \"2.7\",\n                \"2.8\",\n                \"2.9\",\n                \"3.0\",\n                \"3.1\",\n                \"3.2\",\n                \"3.3\",\n                \"3.4\",\n                \"3.5\",\n                \"3.6\"\n            ],\n            \"secure_versions\": [\n                \"3.10\",\n                \"3.9\",\n                \"3.8\",\n                \"3.7\"\n            ],\n            \"latest_version_without_known_vulnerabilities\": \"3.10\",\n            \"latest_version\": \"3.10\",\n            \"more_info_url\": \"https://data.safetycli.com/p/pypi/idna/97c/\"\n        },\n        \"cryptography\": {\n            \"name\": \"cryptography\",\n            \"version\": \"41.0.7\",\n            \"requirements\": [\n                {\n                    \"raw\": \"cryptography==41.0.7\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"cryptography\",\n                    \"specifier\": \"==41.0.7\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ],\n            \"found\": null,\n            \"insecure_versions\": [\n                \"0.1\",\n                \"0.2\",\n                \"0.2.1\",\n                \"0.2.2\",\n                \"0.3\",\n                \"0.4\",\n                \"0.5\",\n                \"0.5.1\",\n                \"0.5.2\",\n                \"0.5.3\",\n                \"0.5.4\",\n                \"0.6\",\n                \"0.6.1\",\n                \"0.7\",\n                \"0.7.1\",\n                \"0.7.2\",\n                \"0.8\",\n                \"0.8.1\",\n                \"0.8.2\",\n                \"0.9\",\n                \"0.9.1\",\n                \"0.9.2\",\n                \"0.9.3\",\n                \"1.0\",\n                \"1.0.1\",\n                \"1.0.2\",\n                \"1.1\",\n                \"1.1.1\",\n                \"1.1.2\",\n                \"1.2\",\n                \"1.2.1\",\n                \"1.2.2\",\n                \"1.2.3\",\n                \"1.3\",\n                \"1.3.1\",\n                \"1.3.2\",\n                \"1.3.3\",\n                \"1.3.4\",\n                \"1.4\",\n                \"1.5\",\n                \"1.5.1\",\n                \"1.5.2\",\n                \"1.5.3\",\n                \"1.6\",\n                \"1.7\",\n                \"1.7.1\",\n                \"1.7.2\",\n                \"1.8\",\n                \"1.8.1\",\n                \"1.8.2\",\n                \"1.9\",\n                \"2.0\",\n                \"2.0.1\",\n                \"2.0.2\",\n                \"2.0.3\",\n                \"2.1\",\n                \"2.1.1\",\n                \"2.1.2\",\n                \"2.1.3\",\n                \"2.1.4\",\n                \"2.2\",\n                \"2.2.1\",\n                \"2.2.2\",\n                \"2.3\",\n                \"2.3.1\",\n                \"2.4\",\n                \"2.4.1\",\n                \"2.4.2\",\n                \"2.5\",\n                \"2.6\",\n                \"2.6.1\",\n                \"2.7\",\n                \"2.8\",\n                \"2.9\",\n                \"2.9.1\",\n                \"2.9.2\",\n                \"3.0\",\n                \"3.1\",\n                \"3.1.1\",\n                \"3.2\",\n                \"3.2.1\",\n                \"3.3\",\n                \"3.3.1\",\n                \"3.3.2\",\n                \"3.4\",\n                \"3.4.1\",\n                \"3.4.2\",\n                \"3.4.3\",\n                \"3.4.4\",\n                \"3.4.5\",\n                \"3.4.6\",\n                \"3.4.7\",\n                \"3.4.8\",\n                \"35.0.0\",\n                \"36.0.0\",\n                \"36.0.1\",\n                \"36.0.2\",\n                \"37.0.0\",\n                \"37.0.1\",\n                \"37.0.2\",\n                \"37.0.3\",\n                \"37.0.4\",\n                \"38.0.0\",\n                \"38.0.1\",\n                \"38.0.2\",\n                \"38.0.3\",\n                \"38.0.4\",\n                \"39.0.0\",\n                \"39.0.1\",\n                \"39.0.2\",\n                \"40.0.0\",\n                \"40.0.1\",\n                \"40.0.2\",\n                \"41.0.0\",\n                \"41.0.1\",\n                \"41.0.2\",\n                \"41.0.3\",\n                \"41.0.4\",\n                \"41.0.5\",\n                \"41.0.6\",\n                \"41.0.7\",\n                \"42.0.0\",\n                \"42.0.1\",\n                \"42.0.2\",\n                \"42.0.3\",\n                \"42.0.4\",\n                \"42.0.5\",\n                \"42.0.6\",\n                \"42.0.7\",\n                \"42.0.8\",\n                \"43.0.0\",\n                \"43.0.1\",\n                \"43.0.3\",\n                \"44.0.0\"\n            ],\n            \"secure_versions\": [\n                \"45.0.7\",\n                \"45.0.6\",\n                \"45.0.5\",\n                \"45.0.4\",\n                \"45.0.3\",\n                \"45.0.2\",\n                \"45.0.1\",\n                \"45.0.0\",\n                \"44.0.3\",\n                \"44.0.2\",\n                \"44.0.1\"\n            ],\n            \"latest_version_without_known_vulnerabilities\": \"45.0.7\",\n            \"latest_version\": \"45.0.7\",\n            \"more_info_url\": \"https://data.safetycli.com/p/pypi/cryptography/97c/\"\n        },\n        \"configobj\": {\n            \"name\": \"configobj\",\n            \"version\": \"5.0.8\",\n            \"requirements\": [\n                {\n                    \"raw\": \"configobj==5.0.8\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"configobj\",\n                    \"specifier\": \"==5.0.8\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ],\n            \"found\": null,\n            \"insecure_versions\": [\n                \"4.4.0\",\n                \"4.5.0\",\n                \"4.5.1\",\n                \"4.5.2\",\n                \"4.5.3\",\n                \"4.6.0\",\n                \"4.7.0\",\n                \"4.7.1\",\n                \"4.7.2\",\n                \"5.0.0\",\n                \"5.0.1\",\n                \"5.0.2\",\n                \"5.0.3\",\n                \"5.0.4\",\n                \"5.0.5\",\n                \"5.0.6\",\n                \"5.0.7\",\n                \"5.0.8\"\n            ],\n            \"secure_versions\": [\n                \"5.0.9\"\n            ],\n            \"latest_version_without_known_vulnerabilities\": \"5.0.9\",\n            \"latest_version\": \"5.0.9\",\n            \"more_info_url\": \"https://data.safetycli.com/p/pypi/configobj/97c/\"\n        },\n        \"certifi\": {\n            \"name\": \"certifi\",\n            \"version\": \"2023.11.17\",\n            \"requirements\": [\n                {\n                    \"raw\": \"certifi==2023.11.17\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"certifi\",\n                    \"specifier\": \"==2023.11.17\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ],\n            \"found\": null,\n            \"insecure_versions\": [\n                \"0\",\n                \"0.0.1\",\n                \"0.0.2\",\n                \"0.0.3\",\n                \"0.0.4\",\n                \"0.0.5\",\n                \"0.0.6\",\n                \"0.0.7\",\n                \"0.0.8\",\n                \"1.0.0\",\n                \"1.0.1\",\n                \"14.5.14\",\n                \"2015.11.20\",\n                \"2015.11.20.1\",\n                \"2015.4.28\",\n                \"2015.9.6\",\n                \"2015.9.6.1\",\n                \"2015.9.6.2\",\n                \"2016.2.28\",\n                \"2016.8.2\",\n                \"2016.8.31\",\n                \"2016.8.8\",\n                \"2016.9.26\",\n                \"2017.11.5\",\n                \"2017.1.23\",\n                \"2017.4.17\",\n                \"2017.7.27\",\n                \"2017.7.27.1\",\n                \"2018.10.15\",\n                \"2018.11.29\",\n                \"2018.1.18\",\n                \"2018.4.16\",\n                \"2018.8.13\",\n                \"2018.8.24\",\n                \"2019.11.28\",\n                \"2019.3.9\",\n                \"2019.6.16\",\n                \"2019.9.11\",\n                \"2020.11.8\",\n                \"2020.12.5\",\n                \"2020.4.5\",\n                \"2020.4.5.1\",\n                \"2020.4.5.2\",\n                \"2020.6.20\",\n                \"2021.10.8\",\n                \"2021.5.30\",\n                \"2022.12.7\",\n                \"2022.5.18\",\n                \"2022.5.18.1\",\n                \"2022.6.15\",\n                \"2022.6.15.1\",\n                \"2022.6.15.2\",\n                \"2022.9.14\",\n                \"2022.9.24\",\n                \"2023.11.17\",\n                \"2023.5.7\",\n                \"2023.7.22\",\n                \"2024.2.2\",\n                \"2024.6.2\"\n            ],\n            \"secure_versions\": [\n                \"2025.8.3\",\n                \"2025.7.14\",\n                \"2025.7.9\",\n                \"2025.6.15\",\n                \"2025.4.26\",\n                \"2025.1.31\",\n                \"2024.12.14\",\n                \"2024.8.30\",\n                \"2024.7.4\"\n            ],\n            \"latest_version_without_known_vulnerabilities\": \"2025.8.3\",\n            \"latest_version\": \"2025.8.3\",\n            \"more_info_url\": \"https://data.safetycli.com/p/pypi/certifi/97c/\"\n        },\n        \"pyjwt\": {\n            \"name\": \"pyjwt\",\n            \"version\": \"2.7.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyjwt==2.7.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyjwt\",\n                    \"specifier\": \"==2.7.0\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ],\n            \"found\": null,\n            \"insecure_versions\": [\n                \"0.1.1\",\n                \"0.1.2\",\n                \"0.1.3\",\n                \"0.1.4\",\n                \"0.1.5\",\n                \"0.1.6\",\n                \"0.1.7\",\n                \"0.1.8\",\n                \"0.1.9\",\n                \"0.2.0\",\n                \"0.2.1\",\n                \"0.2.3\",\n                \"0.3.0\",\n                \"0.3.1\",\n                \"0.3.2\",\n                \"0.4.0\",\n                \"0.4.1\",\n                \"0.4.2\",\n                \"0.4.3\",\n                \"1.0.0\",\n                \"1.0.1\",\n                \"1.1.0\",\n                \"1.3.0\",\n                \"1.4.0\",\n                \"1.4.1\",\n                \"1.4.2\",\n                \"1.5.0\",\n                \"1.5.1\",\n                \"1.5.2\",\n                \"1.5.3\",\n                \"1.6.0\",\n                \"1.6.1\",\n                \"1.6.3\",\n                \"1.6.4\",\n                \"1.7.0\",\n                \"1.7.1\",\n                \"2.0.0\",\n                \"2.0.0a1\",\n                \"2.0.0a2\",\n                \"2.0.1\",\n                \"2.1.0\",\n                \"2.10.0\",\n                \"2.2.0\",\n                \"2.3.0\",\n                \"2.4.0\",\n                \"2.5.0\",\n                \"2.6.0\",\n                \"2.7.0\",\n                \"2.8.0\",\n                \"2.9.0\"\n            ],\n            \"secure_versions\": [\n                \"2.10.1\"\n            ],\n            \"latest_version_without_known_vulnerabilities\": \"2.10.1\",\n            \"latest_version\": \"2.10.1\",\n            \"more_info_url\": \"https://data.safetycli.com/p/pypi/pyjwt/97c/\"\n        },\n        \"jinja2\": {\n            \"name\": \"jinja2\",\n            \"version\": \"3.1.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jinja2==3.1.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jinja2\",\n                    \"specifier\": \"==3.1.2\",\n                    \"url\": null,\n                    \"found\": \"/usr/lib/python3/dist-packages\"\n                }\n            ],\n            \"found\": null,\n            \"insecure_versions\": [\n                \"2.0\",\n                \"2.0rc1\",\n                \"2.1\",\n                \"2.10\",\n                \"2.10.1\",\n                \"2.10.2\",\n                \"2.10.3\",\n                \"2.1.1\",\n                \"2.11.0\",\n                \"2.11.1\",\n                \"2.11.2\",\n                \"2.11.3\",\n                \"2.2\",\n                \"2.2.1\",\n                \"2.3\",\n                \"2.3.1\",\n                \"2.4\",\n                \"2.4.1\",\n                \"2.5\",\n                \"2.5.1\",\n                \"2.5.2\",\n                \"2.5.3\",\n                \"2.5.4\",\n                \"2.5.5\",\n                \"2.6\",\n                \"2.7\",\n                \"2.7.1\",\n                \"2.7.2\",\n                \"2.7.3\",\n                \"2.8\",\n                \"2.8.1\",\n                \"2.9\",\n                \"2.9.1\",\n                \"2.9.2\",\n                \"2.9.3\",\n                \"2.9.4\",\n                \"2.9.5\",\n                \"2.9.6\",\n                \"3.0.0\",\n                \"3.0.0a1\",\n                \"3.0.0rc1\",\n                \"3.0.0rc2\",\n                \"3.0.1\",\n                \"3.0.2\",\n                \"3.0.3\",\n                \"3.1.0\",\n                \"3.1.1\",\n                \"3.1.2\",\n                \"3.1.3\",\n                \"3.1.4\",\n                \"3.1.5\"\n            ],\n            \"secure_versions\": [\n                \"3.1.6\"\n            ],\n            \"latest_version_without_known_vulnerabilities\": \"3.1.6\",\n            \"latest_version\": \"3.1.6\",\n            \"more_info_url\": \"https://data.safetycli.com/p/pypi/jinja2/97c/\"\n        }\n    },\n    \"announcements\": [],\n    \"vulnerabilities\": [\n        {\n            \"vulnerability_id\": \"71608\",\n            \"package_name\": \"urllib3\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \">=2.0.0a1,<=2.2.1\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<=1.26.18\",\n                \">=2.0.0a1,<=2.2.1\"\n            ],\n            \"analyzed_version\": \"2.0.7\",\n            \"analyzed_requirement\": {\n                \"raw\": \"urllib3==2.0.7\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"urllib3\",\n                \"specifier\": \"==2.0.7\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Urllib3's ProxyManager ensures that the Proxy-Authorization header is correctly directed only to configured proxies. However, when HTTP requests bypass urllib3's proxy support, there's a risk of inadvertently setting the Proxy-Authorization header, which remains ineffective without a forwarding or tunneling proxy. Urllib3 does not recognize this header as carrying authentication data, failing to remove it during cross-origin redirects. While this scenario is uncommon and poses low risk to most users, urllib3 now proactively removes the Proxy-Authorization header during cross-origin redirects as a precautionary measure. Users are advised to utilize urllib3's proxy support or disable automatic redirects to handle the Proxy-Authorization header securely. Despite these precautions, urllib3 defaults to stripping the header to safeguard users who may inadvertently misconfigure requests.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-37891\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/71608/97c\"\n        },\n        {\n            \"vulnerability_id\": \"77744\",\n            \"package_name\": \"urllib3\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<2.5.0\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<2.5.0\"\n            ],\n            \"analyzed_version\": \"2.0.7\",\n            \"analyzed_requirement\": {\n                \"raw\": \"urllib3==2.0.7\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"urllib3\",\n                \"specifier\": \"==2.0.7\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"urllib3 is a user-friendly HTTP client library for Python. Prior to 2.5.0, it is possible to disable redirects for all requests by instantiating a PoolManager and specifying retries in a way that disable redirects. By default, requests and botocore users are not affected. An application attempting to mitigate SSRF or open redirect vulnerabilities by disabling redirects at the PoolManager level will remain vulnerable. This issue has been patched in version 2.5.0.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2025-50181\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/77744/97c\"\n        },\n        {\n            \"vulnerability_id\": \"73795\",\n            \"package_name\": \"twisted\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<24.7.0rc1\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<24.7.0rc1\"\n            ],\n            \"analyzed_version\": \"24.3.0\",\n            \"analyzed_requirement\": {\n                \"raw\": \"twisted==24.3.0\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"twisted\",\n                \"specifier\": \"==24.3.0\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Affected versions of Twisted are vulnerable to XSS. The `twisted.web.util.redirectTo` function contains an HTML injection vulnerability. If application code allows an attacker to control the redirect URL this vulnerability may result in Reflected Cross-Site Scripting (XSS) in the redirect response HTML body.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-41810\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/73795/97c\"\n        },\n        {\n            \"vulnerability_id\": \"73800\",\n            \"package_name\": \"twisted\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<24.7.0rc1\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<24.7.0rc1\"\n            ],\n            \"analyzed_version\": \"24.3.0\",\n            \"analyzed_requirement\": {\n                \"raw\": \"twisted==24.3.0\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"twisted\",\n                \"specifier\": \"==24.3.0\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Affected versions of Twisted are vulnerable to HTTP Request Smuggling. The HTTP 1.0 and 1.1 server provided by twisted.web could process pipelined HTTP requests out-of-order, possibly resulting in information disclosure.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-41671\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/73800/97c\"\n        },\n        {\n            \"vulnerability_id\": \"76752\",\n            \"package_name\": \"setuptools\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<78.1.1\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<78.1.1\"\n            ],\n            \"analyzed_version\": \"68.1.2\",\n            \"analyzed_requirement\": {\n                \"raw\": \"setuptools==68.1.2\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"setuptools\",\n                \"specifier\": \"==68.1.2\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Affected versions of Setuptools are vulnerable to Path Traversal via PackageIndex.download(). The impact is Arbitrary File Overwrite: An attacker would be allowed to write files to arbitrary locations on the filesystem with the permissions of the process running the Python code, which could escalate to RCE depending on the context.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2025-47273\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/76752/97c\"\n        },\n        {\n            \"vulnerability_id\": \"72236\",\n            \"package_name\": \"setuptools\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<70.0.0\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<70.0.0\"\n            ],\n            \"analyzed_version\": \"68.1.2\",\n            \"analyzed_requirement\": {\n                \"raw\": \"setuptools==68.1.2\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"setuptools\",\n                \"specifier\": \"==68.1.2\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Affected versions of Setuptools allow for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-6345\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/72236/97c\"\n        },\n        {\n            \"vulnerability_id\": \"77680\",\n            \"package_name\": \"requests\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<2.32.4\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<2.32.4\"\n            ],\n            \"analyzed_version\": \"2.31.0\",\n            \"analyzed_requirement\": {\n                \"raw\": \"requests==2.31.0\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"requests\",\n                \"specifier\": \"==2.31.0\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Requests is an HTTP library. Due to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs. Users should upgrade to version 2.32.4 to receive a fix. For older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on one's Requests Session.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-47081\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/77680/97c\"\n        },\n        {\n            \"vulnerability_id\": \"71064\",\n            \"package_name\": \"requests\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<2.32.2\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<2.32.2\"\n            ],\n            \"analyzed_version\": \"2.31.0\",\n            \"analyzed_requirement\": {\n                \"raw\": \"requests==2.31.0\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"requests\",\n                \"specifier\": \"==2.31.0\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Affected versions of Requests, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. Requests 2.32.0 fixes the issue, but versions 2.32.0 and 2.32.1 were yanked due to conflicts with CVE-2024-35195 mitigation.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-35195\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/71064/97c\"\n        },\n        {\n            \"vulnerability_id\": \"75180\",\n            \"package_name\": \"pip\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<25.0\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<25.0\"\n            ],\n            \"analyzed_version\": \"24.0\",\n            \"analyzed_requirement\": {\n                \"raw\": \"pip==24.0\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"pip\",\n                \"specifier\": \"==24.0\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Pip solves a security vulnerability that previously allowed maliciously crafted wheel files to execute unauthorized code during installation.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": null,\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/75180/97c\"\n        },\n        {\n            \"vulnerability_id\": \"67895\",\n            \"package_name\": \"idna\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<3.7\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<3.7\"\n            ],\n            \"analyzed_version\": \"3.6\",\n            \"analyzed_requirement\": {\n                \"raw\": \"idna==3.6\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"idna\",\n                \"specifier\": \"==3.6\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Affected versions of Idna are vulnerable to Denial Of Service via the idna.encode(), where a specially crafted argument could lead to significant resource consumption. In version 3.7, this function has been updated to reject such inputs efficiently, minimizing resource use. A practical workaround involves enforcing a maximum domain name length of 253 characters before encoding, as the vulnerability is triggered by unusually large inputs that normal operations wouldn't encounter.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-3651\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/67895/97c\"\n        },\n        {\n            \"vulnerability_id\": \"65212\",\n            \"package_name\": \"cryptography\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \">=35.0.0,<42.0.2\"\n            ],\n            \"all_vulnerable_specs\": [\n                \">=35.0.0,<42.0.2\"\n            ],\n            \"analyzed_version\": \"41.0.7\",\n            \"analyzed_requirement\": {\n                \"raw\": \"cryptography==41.0.7\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"cryptography\",\n                \"specifier\": \"==41.0.7\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Versions of Cryptograph starting from 35.0.0 are susceptible to a security flaw in the POLY1305 MAC algorithm on PowerPC CPUs, which allows an attacker to disrupt the application's state. This disruption might result in false calculations or cause a denial of service. The vulnerability's exploitation hinges on the attacker's ability to alter the algorithm's application and the dependency of the software on non-volatile XMM registers.\\r\\nhttps://github.com/pyca/cryptography/commit/89d0d56fb104ac4e0e6db63d78fc22b8c53d27e9\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2023-6129\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/65212/97c\"\n        },\n        {\n            \"vulnerability_id\": \"65647\",\n            \"package_name\": \"cryptography\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<42.0.5\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<42.0.5\"\n            ],\n            \"analyzed_version\": \"41.0.7\",\n            \"analyzed_requirement\": {\n                \"raw\": \"cryptography==41.0.7\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"cryptography\",\n                \"specifier\": \"==41.0.7\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Cryptography version 42.0.5 introduces a limit on the number of name constraint checks during X.509 path validation to prevent denial of service attacks.\\r\\nhttps://github.com/pyca/cryptography/commit/4be53bf20cc90cbac01f5f94c5d1aecc5289ba1f\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": null,\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/65647/97c\"\n        },\n        {\n            \"vulnerability_id\": \"66704\",\n            \"package_name\": \"cryptography\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \">=38.0.0,<42.0.4\"\n            ],\n            \"all_vulnerable_specs\": [\n                \">=38.0.0,<42.0.4\"\n            ],\n            \"analyzed_version\": \"41.0.7\",\n            \"analyzed_requirement\": {\n                \"raw\": \"cryptography==41.0.7\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"cryptography\",\n                \"specifier\": \"==41.0.7\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"cryptography is a package designed to expose cryptographic primitives and recipes to Python developers. Starting in version 38.0.0 and before version 42.0.4, if `pkcs12.serialize_key_and_certificates` is called with both a certificate whose public key did not match the provided private key and an `encryption_algorithm` with `hmac_hash` set (via `PrivateFormat.PKCS12.encryption_builder().hmac_hash(...)`, then a NULL pointer dereference would occur, crashing the Python process. This has been resolved in version 42.0.4, the first version in which a `ValueError` is properly raised.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-26130\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/66704/97c\"\n        },\n        {\n            \"vulnerability_id\": \"65278\",\n            \"package_name\": \"cryptography\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<42.0.0\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<42.0.0\"\n            ],\n            \"analyzed_version\": \"41.0.7\",\n            \"analyzed_requirement\": {\n                \"raw\": \"cryptography==41.0.7\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"cryptography\",\n                \"specifier\": \"==41.0.7\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Affected versions of Cryptography may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2023-50782\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/65278/97c\"\n        },\n        {\n            \"vulnerability_id\": \"54843\",\n            \"package_name\": \"configobj\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<5.0.9\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<5.0.9\"\n            ],\n            \"analyzed_version\": \"5.0.8\",\n            \"analyzed_requirement\": {\n                \"raw\": \"configobj==5.0.8\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"configobj\",\n                \"specifier\": \"==5.0.8\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"The configobj package affected versions contains a Regular Expression Denial of Service (ReDoS) vulnerability in its validate function. The vulnerable regex (.+?)\\\\((.*)\\\\) allows attackers to cause denial of service using specially crafted input with nested parentheses. This issue primarily affects server-side applications using configobj for configuration parsing. The vulnerability is patched by modifying the regex to ([^\\\\(\\\\)]+?)\\\\((.*)\\\\), preventing matching of nested parentheses. \\r\\nNOTE: This is only exploitable in the case of a developer putting the offending value in a server side configuration file.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2023-26112\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/54843/97c\"\n        },\n        {\n            \"vulnerability_id\": \"72083\",\n            \"package_name\": \"certifi\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \">=2021.05.30,<2024.07.04\"\n            ],\n            \"all_vulnerable_specs\": [\n                \">=2021.05.30,<2024.07.04\"\n            ],\n            \"analyzed_version\": \"2023.11.17\",\n            \"analyzed_requirement\": {\n                \"raw\": \"certifi==2023.11.17\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"certifi\",\n                \"specifier\": \"==2023.11.17\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Certifi affected versions recognized root certificates from GLOBALTRUST. Certifi patch removes these root certificates from the root store. These certificates are being removed pursuant to an investigation that identified \\\"long-running and unresolved compliance issues\\\" and are also in the process of being removed from Mozilla's trust store.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-39689\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/72083/97c\"\n        },\n        {\n            \"vulnerability_id\": \"74429\",\n            \"package_name\": \"pyjwt\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<2.10.1\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<2.10.1\"\n            ],\n            \"analyzed_version\": \"2.7.0\",\n            \"analyzed_requirement\": {\n                \"raw\": \"pyjwt==2.7.0\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"pyjwt\",\n                \"specifier\": \"==2.7.0\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Affected versions of pyjwt are vulnerable to Partial Comparison (CWE-187). This flaw allows attackers to bypass issuer (iss) verification by providing partial matches, potentially granting unauthorized access. The vulnerability arises in the decode method of api_jwt.py, where issuer validation incorrectly treats strings as sequences, leading to partial matches (e.g., \\\"abc\\\" being accepted for \\\"__abc__\\\"). Exploiting this requires crafting JWTs with partially matching iss claims, which is straightforward.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-53861\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/74429/97c\"\n        },\n        {\n            \"vulnerability_id\": \"64227\",\n            \"package_name\": \"jinja2\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<3.1.3\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<3.1.3\"\n            ],\n            \"analyzed_version\": \"3.1.2\",\n            \"analyzed_requirement\": {\n                \"raw\": \"jinja2==3.1.2\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"jinja2\",\n                \"specifier\": \"==3.1.2\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-22195\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/64227/97c\"\n        },\n        {\n            \"vulnerability_id\": \"74735\",\n            \"package_name\": \"jinja2\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \">=3.0.0a1,<3.1.5\"\n            ],\n            \"all_vulnerable_specs\": [\n                \">=3.0.0a1,<3.1.5\"\n            ],\n            \"analyzed_version\": \"3.1.2\",\n            \"analyzed_requirement\": {\n                \"raw\": \"jinja2==3.1.2\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"jinja2\",\n                \"specifier\": \"==3.1.2\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"A vulnerability in the Jinja compiler allows an attacker who can control both the content and filename of a template to execute arbitrary Python code, bypassing Jinja's sandbox protections. To exploit this vulnerability, an attacker must have the ability to manipulate both the template's filename and its contents. The risk depends on the application's specific use case. This issue affects applications that render untrusted templates where the attacker can determine the template filename, potentially leading to severe security breaches.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-56201\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/74735/97c\"\n        },\n        {\n            \"vulnerability_id\": \"71591\",\n            \"package_name\": \"jinja2\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<3.1.4\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<3.1.4\"\n            ],\n            \"analyzed_version\": \"3.1.2\",\n            \"analyzed_requirement\": {\n                \"raw\": \"jinja2==3.1.2\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"jinja2\",\n                \"specifier\": \"==3.1.2\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Jinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `>`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-34064\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/71591/97c\"\n        },\n        {\n            \"vulnerability_id\": \"75976\",\n            \"package_name\": \"jinja2\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<3.1.6\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<3.1.6\"\n            ],\n            \"analyzed_version\": \"3.1.2\",\n            \"analyzed_requirement\": {\n                \"raw\": \"jinja2==3.1.2\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"jinja2\",\n                \"specifier\": \"==3.1.2\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"Prior to 3.1.6, an oversight in how the Jinja sandboxed environment interacts with the |attr filter allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to use the |attr filter to get a reference to a string's plain format method, bypassing the sandbox. After the fix, the |attr filter no longer bypasses the environment's attribute lookup. This vulnerability is fixed in 3.1.6.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2025-27516\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/75976/97c\"\n        },\n        {\n            \"vulnerability_id\": \"76378\",\n            \"package_name\": \"jinja2\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \"<3.1.5\"\n            ],\n            \"all_vulnerable_specs\": [\n                \"<3.1.5\"\n            ],\n            \"analyzed_version\": \"3.1.2\",\n            \"analyzed_requirement\": {\n                \"raw\": \"jinja2==3.1.2\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"jinja2\",\n                \"specifier\": \"==3.1.2\",\n                \"url\": null,\n                \"found\": \"/usr/lib/python3/dist-packages\"\n            },\n            \"advisory\": \"An oversight in how the Jinja sandboxed environment detects calls to str.format allows an attacker who controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to store a reference to a malicious string's format method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2024-56326\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/76378/97c\"\n        }\n    ],\n    \"ignored_vulnerabilities\": [],\n    \"remediations\": {\n        \"urllib3\": {\n            \"requirements\": {\n                \"==2.0.7\": {\n                    \"vulnerabilities_found\": 2,\n                    \"version\": \"2.0.7\",\n                    \"requirement\": {\n                        \"raw\": \"urllib3==2.0.7\",\n                        \"extras\": [],\n                        \"marker\": null,\n                        \"name\": \"urllib3\",\n                        \"specifier\": \"==2.0.7\",\n                        \"url\": null,\n                        \"found\": \"/usr/lib/python3/dist-packages\"\n                    },\n                    \"more_info_url\": \"https://data.safetycli.com/p/pypi/urllib3/97c/\"\n                }\n            },\n            \"current_version\": null,\n            \"vulnerabilities_found\": null,\n            \"recommended_version\": null,\n            \"other_recommended_versions\": [],\n            \"more_info_url\": null\n        },\n        \"twisted\": {\n            \"requirements\": {\n                \"==24.3.0\": {\n                    \"vulnerabilities_found\": 2,\n                    \"version\": \"24.3.0\",\n                    \"requirement\": {\n                        \"raw\": \"twisted==24.3.0\",\n                        \"extras\": [],\n                        \"marker\": null,\n                        \"name\": \"twisted\",\n                        \"specifier\": \"==24.3.0\",\n                        \"url\": null,\n                        \"found\": \"/usr/lib/python3/dist-packages\"\n                    },\n                    \"more_info_url\": \"https://data.safetycli.com/p/pypi/twisted/97c/\"\n                }\n            },\n            \"current_version\": null,\n            \"vulnerabilities_found\": null,\n            \"recommended_version\": null,\n            \"other_recommended_versions\": [],\n            \"more_info_url\": null\n        },\n        \"setuptools\": {\n            \"requirements\": {\n                \"==68.1.2\": {\n                    \"vulnerabilities_found\": 2,\n                    \"version\": \"68.1.2\",\n                    \"requirement\": {\n                        \"raw\": \"setuptools==68.1.2\",\n                        \"extras\": [],\n                        \"marker\": null,\n                        \"name\": \"setuptools\",\n                        \"specifier\": \"==68.1.2\",\n                        \"url\": null,\n                        \"found\": \"/usr/lib/python3/dist-packages\"\n                    },\n                    \"more_info_url\": \"https://data.safetycli.com/p/pypi/setuptools/97c/\"\n                }\n            },\n            \"current_version\": null,\n            \"vulnerabilities_found\": null,\n            \"recommended_version\": null,\n            \"other_recommended_versions\": [],\n            \"more_info_url\": null\n        },\n        \"requests\": {\n            \"requirements\": {\n                \"==2.31.0\": {\n                    \"vulnerabilities_found\": 2,\n                    \"version\": \"2.31.0\",\n                    \"requirement\": {\n                        \"raw\": \"requests==2.31.0\",\n                        \"extras\": [],\n                        \"marker\": null,\n                        \"name\": \"requests\",\n                        \"specifier\": \"==2.31.0\",\n                        \"url\": null,\n                        \"found\": \"/usr/lib/python3/dist-packages\"\n                    },\n                    \"more_info_url\": \"https://data.safetycli.com/p/pypi/requests/97c/\"\n                }\n            },\n            \"current_version\": null,\n            \"vulnerabilities_found\": null,\n            \"recommended_version\": null,\n            \"other_recommended_versions\": [],\n            \"more_info_url\": null\n        },\n        \"pip\": {\n            \"requirements\": {\n                \"==24.0\": {\n                    \"vulnerabilities_found\": 1,\n                    \"version\": \"24.0\",\n                    \"requirement\": {\n                        \"raw\": \"pip==24.0\",\n                        \"extras\": [],\n                        \"marker\": null,\n                        \"name\": \"pip\",\n                        \"specifier\": \"==24.0\",\n                        \"url\": null,\n                        \"found\": \"/usr/lib/python3/dist-packages\"\n                    },\n                    \"more_info_url\": \"https://data.safetycli.com/p/pypi/pip/97c/\"\n                }\n            },\n            \"current_version\": null,\n            \"vulnerabilities_found\": null,\n            \"recommended_version\": null,\n            \"other_recommended_versions\": [],\n            \"more_info_url\": null\n        },\n        \"idna\": {\n            \"requirements\": {\n                \"==3.6\": {\n                    \"vulnerabilities_found\": 1,\n                    \"version\": \"3.6\",\n                    \"requirement\": {\n                        \"raw\": \"idna==3.6\",\n                        \"extras\": [],\n                        \"marker\": null,\n                        \"name\": \"idna\",\n                        \"specifier\": \"==3.6\",\n                        \"url\": null,\n                        \"found\": \"/usr/lib/python3/dist-packages\"\n                    },\n                    \"more_info_url\": \"https://data.safetycli.com/p/pypi/idna/97c/\"\n                }\n            },\n            \"current_version\": null,\n            \"vulnerabilities_found\": null,\n            \"recommended_version\": null,\n            \"other_recommended_versions\": [],\n            \"more_info_url\": null\n        },\n        \"cryptography\": {\n            \"requirements\": {\n                \"==41.0.7\": {\n                    \"vulnerabilities_found\": 4,\n                    \"version\": \"41.0.7\",\n                    \"requirement\": {\n                        \"raw\": \"cryptography==41.0.7\",\n                        \"extras\": [],\n                        \"marker\": null,\n                        \"name\": \"cryptography\",\n                        \"specifier\": \"==41.0.7\",\n                        \"url\": null,\n                        \"found\": \"/usr/lib/python3/dist-packages\"\n                    },\n                    \"more_info_url\": \"https://data.safetycli.com/p/pypi/cryptography/97c/\"\n                }\n            },\n            \"current_version\": null,\n            \"vulnerabilities_found\": null,\n            \"recommended_version\": null,\n            \"other_recommended_versions\": [],\n            \"more_info_url\": null\n        },\n        \"configobj\": {\n            \"requirements\": {\n                \"==5.0.8\": {\n                    \"vulnerabilities_found\": 1,\n                    \"version\": \"5.0.8\",\n                    \"requirement\": {\n                        \"raw\": \"configobj==5.0.8\",\n                        \"extras\": [],\n                        \"marker\": null,\n                        \"name\": \"configobj\",\n                        \"specifier\": \"==5.0.8\",\n                        \"url\": null,\n                        \"found\": \"/usr/lib/python3/dist-packages\"\n                    },\n                    \"more_info_url\": \"https://data.safetycli.com/p/pypi/configobj/97c/\"\n                }\n            },\n            \"current_version\": null,\n            \"vulnerabilities_found\": null,\n            \"recommended_version\": null,\n            \"other_recommended_versions\": [],\n            \"more_info_url\": null\n        },\n        \"certifi\": {\n            \"requirements\": {\n                \"==2023.11.17\": {\n                    \"vulnerabilities_found\": 1,\n                    \"version\": \"2023.11.17\",\n                    \"requirement\": {\n                        \"raw\": \"certifi==2023.11.17\",\n                        \"extras\": [],\n                        \"marker\": null,\n                        \"name\": \"certifi\",\n                        \"specifier\": \"==2023.11.17\",\n                        \"url\": null,\n                        \"found\": \"/usr/lib/python3/dist-packages\"\n                    },\n                    \"more_info_url\": \"https://data.safetycli.com/p/pypi/certifi/97c/\"\n                }\n            },\n            \"current_version\": null,\n            \"vulnerabilities_found\": null,\n            \"recommended_version\": null,\n            \"other_recommended_versions\": [],\n            \"more_info_url\": null\n        },\n        \"pyjwt\": {\n            \"requirements\": {\n                \"==2.7.0\": {\n                    \"vulnerabilities_found\": 1,\n                    \"version\": \"2.7.0\",\n                    \"requirement\": {\n                        \"raw\": \"pyjwt==2.7.0\",\n                        \"extras\": [],\n                        \"marker\": null,\n                        \"name\": \"pyjwt\",\n                        \"specifier\": \"==2.7.0\",\n                        \"url\": null,\n                        \"found\": \"/usr/lib/python3/dist-packages\"\n                    },\n                    \"more_info_url\": \"https://data.safetycli.com/p/pypi/pyjwt/97c/\"\n                }\n            },\n            \"current_version\": null,\n            \"vulnerabilities_found\": null,\n            \"recommended_version\": null,\n            \"other_recommended_versions\": [],\n            \"more_info_url\": null\n        },\n        \"jinja2\": {\n            \"requirements\": {\n                \"==3.1.2\": {\n                    \"vulnerabilities_found\": 5,\n                    \"version\": \"3.1.2\",\n                    \"requirement\": {\n                        \"raw\": \"jinja2==3.1.2\",\n                        \"extras\": [],\n                        \"marker\": null,\n                        \"name\": \"jinja2\",\n                        \"specifier\": \"==3.1.2\",\n                        \"url\": null,\n                        \"found\": \"/usr/lib/python3/dist-packages\"\n                    },\n                    \"more_info_url\": \"https://data.safetycli.com/p/pypi/jinja2/97c/\"\n                }\n            },\n            \"current_version\": null,\n            \"vulnerabilities_found\": null,\n            \"recommended_version\": null,\n            \"other_recommended_versions\": [],\n            \"more_info_url\": null\n        }\n    },\n    \"remediations_results\": {\n        \"vulnerabilities_fixed\": [],\n        \"remediations_applied\": {},\n        \"remediations_skipped\": {}\n    }\n}\n\n\n+===========================================================================================================================================================================================+\n\n\nDEPRECATED: this command (`check`) has been DEPRECATED, and will be unsupported beyond 01 June 2024.\n\n\nWe highly encourage switching to the new `scan` command which is easier to use, more powerful, and can be set up to mimic the deprecated command if required.\n\n\n+===========================================================================================================================================================================================+\n\n\n",
      "stderr": "",
      "duration": 2.9522907733917236,
      "success": false
    },
    "overall_success": false
  },
  "unit_tests": {
    "command": "python -m pytest tests/unit/ -v --cov=src --cov-report=xml --cov-report=html --cov-report=term --cov-fail-under=80",
    "returncode": -1,
    "stdout": "",
    "stderr": "[Errno 2] No such file or directory: 'python'",
    "duration": 0.015649795532226562,
    "success": false
  },
  "integration_tests": {
    "command": "python -m pytest tests/integration/ -v --tb=short",
    "returncode": -1,
    "stdout": "",
    "stderr": "[Errno 2] No such file or directory: 'python'",
    "duration": 0.013265371322631836,
    "success": false
  },
  "api_tests": {
    "command": "python -m pytest tests/api/ -v --tb=short",
    "returncode": -1,
    "stdout": "",
    "stderr": "[Errno 2] No such file or directory: 'python'",
    "duration": 0.01462554931640625,
    "success": false
  },
  "performance_tests": {
    "command": "python -m pytest tests/performance/ -v --tb=short",
    "returncode": -1,
    "stdout": "",
    "stderr": "[Errno 2] No such file or directory: 'python'",
    "duration": 0.013686418533325195,
    "success": false
  },
  "code_quality": {
    "flake8": {
      "command": "flake8 src/ tests/ --max-line-length=120 --extend-ignore=E203,W503",
      "returncode": 1,
      "stdout": "src/config/settings.py:5:1: E302 expected 2 blank lines, found 1\nsrc/config/settings.py:38:13: E231 missing whitespace after ','\nsrc/config/settings.py:38:18: E231 missing whitespace after ','\nsrc/config/settings.py:38:24: E231 missing whitespace after ','\nsrc/config/settings.py:38:30: E231 missing whitespace after ','\nsrc/config/settings.py:38:35: E231 missing whitespace after ','\nsrc/config/settings.py:38:41: E231 missing whitespace after ','\nsrc/config/settings.py:38:45: E231 missing whitespace after ','\nsrc/config/settings.py:38:49: E231 missing whitespace after ','\nsrc/config/settings.py:38:55: E231 missing whitespace after ','\nsrc/config/settings.py:38:60: E231 missing whitespace after ','\nsrc/config/settings.py:38:65: E231 missing whitespace after ','\nsrc/config/settings.py:38:70: E231 missing whitespace after ','\nsrc/config/settings.py:38:76: E231 missing whitespace after ','\nsrc/config/settings.py:39:14: E231 missing whitespace after ','\nsrc/config/settings.py:39:19: E231 missing whitespace after ','\nsrc/config/settings.py:39:24: E231 missing whitespace after ','\nsrc/config/settings.py:39:29: E231 missing whitespace after ','\nsrc/config/settings.py:39:34: E231 missing whitespace after ','\nsrc/config/settings.py:39:41: E231 missing whitespace after ','\nsrc/config/settings.py:39:45: E231 missing whitespace after ','\nsrc/config/settings.py:39:52: E231 missing whitespace after ','\nsrc/config/settings.py:39:58: E231 missing whitespace after ','\nsrc/config/settings.py:39:66: E231 missing whitespace after ','\nsrc/config/settings.py:39:71: E231 missing whitespace after ','\nsrc/config/settings.py:39:78: E231 missing whitespace after ','\nsrc/config/settings.py:40:16: E231 missing whitespace after ','\nsrc/config/settings.py:40:23: E231 missing whitespace after ','\nsrc/config/settings.py:40:30: E231 missing whitespace after ','\nsrc/config/settings.py:40:36: E231 missing whitespace after ','\nsrc/config/settings.py:40:42: E231 missing whitespace after ','\nsrc/config/settings.py:40:49: E231 missing whitespace after ','\nsrc/config/settings.py:40:57: E231 missing whitespace after ','\nsrc/config/settings.py:40:64: E231 missing whitespace after ','\nsrc/config/settings.py:40:69: E231 missing whitespace after ','\nsrc/config/settings.py:49:1: E305 expected 2 blank lines after class or function definition, found 1\nsrc/config/settings.py:49:22: W292 no newline at end of file\nsrc/models/domain_models.py:5:1: E302 expected 2 blank lines, found 1\nsrc/models/domain_models.py:13:1: E302 expected 2 blank lines, found 1\nsrc/models/domain_models.py:21:1: E302 expected 2 blank lines, found 1\nsrc/models/domain_models.py:28:1: E302 expected 2 blank lines, found 1\nsrc/models/domain_models.py:36:1: E302 expected 2 blank lines, found 1\nsrc/models/domain_models.py:44:32: W292 no newline at end of file\nsrc/repositories/database_repository.py:8:1: F401 '..models.domain_models.EconomicTerm' imported but unused\nsrc/repositories/database_repository.py:8:1: F401 '..models.domain_models.ArgentineTerm' imported but unused\nsrc/repositories/database_repository.py:8:1: F401 '..models.domain_models.CandidateTerm' imported but unused\nsrc/repositories/database_repository.py:12:1: E302 expected 2 blank lines, found 1\nsrc/repositories/database_repository.py:83:121: E501 line too long (128 > 120 characters)\nsrc/repositories/database_repository.py:208:39: W292 no newline at end of file\nsrc/services/glossary_service.py:10:1: E302 expected 2 blank lines, found 1\nsrc/services/glossary_service.py:104:25: W292 no newline at end of file\nsrc/services/term_detection_service.py:11:1: E302 expected 2 blank lines, found 1\nsrc/services/term_detection_service.py:66:17: E129 visually indented line with same indent as next logical line\nsrc/services/term_detection_service.py:119:25: W292 no newline at end of file\nsrc/services/transcription_service.py:14:1: E302 expected 2 blank lines, found 1\nsrc/services/transcription_service.py:121:69: W292 no newline at end of file\ntests/api/test_endpoints.py:7:1: F401 'json' imported but unused\ntests/api/test_endpoints.py:614:77: W292 no newline at end of file\ntests/conftest.py:23:1: E402 module level import not at top of file\ntests/conftest.py:24:1: E402 module level import not at top of file\ntests/conftest.py:25:1: E402 module level import not at top of file\ntests/conftest.py:26:1: E402 module level import not at top of file\ntests/conftest.py:27:1: E402 module level import not at top of file\ntests/conftest.py:28:1: E402 module level import not at top of file\ntests/conftest.py:34:1: E302 expected 2 blank lines, found 1\ntests/conftest.py:190:121: E501 line too long (123 > 120 characters)\ntests/conftest.py:277:42: W292 no newline at end of file\ntests/fixtures/test_data.py:6:1: F401 'pathlib.Path' imported but unused\ntests/fixtures/test_data.py:122:1: E302 expected 2 blank lines, found 1\ntests/fixtures/test_data.py:130:1: E302 expected 2 blank lines, found 1\ntests/fixtures/test_data.py:138:1: E302 expected 2 blank lines, found 1\ntests/fixtures/test_data.py:142:1: E302 expected 2 blank lines, found 1\ntests/fixtures/test_data.py:146:32: W292 no newline at end of file\ntests/integration/__init__.py:3:4: W292 no newline at end of file\ntests/integration/test_service_interactions.py:6:1: F401 'pathlib.Path' imported but unused\ntests/integration/test_service_interactions.py:193:9: F841 local variable 'glossary_stats' is assigned to but never used\ntests/integration/test_service_interactions.py:196:9: F841 local variable 'candidates' is assigned to but never used\ntests/integration/test_service_interactions.py:381:118: W292 no newline at end of file\ntests/performance/__init__.py:3:4: W292 no newline at end of file\ntests/performance/test_performance.py:7:1: F401 'threading' imported but unused\ntests/performance/test_performance.py:9:1: F401 'json' imported but unused\ntests/performance/test_performance.py:41:9: F841 local variable 'filename' is assigned to but never used\ntests/performance/test_performance.py:68:15: F541 f-string is missing placeholders\ntests/performance/test_performance.py:124:121: E501 line too long (121 > 120 characters)\ntests/performance/test_performance.py:166:19: F541 f-string is missing placeholders\ntests/performance/test_performance.py:186:20: E127 continuation line over-indented for visual indent\ntests/performance/test_performance.py:243:15: F541 f-string is missing placeholders\ntests/performance/test_performance.py:285:15: F541 f-string is missing placeholders\ntests/performance/test_performance.py:294:36: F541 f-string is missing placeholders\ntests/performance/test_performance.py:337:19: F541 f-string is missing placeholders\ntests/performance/test_performance.py:407:19: F541 f-string is missing placeholders\ntests/performance/test_performance.py:433:9: F811 redefinition of unused 'json' from line 9\ntests/performance/test_performance.py:483:84: W292 no newline at end of file\ntests/security/test_file_security.py:12:1: F401 'tempfile' imported but unused\ntests/security/test_file_security.py:16:1: F401 'src.services.transcription_service.TranscriptionService' imported but unused\ntests/security/test_file_security.py:17:1: F401 'tests.fixtures.test_data.create_invalid_file_bytes' imported but unused\ntests/security/test_file_security.py:23:1: F401 'tests.utils.test_helpers.mock_environment' imported but unused\ntests/security/test_file_security.py:277:17: F841 local variable 'path' is assigned to but never used\ntests/security/test_file_security.py:297:17: F841 local variable 'path' is assigned to but never used\ntests/security/test_file_security.py:302:21: W292 no newline at end of file\ntests/unit/repositories/test_database_repository.py:8:1: F401 'unittest.mock.Mock' imported but unused\ntests/unit/repositories/test_database_repository.py:11:1: F401 'tests.fixtures.test_data.SAMPLE_ECONOMIC_TERMS' imported but unused\ntests/unit/repositories/test_database_repository.py:11:1: F401 'tests.fixtures.test_data.SAMPLE_ARGENTINE_EXPRESSIONS' imported but unused\ntests/unit/repositories/test_database_repository.py:99:26: E128 continuation line under-indented for visual indent\ntests/unit/repositories/test_database_repository.py:115:30: E128 continuation line under-indented for visual indent\ntests/unit/repositories/test_database_repository.py:146:52: F841 local variable 'conn' is assigned to but never used\ntests/unit/repositories/test_database_repository.py:418:9: F841 local variable 'term2' is assigned to but never used\ntests/unit/repositories/test_database_repository.py:481:43: F841 local variable 'conn' is assigned to but never used\ntests/unit/repositories/test_database_repository.py:482:21: W292 no newline at end of file\ntests/unit/services/test_glossary_service.py:5:1: F401 'pytest' imported but unused\ntests/unit/services/test_glossary_service.py:6:1: F401 'unittest.mock.Mock' imported but unused\ntests/unit/services/test_glossary_service.py:9:1: F401 'tests.fixtures.test_data.SAMPLE_ECONOMIC_TERMS' imported but unused\ntests/unit/services/test_glossary_service.py:9:1: F401 'tests.fixtures.test_data.SAMPLE_ARGENTINE_EXPRESSIONS' imported but unused\ntests/unit/services/test_glossary_service.py:444:65: W292 no newline at end of file\ntests/unit/services/test_term_detection_service.py:5:1: F401 'pytest' imported but unused\ntests/unit/services/test_term_detection_service.py:6:1: F401 'unittest.mock.Mock' imported but unused\ntests/unit/services/test_term_detection_service.py:259:9: F841 local variable 'stats' is assigned to but never used\ntests/unit/services/test_term_detection_service.py:300:9: F841 local variable 'stats' is assigned to but never used\ntests/unit/services/test_term_detection_service.py:498:13: F841 local variable 'stats' is assigned to but never used\ntests/unit/services/test_term_detection_service.py:508:48: W292 no newline at end of file\ntests/unit/services/test_transcription_service.py:7:1: F401 'unittest.mock.MagicMock' imported but unused\ntests/unit/services/test_transcription_service.py:8:1: F401 'tempfile' imported but unused\ntests/unit/services/test_transcription_service.py:11:1: F401 'src.models.domain_models.TranscriptionResult' imported but unused\ntests/unit/services/test_transcription_service.py:428:73: W292 no newline at end of file\ntests/utils/test_helpers.py:10:1: F401 'unittest.mock.patch' imported but unused\ntests/utils/test_helpers.py:13:1: F401 'fastapi.testclient.TestClient' imported but unused\ntests/utils/test_helpers.py:96:27: E128 continuation line under-indented for visual indent\ntests/utils/test_helpers.py:97:27: E128 continuation line under-indented for visual indent\ntests/utils/test_helpers.py:252:72: W292 no newline at end of file\n",
      "stderr": "",
      "duration": 0.1613328456878662,
      "success": false
    },
    "black": {
      "command": "black --check --diff src/ tests/",
      "returncode": 1,
      "stdout": "--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/integration/__init__.py\t2025-09-16 16:22:15.343234+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/integration/__init__.py\t2025-09-16 20:44:35.994380+00:00\n@@ -1,3 +1,3 @@\n \"\"\"\n Integration tests package for testing service interactions and workflows.\n-\"\"\"\n\\ No newline at end of file\n+\"\"\"\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/performance/__init__.py\t2025-09-16 16:23:16.713408+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/performance/__init__.py\t2025-09-16 20:44:35.999452+00:00\n@@ -1,3 +1,3 @@\n \"\"\"\n Performance and load testing package for the transcription application.\n-\"\"\"\n\\ No newline at end of file\n+\"\"\"\n--- /home/beto/Dev/proyectos/personales/transcrip-app/src/config/settings.py\t2025-09-16 15:06:00.301952+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/src/config/settings.py\t2025-09-16 20:44:36.014733+00:00\n@@ -1,18 +1,21 @@\n import os\n from pathlib import Path\n from typing import List\n+\n \n class Settings:\n     \"\"\"Application configuration settings\"\"\"\n \n     # Database settings\n     DB_PATH: str = os.getenv(\"DB_PATH\", \"data/transcriptions.db\")\n \n     # File upload settings\n     UPLOAD_DIR: Path = Path(os.getenv(\"UPLOAD_DIR\", \"uploads\"))\n-    MAX_FILE_SIZE: int = int(os.getenv(\"MAX_FILE_SIZE\", \"50\")) * 1024 * 1024  # 50MB default\n+    MAX_FILE_SIZE: int = (\n+        int(os.getenv(\"MAX_FILE_SIZE\", \"50\")) * 1024 * 1024\n+    )  # 50MB default\n     ALLOWED_EXTENSIONS: List[str] = [\".mp3\"]\n \n     # Whisper model settings\n     WHISPER_MODEL: str = os.getenv(\"WHISPER_MODEL\", \"base\")\n     TRANSCRIPTION_LANGUAGE: str = os.getenv(\"TRANSCRIPTION_LANGUAGE\", \"es\")\n@@ -21,29 +24,82 @@\n     API_HOST: str = os.getenv(\"API_HOST\", \"0.0.0.0\")\n     API_PORT: int = int(os.getenv(\"API_PORT\", \"8000\"))\n \n     # Economic terms (hardcoded for now, could be moved to database)\n     ECONOMIC_TERMS: List[str] = [\n-        \"inflaci\u00f3n\", \"pobreza\", \"desempleo\", \"reservas\", \"d\u00f3lar\", \"peso\",\n-        \"PIB\", \"d\u00e9ficit\", \"super\u00e1vit\", \"tarifas\", \"subsidios\", \"impuestos\"\n+        \"inflaci\u00f3n\",\n+        \"pobreza\",\n+        \"desempleo\",\n+        \"reservas\",\n+        \"d\u00f3lar\",\n+        \"peso\",\n+        \"PIB\",\n+        \"d\u00e9ficit\",\n+        \"super\u00e1vit\",\n+        \"tarifas\",\n+        \"subsidios\",\n+        \"impuestos\",\n     ]\n \n     # Argentine expressions (hardcoded for now, could be moved to database)\n     ARGENTINE_EXPRESSIONS: List[str] = [\n-        \"laburo\", \"guita\", \"quilombo\", \"bondi\", \"mango\", \"fiaca\",\n-        \"che\", \"posta\", \"macana\", \"changas\"\n+        \"laburo\",\n+        \"guita\",\n+        \"quilombo\",\n+        \"bondi\",\n+        \"mango\",\n+        \"fiaca\",\n+        \"che\",\n+        \"posta\",\n+        \"macana\",\n+        \"changas\",\n     ]\n \n     # Spanish stopwords\n     SPANISH_STOPWORDS: set = {\n-        \"el\",\"la\",\"los\",\"las\",\"de\",\"del\",\"y\",\"o\",\"que\",\"en\",\"es\",\"un\",\"una\",\"por\",\n-        \"con\",\"al\",\"se\",\"lo\",\"su\",\"para\",\"a\",\"como\",\"m\u00e1s\",\"menos\",\"ya\",\"pero\",\"sin\",\n-        \"sobre\",\"esto\",\"esta\",\"ese\",\"esa\",\"esas\",\"estos\",\"esas\",\"s\u00ed\",\"no\"\n+        \"el\",\n+        \"la\",\n+        \"los\",\n+        \"las\",\n+        \"de\",\n+        \"del\",\n+        \"y\",\n+        \"o\",\n+        \"que\",\n+        \"en\",\n+        \"es\",\n+        \"un\",\n+        \"una\",\n+        \"por\",\n+        \"con\",\n+        \"al\",\n+        \"se\",\n+        \"lo\",\n+        \"su\",\n+        \"para\",\n+        \"a\",\n+        \"como\",\n+        \"m\u00e1s\",\n+        \"menos\",\n+        \"ya\",\n+        \"pero\",\n+        \"sin\",\n+        \"sobre\",\n+        \"esto\",\n+        \"esta\",\n+        \"ese\",\n+        \"esa\",\n+        \"esas\",\n+        \"estos\",\n+        \"esas\",\n+        \"s\u00ed\",\n+        \"no\",\n     }\n \n     def __init__(self):\n         # Ensure directories exist\n         self.UPLOAD_DIR.mkdir(parents=True, exist_ok=True)\n         Path(self.DB_PATH).parent.mkdir(parents=True, exist_ok=True)\n \n+\n # Global settings instance\n-settings = Settings()\n\\ No newline at end of file\n+settings = Settings()\n--- /home/beto/Dev/proyectos/personales/transcrip-app/src/services/glossary_service.py\t2025-09-16 15:07:27.588082+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/src/services/glossary_service.py\t2025-09-16 20:44:36.030590+00:00\n@@ -4,10 +4,11 @@\n \n from ..config.settings import settings\n from ..repositories.database_repository import DatabaseRepository\n \n logger = logging.getLogger(__name__)\n+\n \n class GlossaryService:\n     \"\"\"Service for managing economic glossary and Argentine dictionary\"\"\"\n \n     def __init__(self, db_repository: DatabaseRepository = None):\n@@ -45,11 +46,11 @@\n             economic_terms = self.db_repository.get_economic_terms()\n             argentine_expressions = self.db_repository.get_argentine_expressions()\n \n             return {\n                 \"economic_glossary\": economic_terms,\n-                \"argentine_dictionary\": argentine_expressions\n+                \"argentine_dictionary\": argentine_expressions,\n             }\n         except Exception as e:\n             logger.error(f\"Error retrieving glossaries: {e}\")\n             return {\"economic_glossary\": [], \"argentine_dictionary\": []}\n \n@@ -73,11 +74,13 @@\n             else:\n                 logger.warning(f\"Term '{term}' already exists in economic glossary\")\n                 return False\n \n         except Exception as e:\n-            logger.error(f\"Error promoting candidate '{term}' to economic glossary: {e}\")\n+            logger.error(\n+                f\"Error promoting candidate '{term}' to economic glossary: {e}\"\n+            )\n             return False\n \n     def promote_candidate_to_argentine(self, term: str) -> bool:\n         \"\"\"\n         Promote a candidate term to Argentine dictionary\n@@ -94,11 +97,15 @@\n                 # Remove from candidates\n                 self.db_repository.remove_candidate_term(term)\n                 logger.info(f\"Promoted candidate '{term}' to Argentine dictionary\")\n                 return True\n             else:\n-                logger.warning(f\"Expression '{term}' already exists in Argentine dictionary\")\n+                logger.warning(\n+                    f\"Expression '{term}' already exists in Argentine dictionary\"\n+                )\n                 return False\n \n         except Exception as e:\n-            logger.error(f\"Error promoting candidate '{term}' to Argentine dictionary: {e}\")\n-            return False\n\\ No newline at end of file\n+            logger.error(\n+                f\"Error promoting candidate '{term}' to Argentine dictionary: {e}\"\n+            )\n+            return False\n--- /home/beto/Dev/proyectos/personales/transcrip-app/src/services/term_detection_service.py\t2025-09-16 15:07:54.118706+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/src/services/term_detection_service.py\t2025-09-16 20:44:36.036602+00:00\n@@ -5,10 +5,11 @@\n \n from ..config.settings import settings\n from ..repositories.database_repository import DatabaseRepository\n \n logger = logging.getLogger(__name__)\n+\n \n class TermDetectionService:\n     \"\"\"Service for detecting and managing candidate terms\"\"\"\n \n     def __init__(self, db_repository: DatabaseRepository = None):\n@@ -19,11 +20,12 @@\n         Normalize a token by removing accents, converting to lowercase, and stripping punctuation\n         \"\"\"\n         token = token.lower().strip(string.punctuation)\n         # Remove accents using Unicode normalization\n         token = \"\".join(\n-            c for c in unicodedata.normalize(\"NFD\", token)\n+            c\n+            for c in unicodedata.normalize(\"NFD\", token)\n             if unicodedata.category(c) != \"Mn\"\n         )\n         return token\n \n     def is_valid_candidate(self, word: str) -> bool:\n@@ -59,24 +61,28 @@\n         for i, word in enumerate(words):\n             if not self.is_valid_candidate(word):\n                 continue\n \n             # Skip if already exists in any glossary\n-            if (self.db_repository.term_exists_in_economic_glossary(word) or\n-                self.db_repository.expression_exists_in_argentine_dictionary(word) or\n-                self.db_repository.candidate_term_exists(word)):\n+            if (\n+                self.db_repository.term_exists_in_economic_glossary(word)\n+                or self.db_repository.expression_exists_in_argentine_dictionary(word)\n+                or self.db_repository.candidate_term_exists(word)\n+            ):\n                 continue\n \n             # Extract context (3 words before and after)\n             context_start = max(0, i - 3)\n             context_end = min(len(words), i + 4)\n             context = \" \".join(words[context_start:context_end])\n \n             # Add to candidate terms\n             if self.db_repository.add_candidate_term(word, context):\n                 new_candidates_count += 1\n-                logger.info(f\"New candidate term detected: '{word}' in context: '{context[:50]}...'\")\n+                logger.info(\n+                    f\"New candidate term detected: '{word}' in context: '{context[:50]}...'\"\n+                )\n \n         return {\"new_candidates_added\": new_candidates_count}\n \n     def get_candidates(self) -> List[Tuple[str, str, str]]:\n         \"\"\"\n@@ -96,11 +102,11 @@\n         \"\"\"\n         try:\n             candidates = self.get_candidates()\n             return {\n                 \"total_candidates\": len(candidates),\n-                \"unique_candidates\": len(set(candidate[0] for candidate in candidates))\n+                \"unique_candidates\": len(set(candidate[0] for candidate in candidates)),\n             }\n         except Exception as e:\n             logger.error(f\"Error calculating candidate statistics: {e}\")\n             return {\"total_candidates\": 0, \"unique_candidates\": 0}\n \n@@ -114,6 +120,6 @@\n             if success:\n                 logger.info(f\"Removed candidate term: {term}\")\n             return success\n         except Exception as e:\n             logger.error(f\"Error removing candidate term '{term}': {e}\")\n-            return False\n\\ No newline at end of file\n+            return False\n--- /home/beto/Dev/proyectos/personales/transcrip-app/src/services/transcription_service.py\t2025-09-16 15:09:31.550997+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/src/services/transcription_service.py\t2025-09-16 20:44:36.042710+00:00\n@@ -8,10 +8,11 @@\n from ..config.settings import settings\n from ..models.domain_models import TranscriptionResult\n from ..repositories.database_repository import DatabaseRepository\n \n logger = logging.getLogger(__name__)\n+\n \n class TranscriptionService:\n     \"\"\"Service for handling audio transcription operations\"\"\"\n \n     def __init__(self, db_repository: DatabaseRepository = None):\n@@ -33,21 +34,30 @@\n         \"\"\"\n         try:\n             # Check file size\n             file_size = os.path.getsize(file_path)\n             if file_size > settings.MAX_FILE_SIZE:\n-                return False, f\"File size ({file_size} bytes) exceeds maximum allowed ({settings.MAX_FILE_SIZE} bytes)\"\n+                return (\n+                    False,\n+                    f\"File size ({file_size} bytes) exceeds maximum allowed ({settings.MAX_FILE_SIZE} bytes)\",\n+                )\n \n             # Check file extension\n             if file_path.suffix.lower() not in settings.ALLOWED_EXTENSIONS:\n-                return False, f\"File extension {file_path.suffix} not allowed. Allowed: {settings.ALLOWED_EXTENSIONS}\"\n+                return (\n+                    False,\n+                    f\"File extension {file_path.suffix} not allowed. Allowed: {settings.ALLOWED_EXTENSIONS}\",\n+                )\n \n             # Check MIME type using python-magic for security\n             try:\n                 mime_type = magic.from_file(str(file_path), mime=True)\n-                if not mime_type.startswith('audio/'):\n-                    return False, f\"Invalid file type: {mime_type}. Expected audio file.\"\n+                if not mime_type.startswith(\"audio/\"):\n+                    return (\n+                        False,\n+                        f\"Invalid file type: {mime_type}. Expected audio file.\",\n+                    )\n             except Exception as e:\n                 logger.warning(f\"Could not determine MIME type for {file_path}: {e}\")\n                 # Continue without MIME check if python-magic is not available\n \n             return True, None\n@@ -69,23 +79,24 @@\n                     filename=filename,\n                     transcript_preview=\"\",\n                     full_transcript=\"\",\n                     message=\"File validation failed\",\n                     success=False,\n-                    error=error_message\n+                    error=error_message,\n                 )\n \n             # Perform transcription\n             logger.info(f\"Starting transcription for {filename}\")\n             result = self.model.transcribe(\n-                str(file_path),\n-                language=settings.TRANSCRIPTION_LANGUAGE\n+                str(file_path), language=settings.TRANSCRIPTION_LANGUAGE\n             )\n             transcript_text = result[\"text\"]\n \n             # Save to database\n-            transcription_id = self.db_repository.save_transcription(filename, transcript_text)\n+            transcription_id = self.db_repository.save_transcription(\n+                filename, transcript_text\n+            )\n             logger.info(f\"Transcription saved with ID: {transcription_id}\")\n \n             # Create preview (first 200 chars)\n             transcript_preview = transcript_text[:200]\n             if len(transcript_text) > 200:\n@@ -94,11 +105,11 @@\n             return TranscriptionResult(\n                 filename=filename,\n                 transcript_preview=transcript_preview,\n                 full_transcript=transcript_text,\n                 message=\"File processed and saved successfully\",\n-                success=True\n+                success=True,\n             )\n \n         except Exception as e:\n             error_msg = f\"Transcription failed: {str(e)}\"\n             logger.error(f\"Transcription error for {filename}: {e}\")\n@@ -106,16 +117,16 @@\n                 filename=filename,\n                 transcript_preview=\"\",\n                 full_transcript=\"\",\n                 message=\"Transcription failed\",\n                 success=False,\n-                error=error_msg\n+                error=error_msg,\n             )\n \n     def cleanup_file(self, file_path: Path) -> None:\n         \"\"\"Clean up uploaded file after processing\"\"\"\n         try:\n             if file_path.exists():\n                 file_path.unlink()\n                 logger.info(f\"Cleaned up file: {file_path}\")\n         except Exception as e:\n-            logger.error(f\"Failed to cleanup file {file_path}: {e}\")\n\\ No newline at end of file\n+            logger.error(f\"Failed to cleanup file {file_path}: {e}\")\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/fixtures/test_data.py\t2025-09-16 16:11:47.529631+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/fixtures/test_data.py\t2025-09-16 20:44:36.059219+00:00\n@@ -1,18 +1,19 @@\n \"\"\"\n Test data factories and utilities for generating consistent test data.\n \"\"\"\n+\n import factory\n from datetime import datetime\n from pathlib import Path\n \n from src.models.domain_models import (\n     Transcription,\n     EconomicTerm,\n     ArgentineTerm,\n     CandidateTerm,\n-    TranscriptionResult\n+    TranscriptionResult,\n )\n \n \n class TranscriptionFactory(factory.Factory):\n     \"\"\"Factory for creating Transcription test data.\"\"\"\n@@ -20,127 +21,156 @@\n     class Meta:\n         model = Transcription\n \n     id = factory.Sequence(lambda n: n)\n     filename = factory.Sequence(lambda n: f\"audio_{n}.mp3\")\n-    transcript = factory.Faker('text', max_nb_chars=500)\n+    transcript = factory.Faker(\"text\", max_nb_chars=500)\n     created_at = factory.LazyFunction(datetime.utcnow)\n \n \n class EconomicTermFactory(factory.Factory):\n     \"\"\"Factory for creating EconomicTerm test data.\"\"\"\n \n     class Meta:\n         model = EconomicTerm\n \n     id = factory.Sequence(lambda n: n)\n-    term = factory.Faker('word')\n-    category = factory.Iterator(['economic', 'manual'])\n+    term = factory.Faker(\"word\")\n+    category = factory.Iterator([\"economic\", \"manual\"])\n     first_seen = factory.LazyFunction(datetime.utcnow)\n \n \n class ArgentineTermFactory(factory.Factory):\n     \"\"\"Factory for creating ArgentineTerm test data.\"\"\"\n \n     class Meta:\n         model = ArgentineTerm\n \n     id = factory.Sequence(lambda n: n)\n-    expression = factory.Faker('word')\n+    expression = factory.Faker(\"word\")\n     first_seen = factory.LazyFunction(datetime.utcnow)\n \n \n class CandidateTermFactory(factory.Factory):\n     \"\"\"Factory for creating CandidateTerm test data.\"\"\"\n \n     class Meta:\n         model = CandidateTerm\n \n     id = factory.Sequence(lambda n: n)\n-    term = factory.Faker('word')\n+    term = factory.Faker(\"word\")\n     first_seen = factory.LazyFunction(datetime.utcnow)\n-    context_snippet = factory.Faker('sentence')\n+    context_snippet = factory.Faker(\"sentence\")\n \n \n class TranscriptionResultFactory(factory.Factory):\n     \"\"\"Factory for creating TranscriptionResult test data.\"\"\"\n \n     class Meta:\n         model = TranscriptionResult\n \n     filename = factory.Sequence(lambda n: f\"test_{n}.mp3\")\n-    transcript_preview = factory.Faker('text', max_nb_chars=200)\n-    full_transcript = factory.Faker('text', max_nb_chars=1000)\n+    transcript_preview = factory.Faker(\"text\", max_nb_chars=200)\n+    full_transcript = factory.Faker(\"text\", max_nb_chars=1000)\n     message = \"Test transcription completed successfully\"\n     success = True\n     error = None\n \n \n # Test data constants\n SAMPLE_ECONOMIC_TERMS = [\n-    \"inflaci\u00f3n\", \"PIB\", \"PBI\", \"d\u00f3lar\", \"peso\", \"reservas\",\n-    \"desempleo\", \"pobreza\", \"d\u00e9ficit\", \"super\u00e1vit\", \"tarifas\",\n-    \"subsidios\", \"impuestos\", \"inversi\u00f3n\", \"exportaciones\"\n+    \"inflaci\u00f3n\",\n+    \"PIB\",\n+    \"PBI\",\n+    \"d\u00f3lar\",\n+    \"peso\",\n+    \"reservas\",\n+    \"desempleo\",\n+    \"pobreza\",\n+    \"d\u00e9ficit\",\n+    \"super\u00e1vit\",\n+    \"tarifas\",\n+    \"subsidios\",\n+    \"impuestos\",\n+    \"inversi\u00f3n\",\n+    \"exportaciones\",\n ]\n \n SAMPLE_ARGENTINE_EXPRESSIONS = [\n-    \"laburo\", \"guita\", \"quilombo\", \"bondi\", \"mango\", \"fiaca\",\n-    \"che\", \"posta\", \"macana\", \"changas\", \"boludo\", \"pibe\",\n-    \"flaca\", \"loco\", \"b\u00e1rbaro\", \"genial\"\n+    \"laburo\",\n+    \"guita\",\n+    \"quilombo\",\n+    \"bondi\",\n+    \"mango\",\n+    \"fiaca\",\n+    \"che\",\n+    \"posta\",\n+    \"macana\",\n+    \"changas\",\n+    \"boludo\",\n+    \"pibe\",\n+    \"flaca\",\n+    \"loco\",\n+    \"b\u00e1rbaro\",\n+    \"genial\",\n ]\n \n SAMPLE_TRANSCRIPTS = {\n-    'economic_heavy': (\n+    \"economic_heavy\": (\n         \"Hoy analizamos la inflaci\u00f3n que ha subido un 15% este mes. \"\n         \"El PIB cay\u00f3 3.2% y las reservas del banco central est\u00e1n en m\u00ednimos hist\u00f3ricos. \"\n         \"El d\u00f3lar blue subi\u00f3 mientras que el peso se deval\u00faa constantemente. \"\n         \"Las exportaciones de carne han bajado y los subsidios a los combustibles aumentaron. \"\n         \"El d\u00e9ficit fiscal preocupa a los inversores internacionales.\"\n     ),\n-    'argentine_heavy': (\n+    \"argentine_heavy\": (\n         \"Che, qu\u00e9 quilombo est\u00e1 todo con el laburo. \"\n         \"No hay mango para nada y la gente anda con mucha fiaca. \"\n         \"El bondi est\u00e1 car\u00edsimo y las changas no alcanzan. \"\n         \"Es una macana pero hay que seguir, boludo. \"\n         \"Los pibes est\u00e1n preocupados por el futuro.\"\n     ),\n-    'mixed_content': (\n+    \"mixed_content\": (\n         \"Che, hablando en serio del tema econ\u00f3mico, la inflaci\u00f3n est\u00e1 terrible. \"\n         \"Mi laburo en el banco me permite ver c\u00f3mo la guita no alcanza. \"\n         \"El PIB baj\u00f3 y es un quilombo para todos. \"\n         \"Las reservas est\u00e1n bajas y el d\u00f3lar sube como loco. \"\n         \"Blockchain y fintech pueden ser soluciones, pero hay que ver.\"\n     ),\n-    'candidate_rich': (\n+    \"candidate_rich\": (\n         \"El tema de las criptomonedas y la tokenizaci\u00f3n est\u00e1 muy candente. \"\n         \"Los unicornios tecnol\u00f3gicos argentinos est\u00e1n expandi\u00e9ndose. \"\n         \"La gamificaci\u00f3n de las finanzas es una tendencia emergente. \"\n         \"El metaverso puede revolucionar las transacciones econ\u00f3micas. \"\n         \"Los algoritmos de machine learning predicen volatilidad.\"\n-    )\n+    ),\n }\n+\n \n def create_mp3_bytes(size_kb: int = 1) -> bytes:\n     \"\"\"Create fake MP3 file bytes for testing.\"\"\"\n     # MP3 frame header (basic pattern)\n-    mp3_header = b'\\xff\\xfb\\x90\\x00'\n+    mp3_header = b\"\\xff\\xfb\\x90\\x00\"\n     # Pad to desired size\n-    padding = b'\\x00' * (size_kb * 1024 - len(mp3_header))\n+    padding = b\"\\x00\" * (size_kb * 1024 - len(mp3_header))\n     return mp3_header + padding\n+\n \n def create_malicious_file_bytes() -> bytes:\n     \"\"\"Create bytes that look like MP3 but contain malicious content.\"\"\"\n     # Start with MP3-like header but add script content\n-    fake_header = b'\\xff\\xfb\\x90\\x00'\n-    script_content = b'#!/bin/bash\\nrm -rf /\\n'\n-    padding = b'\\x00' * 500\n+    fake_header = b\"\\xff\\xfb\\x90\\x00\"\n+    script_content = b\"#!/bin/bash\\nrm -rf /\\n\"\n+    padding = b\"\\x00\" * 500\n     return fake_header + script_content + padding\n+\n \n def create_invalid_file_bytes() -> bytes:\n     \"\"\"Create completely invalid file bytes.\"\"\"\n-    return b'This is not an audio file at all, just plain text content.'\n+    return b\"This is not an audio file at all, just plain text content.\"\n+\n \n def create_oversized_file_bytes(size_mb: int = 10) -> bytes:\n     \"\"\"Create file bytes that exceed size limits.\"\"\"\n-    mp3_header = b'\\xff\\xfb\\x90\\x00'\n-    padding = b'\\x00' * (size_mb * 1024 * 1024 - len(mp3_header))\n-    return mp3_header + padding\n\\ No newline at end of file\n+    mp3_header = b\"\\xff\\xfb\\x90\\x00\"\n+    padding = b\"\\x00\" * (size_mb * 1024 * 1024 - len(mp3_header))\n+    return mp3_header + padding\n--- /home/beto/Dev/proyectos/personales/transcrip-app/src/repositories/database_repository.py\t2025-09-16 15:06:42.098596+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/src/repositories/database_repository.py\t2025-09-16 20:44:36.070035+00:00\n@@ -3,13 +3,19 @@\n from contextlib import contextmanager\n from typing import List, Optional, Tuple\n from datetime import datetime\n \n from ..config.settings import settings\n-from ..models.domain_models import Transcription, EconomicTerm, ArgentineTerm, CandidateTerm\n+from ..models.domain_models import (\n+    Transcription,\n+    EconomicTerm,\n+    ArgentineTerm,\n+    CandidateTerm,\n+)\n \n logger = logging.getLogger(__name__)\n+\n \n class DatabaseRepository:\n     \"\"\"Repository for all database operations\"\"\"\n \n     def __init__(self, db_path: str = None):\n@@ -37,93 +43,117 @@\n         \"\"\"Initialize database schema\"\"\"\n         with self.get_connection() as conn:\n             cursor = conn.cursor()\n \n             # Transcriptions table\n-            cursor.execute(\"\"\"\n+            cursor.execute(\n+                \"\"\"\n                 CREATE TABLE IF NOT EXISTS transcriptions (\n                     id INTEGER PRIMARY KEY AUTOINCREMENT,\n                     filename TEXT NOT NULL,\n                     transcript TEXT NOT NULL,\n                     created_at TEXT NOT NULL\n                 )\n-            \"\"\")\n+            \"\"\"\n+            )\n \n             # Economic glossary table\n-            cursor.execute(\"\"\"\n+            cursor.execute(\n+                \"\"\"\n                 CREATE TABLE IF NOT EXISTS economic_glossary (\n                     id INTEGER PRIMARY KEY AUTOINCREMENT,\n                     term TEXT UNIQUE NOT NULL,\n                     category TEXT NOT NULL,\n                     first_seen TEXT NOT NULL\n                 )\n-            \"\"\")\n+            \"\"\"\n+            )\n \n             # Argentine dictionary table\n-            cursor.execute(\"\"\"\n+            cursor.execute(\n+                \"\"\"\n                 CREATE TABLE IF NOT EXISTS argentine_dictionary (\n                     id INTEGER PRIMARY KEY AUTOINCREMENT,\n                     expression TEXT UNIQUE NOT NULL,\n                     first_seen TEXT NOT NULL\n                 )\n-            \"\"\")\n+            \"\"\"\n+            )\n \n             # Candidate terms table\n-            cursor.execute(\"\"\"\n+            cursor.execute(\n+                \"\"\"\n                 CREATE TABLE IF NOT EXISTS candidate_terms (\n                     id INTEGER PRIMARY KEY AUTOINCREMENT,\n                     term TEXT UNIQUE NOT NULL,\n                     first_seen TEXT NOT NULL,\n                     context_snippet TEXT NOT NULL\n                 )\n-            \"\"\")\n+            \"\"\"\n+            )\n \n             # Add indexes for performance\n-            cursor.execute(\"CREATE INDEX IF NOT EXISTS idx_transcriptions_created_at ON transcriptions(created_at)\")\n-            cursor.execute(\"CREATE INDEX IF NOT EXISTS idx_economic_glossary_term ON economic_glossary(term)\")\n-            cursor.execute(\"CREATE INDEX IF NOT EXISTS idx_argentine_dictionary_expression ON argentine_dictionary(expression)\")\n-            cursor.execute(\"CREATE INDEX IF NOT EXISTS idx_candidate_terms_term ON candidate_terms(term)\")\n+            cursor.execute(\n+                \"CREATE INDEX IF NOT EXISTS idx_transcriptions_created_at ON transcriptions(created_at)\"\n+            )\n+            cursor.execute(\n+                \"CREATE INDEX IF NOT EXISTS idx_economic_glossary_term ON economic_glossary(term)\"\n+            )\n+            cursor.execute(\n+                \"CREATE INDEX IF NOT EXISTS idx_argentine_dictionary_expression ON argentine_dictionary(expression)\"\n+            )\n+            cursor.execute(\n+                \"CREATE INDEX IF NOT EXISTS idx_candidate_terms_term ON candidate_terms(term)\"\n+            )\n \n             conn.commit()\n \n     # Transcription operations\n     def save_transcription(self, filename: str, transcript: str) -> int:\n         \"\"\"Save a new transcription and return its ID\"\"\"\n         with self.get_connection() as conn:\n             cursor = conn.cursor()\n-            cursor.execute(\"\"\"\n+            cursor.execute(\n+                \"\"\"\n                 INSERT INTO transcriptions (filename, transcript, created_at)\n                 VALUES (?, ?, ?)\n-            \"\"\", (filename, transcript, datetime.utcnow().isoformat()))\n+            \"\"\",\n+                (filename, transcript, datetime.utcnow().isoformat()),\n+            )\n             conn.commit()\n             return cursor.lastrowid\n \n     def get_transcription_by_id(self, transcription_id: int) -> Optional[Transcription]:\n         \"\"\"Get a transcription by ID\"\"\"\n         with self.get_connection() as conn:\n             cursor = conn.cursor()\n-            cursor.execute(\"SELECT * FROM transcriptions WHERE id = ?\", (transcription_id,))\n+            cursor.execute(\n+                \"SELECT * FROM transcriptions WHERE id = ?\", (transcription_id,)\n+            )\n             row = cursor.fetchone()\n             if row:\n                 return Transcription(\n-                    id=row['id'],\n-                    filename=row['filename'],\n-                    transcript=row['transcript'],\n-                    created_at=datetime.fromisoformat(row['created_at'])\n+                    id=row[\"id\"],\n+                    filename=row[\"filename\"],\n+                    transcript=row[\"transcript\"],\n+                    created_at=datetime.fromisoformat(row[\"created_at\"]),\n                 )\n         return None\n \n     # Economic glossary operations\n     def add_economic_term(self, term: str, category: str = \"economic\") -> bool:\n         \"\"\"Add a term to economic glossary. Returns True if added, False if already exists.\"\"\"\n         with self.get_connection() as conn:\n             cursor = conn.cursor()\n             try:\n-                cursor.execute(\"\"\"\n+                cursor.execute(\n+                    \"\"\"\n                     INSERT INTO economic_glossary (term, category, first_seen)\n                     VALUES (?, ?, ?)\n-                \"\"\", (term, category, datetime.utcnow().isoformat()))\n+                \"\"\",\n+                    (term, category, datetime.utcnow().isoformat()),\n+                )\n                 conn.commit()\n                 return True\n             except sqlite3.IntegrityError:\n                 return False\n \n@@ -145,14 +175,17 @@\n     def add_argentine_expression(self, expression: str) -> bool:\n         \"\"\"Add an expression to Argentine dictionary. Returns True if added, False if already exists.\"\"\"\n         with self.get_connection() as conn:\n             cursor = conn.cursor()\n             try:\n-                cursor.execute(\"\"\"\n+                cursor.execute(\n+                    \"\"\"\n                     INSERT INTO argentine_dictionary (expression, first_seen)\n                     VALUES (?, ?)\n-                \"\"\", (expression, datetime.utcnow().isoformat()))\n+                \"\"\",\n+                    (expression, datetime.utcnow().isoformat()),\n+                )\n                 conn.commit()\n                 return True\n             except sqlite3.IntegrityError:\n                 return False\n \n@@ -165,33 +198,40 @@\n \n     def expression_exists_in_argentine_dictionary(self, expression: str) -> bool:\n         \"\"\"Check if expression exists in Argentine dictionary\"\"\"\n         with self.get_connection() as conn:\n             cursor = conn.cursor()\n-            cursor.execute(\"SELECT 1 FROM argentine_dictionary WHERE expression = ?\", (expression,))\n+            cursor.execute(\n+                \"SELECT 1 FROM argentine_dictionary WHERE expression = ?\", (expression,)\n+            )\n             return cursor.fetchone() is not None\n \n     # Candidate terms operations\n     def add_candidate_term(self, term: str, context_snippet: str) -> bool:\n         \"\"\"Add a candidate term. Returns True if added, False if already exists.\"\"\"\n         with self.get_connection() as conn:\n             cursor = conn.cursor()\n             try:\n-                cursor.execute(\"\"\"\n+                cursor.execute(\n+                    \"\"\"\n                     INSERT INTO candidate_terms (term, first_seen, context_snippet)\n                     VALUES (?, ?, ?)\n-                \"\"\", (term, datetime.utcnow().isoformat(), context_snippet))\n+                \"\"\",\n+                    (term, datetime.utcnow().isoformat(), context_snippet),\n+                )\n                 conn.commit()\n                 return True\n             except sqlite3.IntegrityError:\n                 return False\n \n     def get_candidate_terms(self) -> List[Tuple[str, str, str]]:\n         \"\"\"Get all candidate terms\"\"\"\n         with self.get_connection() as conn:\n             cursor = conn.cursor()\n-            cursor.execute(\"SELECT term, first_seen, context_snippet FROM candidate_terms\")\n+            cursor.execute(\n+                \"SELECT term, first_seen, context_snippet FROM candidate_terms\"\n+            )\n             return cursor.fetchall()\n \n     def candidate_term_exists(self, term: str) -> bool:\n         \"\"\"Check if candidate term exists\"\"\"\n         with self.get_connection() as conn:\n@@ -203,6 +243,6 @@\n         \"\"\"Remove a candidate term. Returns True if removed, False if not found.\"\"\"\n         with self.get_connection() as conn:\n             cursor = conn.cursor()\n             cursor.execute(\"DELETE FROM candidate_terms WHERE term = ?\", (term,))\n             conn.commit()\n-            return cursor.rowcount > 0\n\\ No newline at end of file\n+            return cursor.rowcount > 0\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/conftest.py\t2025-09-16 16:11:14.193941+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/conftest.py\t2025-09-16 20:44:36.079220+00:00\n@@ -1,26 +1,29 @@\n \"\"\"\n Shared test fixtures and configuration for the transcription API test suite.\n \"\"\"\n+\n import os\n import tempfile\n import pytest\n import asyncio\n from pathlib import Path\n from unittest.mock import Mock, patch\n from httpx import AsyncClient\n from fastapi.testclient import TestClient\n \n # Set test environment variables before importing application code\n-os.environ.update({\n-    \"DB_PATH\": \":memory:\",\n-    \"WHISPER_MODEL\": \"tiny\",\n-    \"MAX_FILE_SIZE\": \"5\",\n-    \"UPLOAD_DIR\": \"tests/temp\",\n-    \"API_HOST\": \"127.0.0.1\",\n-    \"API_PORT\": \"8001\"\n-})\n+os.environ.update(\n+    {\n+        \"DB_PATH\": \":memory:\",\n+        \"WHISPER_MODEL\": \"tiny\",\n+        \"MAX_FILE_SIZE\": \"5\",\n+        \"UPLOAD_DIR\": \"tests/temp\",\n+        \"API_HOST\": \"127.0.0.1\",\n+        \"API_PORT\": \"8001\",\n+    }\n+)\n \n from main import app\n from src.config.settings import settings\n from src.repositories.database_repository import DatabaseRepository\n from src.services.transcription_service import TranscriptionService\n@@ -29,10 +32,11 @@\n \n # ============================================================================\n # Pytest Configuration\n # ============================================================================\n \n+\n @pytest.fixture(scope=\"session\")\n def event_loop():\n     \"\"\"Create an instance of the default event loop for the test session.\"\"\"\n     loop = asyncio.get_event_loop_policy().new_event_loop()\n     yield loop\n@@ -41,10 +45,11 @@\n \n # ============================================================================\n # Database Fixtures\n # ============================================================================\n \n+\n @pytest.fixture\n def db_repository():\n     \"\"\"Create a fresh database repository with in-memory database for each test.\"\"\"\n     repo = DatabaseRepository(\":memory:\")\n     return repo\n@@ -62,22 +67,29 @@\n     # Add sample Argentine expressions\n     repo.add_argentine_expression(\"laburo\")\n     repo.add_argentine_expression(\"guita\")\n \n     # Add sample candidate terms\n-    repo.add_candidate_term(\"blockchain\", \"el nuevo blockchain econ\u00f3mico ser\u00e1 revolucionario\")\n-    repo.add_candidate_term(\"fintech\", \"las empresas fintech est\u00e1n creciendo r\u00e1pidamente\")\n+    repo.add_candidate_term(\n+        \"blockchain\", \"el nuevo blockchain econ\u00f3mico ser\u00e1 revolucionario\"\n+    )\n+    repo.add_candidate_term(\n+        \"fintech\", \"las empresas fintech est\u00e1n creciendo r\u00e1pidamente\"\n+    )\n \n     # Add sample transcription\n-    repo.save_transcription(\"test_audio.mp3\", \"Hoy hablamos de inflaci\u00f3n y laburo en Argentina\")\n+    repo.save_transcription(\n+        \"test_audio.mp3\", \"Hoy hablamos de inflaci\u00f3n y laburo en Argentina\"\n+    )\n \n     return repo\n \n \n # ============================================================================\n # Service Fixtures\n # ============================================================================\n+\n \n @pytest.fixture\n def mock_whisper_model():\n     \"\"\"Mock Whisper model to avoid loading actual model in tests.\"\"\"\n     mock_model = Mock()\n@@ -87,13 +99,13 @@\n             {\n                 \"start\": 0.0,\n                 \"end\": 5.0,\n                 \"text\": \"This is a test transcription\",\n                 \"avg_logprob\": -0.5,\n-                \"compression_ratio\": 1.2\n+                \"compression_ratio\": 1.2,\n             }\n-        ]\n+        ],\n     }\n     return mock_model\n \n \n @pytest.fixture\n@@ -117,10 +129,11 @@\n \n \n # ============================================================================\n # File and Upload Fixtures\n # ============================================================================\n+\n \n @pytest.fixture\n def temp_upload_dir():\n     \"\"\"Create temporary directory for file uploads during tests.\"\"\"\n     with tempfile.TemporaryDirectory() as temp_dir:\n@@ -134,32 +147,33 @@\n \n @pytest.fixture\n def sample_mp3_file():\n     \"\"\"Create a minimal MP3 file for testing.\"\"\"\n     # MP3 header bytes for a minimal valid MP3 file\n-    mp3_header = b'\\xff\\xfb\\x90\\x00' + b'\\x00' * 100\n+    mp3_header = b\"\\xff\\xfb\\x90\\x00\" + b\"\\x00\" * 100\n     return (\"test_audio.mp3\", mp3_header, \"audio/mpeg\")\n \n \n @pytest.fixture\n def malicious_file():\n     \"\"\"Create a malicious file that appears to be MP3 but isn't.\"\"\"\n-    malicious_content = b'#!/bin/bash\\necho \"malicious script\"\\n' + b'\\x00' * 100\n+    malicious_content = b'#!/bin/bash\\necho \"malicious script\"\\n' + b\"\\x00\" * 100\n     return (\"malicious.mp3\", malicious_content, \"text/plain\")\n \n \n @pytest.fixture\n def oversized_file():\n     \"\"\"Create a file that exceeds size limits.\"\"\"\n     # Create file larger than MAX_FILE_SIZE (5MB in tests)\n-    large_content = b'\\xff\\xfb\\x90\\x00' + b'\\x00' * (6 * 1024 * 1024)\n+    large_content = b\"\\xff\\xfb\\x90\\x00\" + b\"\\x00\" * (6 * 1024 * 1024)\n     return (\"large_file.mp3\", large_content, \"audio/mpeg\")\n \n \n # ============================================================================\n # API Client Fixtures\n # ============================================================================\n+\n \n @pytest.fixture\n def test_client():\n     \"\"\"Synchronous test client for FastAPI application.\"\"\"\n     return TestClient(app)\n@@ -174,42 +188,44 @@\n \n # ============================================================================\n # Mock Fixtures\n # ============================================================================\n \n+\n @pytest.fixture\n def mock_whisper_transcribe():\n     \"\"\"Mock the whisper.load_model function to avoid loading actual models.\"\"\"\n-    with patch('src.services.transcription_service.whisper.load_model') as mock_load:\n+    with patch(\"src.services.transcription_service.whisper.load_model\") as mock_load:\n         mock_model = Mock()\n         mock_model.transcribe.return_value = {\n             \"text\": \"Test transcription with economic terms like inflaci\u00f3n and Argentine expressions like laburo.\",\n             \"segments\": [\n                 {\n                     \"start\": 0.0,\n                     \"end\": 10.0,\n                     \"text\": \"Test transcription with economic terms like inflaci\u00f3n and Argentine expressions like laburo.\",\n                     \"avg_logprob\": -0.3,\n-                    \"compression_ratio\": 1.1\n+                    \"compression_ratio\": 1.1,\n                 }\n-            ]\n+            ],\n         }\n         mock_load.return_value = mock_model\n         yield mock_model\n \n \n @pytest.fixture\n def mock_magic_from_file():\n     \"\"\"Mock python-magic file type detection.\"\"\"\n-    with patch('src.services.transcription_service.magic.from_file') as mock_magic:\n-        mock_magic.return_value = 'audio/mpeg'\n+    with patch(\"src.services.transcription_service.magic.from_file\") as mock_magic:\n+        mock_magic.return_value = \"audio/mpeg\"\n         yield mock_magic\n \n \n # ============================================================================\n # Test Data Fixtures\n # ============================================================================\n+\n \n @pytest.fixture\n def sample_transcript_text():\n     \"\"\"Sample transcript text with various terms for testing.\"\"\"\n     return (\n@@ -235,30 +251,32 @@\n \n # ============================================================================\n # Performance Testing Fixtures\n # ============================================================================\n \n+\n @pytest.fixture\n def performance_baseline():\n     \"\"\"Performance baseline metrics for comparison.\"\"\"\n     return {\n         \"transcription_time_per_minute\": 2.0,  # seconds\n         \"database_query_time\": 0.05,  # seconds\n         \"api_response_time\": 0.2,  # seconds\n-        \"memory_usage_mb\": 500  # MB\n+        \"memory_usage_mb\": 500,  # MB\n     }\n \n \n # ============================================================================\n # Helper Functions\n # ============================================================================\n+\n \n def create_test_audio_file(filename: str, content: bytes = None) -> Path:\n     \"\"\"Helper function to create test audio files.\"\"\"\n     if content is None:\n         # Create minimal MP3 header\n-        content = b'\\xff\\xfb\\x90\\x00' + b'\\x00' * 1000\n+        content = b\"\\xff\\xfb\\x90\\x00\" + b\"\\x00\" * 1000\n \n     test_file = Path(\"tests/temp\") / filename\n     test_file.parent.mkdir(parents=True, exist_ok=True)\n     test_file.write_bytes(content)\n     return test_file\n@@ -272,6 +290,6 @@\n         assert result.transcript_preview\n         assert result.filename\n         assert not result.error\n     else:\n         assert result.error\n-        assert not result.full_transcript\n\\ No newline at end of file\n+        assert not result.full_transcript\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/utils/test_helpers.py\t2025-09-16 16:12:25.249550+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/utils/test_helpers.py\t2025-09-16 20:44:36.104322+00:00\n@@ -1,8 +1,9 @@\n \"\"\"\n Test utilities and helper functions for the transcription API test suite.\n \"\"\"\n+\n import os\n import tempfile\n import time\n from pathlib import Path\n from typing import Dict, Any, Optional\n@@ -84,19 +85,25 @@\n     if expected_status:\n         # This would be used with the actual response object, not just data\n         pass\n \n \n-def create_test_upload_file(content: bytes, filename: str, content_type: str = \"audio/mpeg\"):\n+def create_test_upload_file(\n+    content: bytes, filename: str, content_type: str = \"audio/mpeg\"\n+):\n     \"\"\"Create a file-like object for testing uploads.\"\"\"\n     from io import BytesIO\n+\n     return BytesIO(content), filename, content_type\n \n \n-async def upload_test_file(client: AsyncClient, file_content: bytes,\n-                          filename: str = \"test.mp3\",\n-                          content_type: str = \"audio/mpeg\") -> Dict[str, Any]:\n+async def upload_test_file(\n+    client: AsyncClient,\n+    file_content: bytes,\n+    filename: str = \"test.mp3\",\n+    content_type: str = \"audio/mpeg\",\n+) -> Dict[str, Any]:\n     \"\"\"Helper to upload a test file via API.\"\"\"\n     files = {\"file\": (filename, file_content, content_type)}\n     response = await client.post(\"/upload\", files=files)\n     return response\n \n@@ -140,13 +147,13 @@\n             {\n                 \"start\": 0.0,\n                 \"end\": len(text) * 0.1,  # Rough estimate\n                 \"text\": text,\n                 \"avg_logprob\": -confidence,\n-                \"compression_ratio\": 1.2\n+                \"compression_ratio\": 1.2,\n             }\n-        ]\n+        ],\n     }\n \n \n class DatabaseStateManager:\n     \"\"\"Helper class for managing database state in tests.\"\"\"\n@@ -157,32 +164,37 @@\n \n     def capture_state(self):\n         \"\"\"Capture current database state.\"\"\"\n         self._initial_state = {\n             \"economic_terms\": len(self.db_repository.get_economic_terms()),\n-            \"argentine_expressions\": len(self.db_repository.get_argentine_expressions()),\n-            \"candidate_terms\": len(self.db_repository.get_candidate_terms())\n+            \"argentine_expressions\": len(\n+                self.db_repository.get_argentine_expressions()\n+            ),\n+            \"candidate_terms\": len(self.db_repository.get_candidate_terms()),\n         }\n         return self._initial_state\n \n     def assert_changes(self, expected_changes: Dict[str, int]):\n         \"\"\"Assert that database state changed as expected.\"\"\"\n         if not self._initial_state:\n             raise ValueError(\"Must call capture_state() first\")\n \n         current_state = {\n             \"economic_terms\": len(self.db_repository.get_economic_terms()),\n-            \"argentine_expressions\": len(self.db_repository.get_argentine_expressions()),\n-            \"candidate_terms\": len(self.db_repository.get_candidate_terms())\n+            \"argentine_expressions\": len(\n+                self.db_repository.get_argentine_expressions()\n+            ),\n+            \"candidate_terms\": len(self.db_repository.get_candidate_terms()),\n         }\n \n         for key, expected_change in expected_changes.items():\n             initial_count = self._initial_state[key]\n             current_count = current_state[key]\n             actual_change = current_count - initial_count\n-            assert actual_change == expected_change, \\\n-                f\"Expected {expected_change} change in {key}, got {actual_change}\"\n+            assert (\n+                actual_change == expected_change\n+            ), f\"Expected {expected_change} change in {key}, got {actual_change}\"\n \n \n class PerformanceProfiler:\n     \"\"\"Simple performance profiler for tests.\"\"\"\n \n@@ -203,12 +215,13 @@\n         \"\"\"Assert that an operation completed within time limit.\"\"\"\n         if operation_name not in self.timings:\n             raise ValueError(f\"Operation '{operation_name}' was not timed\")\n \n         actual_time = self.timings[operation_name]\n-        assert actual_time <= max_time, \\\n-            f\"Operation '{operation_name}' took {actual_time:.3f}s, expected <= {max_time:.3f}s\"\n+        assert (\n+            actual_time <= max_time\n+        ), f\"Operation '{operation_name}' took {actual_time:.3f}s, expected <= {max_time:.3f}s\"\n \n     def get_timing(self, operation_name: str) -> Optional[float]:\n         \"\"\"Get timing for a specific operation.\"\"\"\n         return self.timings.get(operation_name)\n \n@@ -223,11 +236,11 @@\n         \"DB_PATH\": \":memory:\",\n         \"WHISPER_MODEL\": \"tiny\",\n         \"MAX_FILE_SIZE\": \"5\",\n         \"UPLOAD_DIR\": \"tests/temp\",\n         \"API_HOST\": \"127.0.0.1\",\n-        \"API_PORT\": \"8001\"\n+        \"API_PORT\": \"8001\",\n     }\n \n     return mock_environment(**test_env)\n \n \n@@ -247,6 +260,6 @@\n         self.default_type = \"audio/mpeg\"\n \n     def from_file(self, file_path: str, mime: bool = False) -> str:\n         \"\"\"Mock magic.from_file function.\"\"\"\n         file_name = Path(file_path).name\n-        return self.file_type_mapping.get(file_name, self.default_type)\n\\ No newline at end of file\n+        return self.file_type_mapping.get(file_name, self.default_type)\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/security/test_file_security.py\t2025-09-16 16:13:39.350381+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/security/test_file_security.py\t2025-09-16 20:44:36.121586+00:00\n@@ -6,29 +6,32 @@\n - File size limit bypass\n - Path traversal attacks\n - Malicious file content\n - MIME type spoofing\n \"\"\"\n+\n import pytest\n import tempfile\n from pathlib import Path\n from unittest.mock import patch, Mock\n \n from src.services.transcription_service import TranscriptionService\n from tests.fixtures.test_data import (\n     create_mp3_bytes,\n     create_malicious_file_bytes,\n     create_invalid_file_bytes,\n-    create_oversized_file_bytes\n+    create_oversized_file_bytes,\n )\n from tests.utils.test_helpers import temporary_file, mock_environment\n \n \n class TestFileValidationSecurity:\n     \"\"\"Test file validation security measures.\"\"\"\n \n-    def test_valid_mp3_file_passes_validation(self, transcription_service, temp_upload_dir):\n+    def test_valid_mp3_file_passes_validation(\n+        self, transcription_service, temp_upload_dir\n+    ):\n         \"\"\"Test that valid MP3 files pass validation.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n \n         with temporary_file(mp3_content, \"valid_audio\", \".mp3\") as temp_file:\n             is_valid, error = transcription_service.validate_audio_file(temp_file)\n@@ -56,24 +59,28 @@\n         with temporary_file(oversized_content, \"oversized\", \".mp3\") as temp_file:\n             is_valid, error = transcription_service.validate_audio_file(temp_file)\n             assert is_valid is False\n             assert \"exceeds maximum\" in error.lower()\n \n-    @patch('src.services.transcription_service.magic.from_file')\n-    def test_mime_type_validation(self, mock_magic, transcription_service, temp_upload_dir):\n+    @patch(\"src.services.transcription_service.magic.from_file\")\n+    def test_mime_type_validation(\n+        self, mock_magic, transcription_service, temp_upload_dir\n+    ):\n         \"\"\"Test MIME type validation prevents spoofed files.\"\"\"\n         # Mock magic to return non-audio MIME type\n-        mock_magic.return_value = 'text/plain'\n+        mock_magic.return_value = \"text/plain\"\n \n         mp3_content = create_mp3_bytes(1)\n         with temporary_file(mp3_content, \"spoofed\", \".mp3\") as temp_file:\n             is_valid, error = transcription_service.validate_audio_file(temp_file)\n             assert is_valid is False\n             assert \"invalid file type\" in error.lower()\n \n-    @patch('src.services.transcription_service.magic.from_file')\n-    def test_mime_type_validation_graceful_fallback(self, mock_magic, transcription_service, temp_upload_dir):\n+    @patch(\"src.services.transcription_service.magic.from_file\")\n+    def test_mime_type_validation_graceful_fallback(\n+        self, mock_magic, transcription_service, temp_upload_dir\n+    ):\n         \"\"\"Test that validation continues gracefully if MIME detection fails.\"\"\"\n         # Mock magic to raise exception\n         mock_magic.side_effect = Exception(\"Magic not available\")\n \n         mp3_content = create_mp3_bytes(1)\n@@ -81,25 +88,27 @@\n             is_valid, error = transcription_service.validate_audio_file(temp_file)\n             # Should still pass based on extension validation\n             assert is_valid is True\n             assert error is None\n \n-    def test_malicious_file_content_detection(self, transcription_service, temp_upload_dir):\n+    def test_malicious_file_content_detection(\n+        self, transcription_service, temp_upload_dir\n+    ):\n         \"\"\"Test detection of files with malicious content disguised as MP3.\"\"\"\n         malicious_content = create_malicious_file_bytes()\n \n-        with patch('src.services.transcription_service.magic.from_file') as mock_magic:\n-            mock_magic.return_value = 'text/x-shellscript'\n+        with patch(\"src.services.transcription_service.magic.from_file\") as mock_magic:\n+            mock_magic.return_value = \"text/x-shellscript\"\n \n             with temporary_file(malicious_content, \"malicious\", \".mp3\") as temp_file:\n                 is_valid, error = transcription_service.validate_audio_file(temp_file)\n                 assert is_valid is False\n                 assert \"invalid file type\" in error.lower()\n \n     def test_empty_file_rejection(self, transcription_service, temp_upload_dir):\n         \"\"\"Test that empty files are rejected.\"\"\"\n-        with temporary_file(b'', \"empty\", \".mp3\") as temp_file:\n+        with temporary_file(b\"\", \"empty\", \".mp3\") as temp_file:\n             is_valid, error = transcription_service.validate_audio_file(temp_file)\n             assert is_valid is False\n             assert \"exceeds maximum\" in error.lower() or \"invalid\" in error.lower()\n \n     def test_path_traversal_in_filename(self, transcription_service, temp_upload_dir):\n@@ -108,11 +117,11 @@\n \n         # These shouldn't cause path traversal due to Path handling\n         dangerous_names = [\n             \"../../../etc/passwd.mp3\",\n             \"..\\\\..\\\\windows\\\\system32\\\\config.mp3\",\n-            \"../../../../root/.ssh/id_rsa.mp3\"\n+            \"../../../../root/.ssh/id_rsa.mp3\",\n         ]\n \n         for dangerous_name in dangerous_names:\n             with temporary_file(mp3_content) as temp_file:\n                 # The file validation doesn't actually process the filename in a way\n@@ -124,38 +133,47 @@\n \n class TestFileUploadSecurityIntegration:\n     \"\"\"Integration tests for file upload security through the API.\"\"\"\n \n     @pytest.mark.asyncio\n-    async def test_upload_endpoint_rejects_malicious_files(self, async_client, temp_upload_dir):\n+    async def test_upload_endpoint_rejects_malicious_files(\n+        self, async_client, temp_upload_dir\n+    ):\n         \"\"\"Test that the upload endpoint rejects malicious files.\"\"\"\n         malicious_content = create_malicious_file_bytes()\n \n-        with patch('src.services.transcription_service.magic.from_file') as mock_magic:\n-            mock_magic.return_value = 'application/x-executable'\n+        with patch(\"src.services.transcription_service.magic.from_file\") as mock_magic:\n+            mock_magic.return_value = \"application/x-executable\"\n \n             files = {\"file\": (\"malicious.mp3\", malicious_content, \"audio/mpeg\")}\n             response = await async_client.post(\"/upload\", files=files)\n \n             assert response.status_code == 400\n             response_data = response.json()\n             assert \"validation\" in response_data[\"detail\"].lower()\n \n     @pytest.mark.asyncio\n-    async def test_upload_endpoint_rejects_oversized_files(self, async_client, temp_upload_dir):\n+    async def test_upload_endpoint_rejects_oversized_files(\n+        self, async_client, temp_upload_dir\n+    ):\n         \"\"\"Test that the upload endpoint rejects oversized files.\"\"\"\n         oversized_content = create_oversized_file_bytes(10)  # 10MB > 5MB limit\n \n         files = {\"file\": (\"large.mp3\", oversized_content, \"audio/mpeg\")}\n         response = await async_client.post(\"/upload\", files=files)\n \n         assert response.status_code == 400\n         response_data = response.json()\n-        assert \"exceeds\" in response_data[\"detail\"].lower() or \"large\" in response_data[\"detail\"].lower()\n-\n-    @pytest.mark.asyncio\n-    async def test_upload_endpoint_handles_no_filename(self, async_client, temp_upload_dir):\n+        assert (\n+            \"exceeds\" in response_data[\"detail\"].lower()\n+            or \"large\" in response_data[\"detail\"].lower()\n+        )\n+\n+    @pytest.mark.asyncio\n+    async def test_upload_endpoint_handles_no_filename(\n+        self, async_client, temp_upload_dir\n+    ):\n         \"\"\"Test handling of uploads without filenames.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n \n         files = {\"file\": (\"\", mp3_content, \"audio/mpeg\")}\n         response = await async_client.post(\"/upload\", files=files)\n@@ -163,11 +181,13 @@\n         assert response.status_code == 400\n         response_data = response.json()\n         assert \"filename\" in response_data[\"detail\"].lower()\n \n     @pytest.mark.asyncio\n-    async def test_upload_endpoint_rejects_wrong_extensions(self, async_client, temp_upload_dir):\n+    async def test_upload_endpoint_rejects_wrong_extensions(\n+        self, async_client, temp_upload_dir\n+    ):\n         \"\"\"Test that the upload endpoint rejects files with wrong extensions.\"\"\"\n         content = create_mp3_bytes(1)\n \n         dangerous_filenames = [\"script.exe\", \"malware.bat\", \"hack.php\", \"evil.js\"]\n \n@@ -181,11 +201,13 @@\n \n \n class TestResourceExhaustionPrevention:\n     \"\"\"Test prevention of resource exhaustion attacks.\"\"\"\n \n-    def test_file_cleanup_on_validation_failure(self, transcription_service, temp_upload_dir):\n+    def test_file_cleanup_on_validation_failure(\n+        self, transcription_service, temp_upload_dir\n+    ):\n         \"\"\"Test that files are cleaned up even when validation fails.\"\"\"\n         oversized_content = create_oversized_file_bytes(6)\n \n         with temporary_file(oversized_content, \"test_cleanup\", \".mp3\") as temp_file:\n             # Validation should fail due to size\n@@ -204,22 +226,27 @@\n         # This is more of a placeholder for future memory monitoring\n         mp3_content = create_mp3_bytes(1)\n \n         files = {\"file\": (\"memory_test.mp3\", mp3_content, \"audio/mpeg\")}\n \n-        with patch('src.services.transcription_service.whisper.load_model') as mock_whisper:\n+        with patch(\n+            \"src.services.transcription_service.whisper.load_model\"\n+        ) as mock_whisper:\n             mock_model = Mock()\n             mock_model.transcribe.return_value = {\n                 \"text\": \"Test transcription\",\n-                \"segments\": []\n+                \"segments\": [],\n             }\n             mock_whisper.return_value = mock_model\n \n             response = await async_client.post(\"/upload\", files=files)\n \n             # If we get here without memory issues, test passes\n-            assert response.status_code in [200, 400]  # Either success or validation error\n+            assert response.status_code in [\n+                200,\n+                400,\n+            ]  # Either success or validation error\n \n     def test_concurrent_file_validation(self, transcription_service, temp_upload_dir):\n         \"\"\"Test that concurrent file validations don't interfere with each other.\"\"\"\n         import threading\n         import time\n@@ -229,11 +256,13 @@\n \n         def validate_file(file_content, filename):\n             try:\n                 with temporary_file(file_content, filename, \".mp3\") as temp_file:\n                     time.sleep(0.1)  # Simulate processing time\n-                    is_valid, error = transcription_service.validate_audio_file(temp_file)\n+                    is_valid, error = transcription_service.validate_audio_file(\n+                        temp_file\n+                    )\n                     results.append((filename, is_valid, error))\n             except Exception as e:\n                 errors.append((filename, str(e)))\n \n         # Create multiple threads validating different files\n@@ -262,11 +291,11 @@\n \n     def test_filename_sanitization(self, transcription_service):\n         \"\"\"Test that dangerous characters in filenames are handled safely.\"\"\"\n         # Note: This test assumes filename sanitization exists\n         # In the current implementation, Path handles most issues\n-        dangerous_chars = ['<', '>', ':', '\"', '|', '?', '*', '\\0', '\\n']\n+        dangerous_chars = [\"<\", \">\", \":\", '\"', \"|\", \"?\", \"*\", \"\\0\", \"\\n\"]\n \n         for char in dangerous_chars:\n             filename = f\"test{char}file.mp3\"\n             # In the current implementation, this would be handled by Path\n             # and the actual file operations are safe\n@@ -285,18 +314,18 @@\n         special_names = [\n             \"con.mp3\",  # Windows reserved name\n             \"aux.mp3\",  # Windows reserved name\n             \"prn.mp3\",  # Windows reserved name\n             \"nul.mp3\",  # Windows reserved name\n-            \".\",        # Current directory\n-            \"..\",       # Parent directory\n-            \"\",         # Empty string\n+            \".\",  # Current directory\n+            \"..\",  # Parent directory\n+            \"\",  # Empty string\n         ]\n \n         for name in special_names:\n             try:\n                 path = Path(name)\n                 # Path handling should be safe\n                 assert True\n             except Exception:\n                 # Some edge cases might raise exceptions, which is fine\n-                pass\n\\ No newline at end of file\n+                pass\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/integration/test_service_interactions.py\t2025-09-16 16:22:11.058342+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/integration/test_service_interactions.py\t2025-09-16 20:44:36.159413+00:00\n@@ -1,9 +1,10 @@\n \"\"\"\n Integration tests for service interactions and end-to-end workflows.\n Tests the integration between services and real database operations.\n \"\"\"\n+\n import pytest\n from pathlib import Path\n from unittest.mock import patch, Mock\n \n from src.services.transcription_service import TranscriptionService\n@@ -20,74 +21,92 @@\n     @pytest.fixture\n     def integrated_services(self):\n         \"\"\"Create integrated services sharing the same database.\"\"\"\n         db_repo = DatabaseRepository()\n         return {\n-            'transcription': TranscriptionService(db_repo),\n-            'glossary': GlossaryService(db_repo),\n-            'term_detection': TermDetectionService(db_repo),\n-            'database': db_repo\n+            \"transcription\": TranscriptionService(db_repo),\n+            \"glossary\": GlossaryService(db_repo),\n+            \"term_detection\": TermDetectionService(db_repo),\n+            \"database\": db_repo,\n         }\n \n-    @patch('src.services.transcription_service.whisper.load_model')\n-    def test_full_transcription_to_glossary_workflow(self, mock_load_model, integrated_services):\n+    @patch(\"src.services.transcription_service.whisper.load_model\")\n+    def test_full_transcription_to_glossary_workflow(\n+        self, mock_load_model, integrated_services\n+    ):\n         \"\"\"Test complete workflow from audio transcription to glossary update.\"\"\"\n         # Mock Whisper model\n         mock_model = Mock()\n-        mock_model.transcribe.return_value = {\"text\": SAMPLE_TRANSCRIPTS['economic_heavy']}\n+        mock_model.transcribe.return_value = {\n+            \"text\": SAMPLE_TRANSCRIPTS[\"economic_heavy\"]\n+        }\n         mock_load_model.return_value = mock_model\n \n         services = integrated_services\n         mp3_content = create_mp3_bytes(1)\n         filename = \"economic_discussion.mp3\"\n \n         # Step 1: Transcribe audio file\n         with temporary_file(mp3_content, \"economic\", \".mp3\") as temp_file:\n-            transcription_result = services['transcription'].transcribe_audio(temp_file, filename)\n+            transcription_result = services[\"transcription\"].transcribe_audio(\n+                temp_file, filename\n+            )\n \n         assert transcription_result.success is True\n-        assert transcription_result.full_transcript == SAMPLE_TRANSCRIPTS['economic_heavy']\n+        assert (\n+            transcription_result.full_transcript == SAMPLE_TRANSCRIPTS[\"economic_heavy\"]\n+        )\n \n         # Step 2: Update glossaries with transcript\n-        glossary_stats = services['glossary'].update_glossaries(transcription_result.full_transcript)\n-\n-        assert glossary_stats['economic_terms_added'] > 0\n-        assert glossary_stats['argentine_expressions_added'] > 0\n+        glossary_stats = services[\"glossary\"].update_glossaries(\n+            transcription_result.full_transcript\n+        )\n+\n+        assert glossary_stats[\"economic_terms_added\"] > 0\n+        assert glossary_stats[\"argentine_expressions_added\"] > 0\n \n         # Step 3: Verify data persistence\n-        glossaries = services['glossary'].get_glossaries()\n-        assert len(glossaries['economic_glossary']) > 0\n-        assert len(glossaries['argentine_dictionary']) > 0\n+        glossaries = services[\"glossary\"].get_glossaries()\n+        assert len(glossaries[\"economic_glossary\"]) > 0\n+        assert len(glossaries[\"argentine_dictionary\"]) > 0\n \n         # Step 4: Verify transcription is stored\n-        stored_transcription = services['database'].get_transcription_by_id(1)\n+        stored_transcription = services[\"database\"].get_transcription_by_id(1)\n         assert stored_transcription is not None\n-        assert stored_transcription.transcript == SAMPLE_TRANSCRIPTS['economic_heavy']\n+        assert stored_transcription.transcript == SAMPLE_TRANSCRIPTS[\"economic_heavy\"]\n \n     def test_term_detection_to_candidate_workflow(self, integrated_services):\n         \"\"\"Test workflow from term detection to candidate term creation.\"\"\"\n         services = integrated_services\n-        text_with_candidates = \"Hoy discutimos sobre blockchain y las criptomonedas en Argentina.\"\n+        text_with_candidates = (\n+            \"Hoy discutimos sobre blockchain y las criptomonedas en Argentina.\"\n+        )\n \n         # Step 1: Detect candidate terms\n-        candidates = services['term_detection'].detect_candidate_terms(text_with_candidates)\n+        candidates = services[\"term_detection\"].detect_candidate_terms(\n+            text_with_candidates\n+        )\n \n         assert len(candidates) > 0\n         candidate_terms = [candidate.term for candidate in candidates]\n-        assert any('blockchain' in term.lower() for term in candidate_terms)\n+        assert any(\"blockchain\" in term.lower() for term in candidate_terms)\n \n         # Step 2: Verify candidates are stored in database\n-        stored_candidates = services['database'].get_candidate_terms()\n+        stored_candidates = services[\"database\"].get_candidate_terms()\n         assert len(stored_candidates) > 0\n \n         # Step 3: Promote a candidate to economic glossary\n         candidate_to_promote = candidates[0].term\n-        promotion_success = services['glossary'].promote_candidate_to_economic(candidate_to_promote)\n+        promotion_success = services[\"glossary\"].promote_candidate_to_economic(\n+            candidate_to_promote\n+        )\n \n         assert promotion_success is True\n-        assert services['database'].term_exists_in_economic_glossary(candidate_to_promote)\n-        assert not services['database'].candidate_term_exists(candidate_to_promote)\n+        assert services[\"database\"].term_exists_in_economic_glossary(\n+            candidate_to_promote\n+        )\n+        assert not services[\"database\"].candidate_term_exists(candidate_to_promote)\n \n     def test_concurrent_service_operations(self, integrated_services):\n         \"\"\"Test concurrent operations across multiple services.\"\"\"\n         import threading\n         import time\n@@ -96,51 +115,63 @@\n         results = []\n         errors = []\n \n         def transcription_workflow(thread_id):\n             try:\n-                with patch('src.services.transcription_service.whisper.load_model') as mock_load:\n+                with patch(\n+                    \"src.services.transcription_service.whisper.load_model\"\n+                ) as mock_load:\n                     mock_model = Mock()\n-                    mock_model.transcribe.return_value = {\"text\": f\"Inflaci\u00f3n en Argentina {thread_id}\"}\n+                    mock_model.transcribe.return_value = {\n+                        \"text\": f\"Inflaci\u00f3n en Argentina {thread_id}\"\n+                    }\n                     mock_load.return_value = mock_model\n \n                     mp3_content = create_mp3_bytes(1)\n                     filename = f\"concurrent_{thread_id}.mp3\"\n \n-                    with temporary_file(mp3_content, f\"concurrent_{thread_id}\", \".mp3\") as temp_file:\n+                    with temporary_file(\n+                        mp3_content, f\"concurrent_{thread_id}\", \".mp3\"\n+                    ) as temp_file:\n                         time.sleep(0.01)  # Encourage concurrency\n-                        result = services['transcription'].transcribe_audio(temp_file, filename)\n-                        results.append((thread_id, 'transcription', result.success))\n+                        result = services[\"transcription\"].transcribe_audio(\n+                            temp_file, filename\n+                        )\n+                        results.append((thread_id, \"transcription\", result.success))\n             except Exception as e:\n-                errors.append((thread_id, 'transcription', str(e)))\n+                errors.append((thread_id, \"transcription\", str(e)))\n \n         def glossary_workflow(thread_id):\n             try:\n                 transcript = f\"La inflaci\u00f3n y el PIB son importantes {thread_id}\"\n                 time.sleep(0.01)\n-                stats = services['glossary'].update_glossaries(transcript)\n-                results.append((thread_id, 'glossary', stats['economic_terms_added'] > 0))\n+                stats = services[\"glossary\"].update_glossaries(transcript)\n+                results.append(\n+                    (thread_id, \"glossary\", stats[\"economic_terms_added\"] > 0)\n+                )\n             except Exception as e:\n-                errors.append((thread_id, 'glossary', str(e)))\n+                errors.append((thread_id, \"glossary\", str(e)))\n \n         def term_detection_workflow(thread_id):\n             try:\n                 text = f\"Hablamos de blockchain y fintech {thread_id}\"\n                 time.sleep(0.01)\n-                candidates = services['term_detection'].detect_candidate_terms(text)\n-                results.append((thread_id, 'term_detection', len(candidates) > 0))\n+                candidates = services[\"term_detection\"].detect_candidate_terms(text)\n+                results.append((thread_id, \"term_detection\", len(candidates) > 0))\n             except Exception as e:\n-                errors.append((thread_id, 'term_detection', str(e)))\n+                errors.append((thread_id, \"term_detection\", str(e)))\n \n         # Create threads for different workflows\n         threads = []\n         for thread_id in range(3):\n-            threads.extend([\n-                threading.Thread(target=transcription_workflow, args=(thread_id,)),\n-                threading.Thread(target=glossary_workflow, args=(thread_id,)),\n-                threading.Thread(target=term_detection_workflow, args=(thread_id,))\n-            ])\n+            threads.extend(\n+                [\n+                    threading.Thread(target=transcription_workflow, args=(thread_id,)),\n+                    threading.Thread(target=glossary_workflow, args=(thread_id,)),\n+                    threading.Thread(target=term_detection_workflow, args=(thread_id,)),\n+                ]\n+            )\n \n         # Start all threads\n         for thread in threads:\n             thread.start()\n \n@@ -164,12 +195,14 @@\n         \"\"\"Test that database operations rollback properly on service failures.\"\"\"\n         db_repo = DatabaseRepository()\n         glossary_service = GlossaryService(db_repo)\n \n         # Mock database to fail on second operation\n-        with patch.object(db_repo, 'add_economic_term') as mock_add_economic:\n-            with patch.object(db_repo, 'add_argentine_expression') as mock_add_argentine:\n+        with patch.object(db_repo, \"add_economic_term\") as mock_add_economic:\n+            with patch.object(\n+                db_repo, \"add_argentine_expression\"\n+            ) as mock_add_argentine:\n                 mock_add_economic.return_value = True\n                 mock_add_argentine.side_effect = Exception(\"Database error\")\n \n                 transcript = \"La inflaci\u00f3n y el laburo est\u00e1n relacionados\"\n \n@@ -209,12 +242,12 @@\n \n \n class TestServiceConfigurationIntegration:\n     \"\"\"Test integration with configuration and environment settings.\"\"\"\n \n-    @patch('src.config.settings.ECONOMIC_TERMS', ['custom_economic_term'])\n-    @patch('src.config.settings.ARGENTINE_EXPRESSIONS', ['custom_argentine_expr'])\n+    @patch(\"src.config.settings.ECONOMIC_TERMS\", [\"custom_economic_term\"])\n+    @patch(\"src.config.settings.ARGENTINE_EXPRESSIONS\", [\"custom_argentine_expr\"])\n     def test_services_respect_configuration(self):\n         \"\"\"Test that all services respect configuration settings.\"\"\"\n         db_repo = DatabaseRepository()\n         glossary_service = GlossaryService(db_repo)\n         term_detection_service = TermDetectionService(db_repo)\n@@ -222,29 +255,29 @@\n         # Test text with custom configured terms\n         text = \"The custom_economic_term and custom_argentine_expr are important\"\n \n         # Glossary service should detect configured terms\n         glossary_stats = glossary_service.update_glossaries(text)\n-        assert glossary_stats['economic_terms_added'] == 1\n-        assert glossary_stats['argentine_expressions_added'] == 1\n+        assert glossary_stats[\"economic_terms_added\"] == 1\n+        assert glossary_stats[\"argentine_expressions_added\"] == 1\n \n         # Term detection should respect the same configuration\n         candidates = term_detection_service.detect_candidate_terms(\n             \"Some other unknown_term in the text\"\n         )\n         # Should detect unknown_term as candidate, but not the configured ones\n         candidate_terms = [candidate.term for candidate in candidates]\n-        assert 'custom_economic_term' not in candidate_terms\n-        assert 'custom_argentine_expr' not in candidate_terms\n+        assert \"custom_economic_term\" not in candidate_terms\n+        assert \"custom_argentine_expr\" not in candidate_terms\n \n     def test_database_path_configuration(self):\n         \"\"\"Test that services work with different database configurations.\"\"\"\n         import tempfile\n         import os\n \n         # Create temporary database file\n-        with tempfile.NamedTemporaryFile(suffix='.db', delete=False) as temp_db:\n+        with tempfile.NamedTemporaryFile(suffix=\".db\", delete=False) as temp_db:\n             temp_db_path = temp_db.name\n \n         try:\n             # Create repository with custom database path\n             custom_repo = DatabaseRepository(temp_db_path)\n@@ -252,15 +285,15 @@\n \n             # Test operations work with custom database\n             transcript = \"Test inflaci\u00f3n in custom database\"\n             stats = glossary_service.update_glossaries(transcript)\n \n-            assert stats['economic_terms_added'] > 0\n+            assert stats[\"economic_terms_added\"] > 0\n \n             # Verify data is in the custom database\n             glossaries = glossary_service.get_glossaries()\n-            assert len(glossaries['economic_glossary']) > 0\n+            assert len(glossaries[\"economic_glossary\"]) > 0\n \n         finally:\n             # Cleanup\n             if os.path.exists(temp_db_path):\n                 os.unlink(temp_db_path)\n@@ -271,20 +304,23 @@\n \n     def test_database_error_propagation(self):\n         \"\"\"Test how database errors propagate through service layers.\"\"\"\n         db_repo = DatabaseRepository()\n \n-        with patch.object(db_repo, 'get_connection') as mock_connection:\n+        with patch.object(db_repo, \"get_connection\") as mock_connection:\n             mock_connection.side_effect = Exception(\"Database connection failed\")\n \n             glossary_service = GlossaryService(db_repo)\n \n             # Test that service handles database errors gracefully\n             try:\n                 glossaries = glossary_service.get_glossaries()\n                 # Should return empty structure on error\n-                assert glossaries == {\"economic_glossary\": [], \"argentine_dictionary\": []}\n+                assert glossaries == {\n+                    \"economic_glossary\": [],\n+                    \"argentine_dictionary\": [],\n+                }\n             except Exception:\n                 # If service propagates exception, that's also acceptable behavior\n                 pass\n \n     def test_service_failure_isolation(self):\n@@ -292,15 +328,17 @@\n         db_repo = DatabaseRepository()\n         glossary_service = GlossaryService(db_repo)\n         term_detection_service = TermDetectionService(db_repo)\n \n         # Cause failure in glossary service\n-        with patch.object(glossary_service, 'update_glossaries') as mock_update:\n+        with patch.object(glossary_service, \"update_glossaries\") as mock_update:\n             mock_update.side_effect = Exception(\"Glossary service failed\")\n \n             # Term detection service should still work\n-            candidates = term_detection_service.detect_candidate_terms(\"Test blockchain technology\")\n+            candidates = term_detection_service.detect_candidate_terms(\n+                \"Test blockchain technology\"\n+            )\n             assert isinstance(candidates, list)\n \n             # Database should still be accessible directly\n             success = db_repo.add_economic_term(\"test_term\", \"manual\")\n             assert success is True\n@@ -316,15 +354,18 @@\n         db_repo = DatabaseRepository()\n         glossary_service = GlossaryService(db_repo)\n         term_detection_service = TermDetectionService(db_repo)\n \n         # Create large transcript with repeated terms\n-        large_transcript = \" \".join([\n-            \"La inflaci\u00f3n en Argentina afecta el PIB y el d\u00f3lar. \"\n-            \"Los ciudadanos buscan laburo y manejan la guita con cuidado. \"\n-            \"Las empresas de blockchain y fintech est\u00e1n creciendo. \"\n-        ] * 100)  # Repeat 100 times\n+        large_transcript = \" \".join(\n+            [\n+                \"La inflaci\u00f3n en Argentina afecta el PIB y el d\u00f3lar. \"\n+                \"Los ciudadanos buscan laburo y manejan la guita con cuidado. \"\n+                \"Las empresas de blockchain y fintech est\u00e1n creciendo. \"\n+            ]\n+            * 100\n+        )  # Repeat 100 times\n \n         start_time = time.time()\n \n         # Process through glossary service\n         glossary_stats = glossary_service.update_glossaries(large_transcript)\n@@ -336,11 +377,11 @@\n \n         # Should complete within reasonable time (adjust threshold as needed)\n         assert processing_time < 10.0, f\"Processing took {processing_time:.2f} seconds\"\n \n         # Should still produce valid results\n-        assert glossary_stats['economic_terms_added'] > 0\n+        assert glossary_stats[\"economic_terms_added\"] > 0\n         assert isinstance(candidates, list)\n \n     def test_concurrent_database_access_performance(self):\n         \"\"\"Test performance under concurrent database access.\"\"\"\n         import threading\n@@ -355,11 +396,11 @@\n         def concurrent_operation(service_id, service):\n             try:\n                 for i in range(10):\n                     transcript = f\"Inflaci\u00f3n {service_id}_{i} y PIB en Argentina\"\n                     stats = service.update_glossaries(transcript)\n-                    results.append((service_id, i, stats['economic_terms_added']))\n+                    results.append((service_id, i, stats[\"economic_terms_added\"]))\n             except Exception as e:\n                 results.append((service_id, -1, str(e)))\n \n         threads = []\n         for i, service in enumerate(services):\n@@ -376,6 +417,8 @@\n         assert total_time < 15.0, f\"Concurrent operations took {total_time:.2f} seconds\"\n \n         # All operations should succeed\n         assert len(results) == 50  # 5 services * 10 operations each\n         for service_id, operation_id, result in results:\n-            assert isinstance(result, int) and result >= 0, f\"Operation {service_id}_{operation_id} failed: {result}\"\n\\ No newline at end of file\n+            assert (\n+                isinstance(result, int) and result >= 0\n+            ), f\"Operation {service_id}_{operation_id} failed: {result}\"\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_glossary_service.py\t2025-09-16 16:17:22.623915+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_glossary_service.py\t2025-09-16 20:44:36.178969+00:00\n@@ -1,14 +1,19 @@\n \"\"\"\n Comprehensive unit tests for GlossaryService covering term detection,\n promotion functionality, and statistics tracking.\n \"\"\"\n+\n import pytest\n from unittest.mock import Mock, patch\n \n from src.services.glossary_service import GlossaryService\n-from tests.fixtures.test_data import SAMPLE_TRANSCRIPTS, SAMPLE_ECONOMIC_TERMS, SAMPLE_ARGENTINE_EXPRESSIONS\n+from tests.fixtures.test_data import (\n+    SAMPLE_TRANSCRIPTS,\n+    SAMPLE_ECONOMIC_TERMS,\n+    SAMPLE_ARGENTINE_EXPRESSIONS,\n+)\n \n \n class TestGlossaryServiceInitialization:\n     \"\"\"Test GlossaryService initialization and dependency injection.\"\"\"\n \n@@ -26,48 +31,52 @@\n class TestGlossaryUpdates:\n     \"\"\"Test glossary update functionality.\"\"\"\n \n     def test_update_glossaries_with_economic_terms(self, glossary_service):\n         \"\"\"Test updating glossaries with transcript containing economic terms.\"\"\"\n-        transcript = SAMPLE_TRANSCRIPTS['economic_heavy']\n+        transcript = SAMPLE_TRANSCRIPTS[\"economic_heavy\"]\n \n         stats = glossary_service.update_glossaries(transcript)\n \n         assert isinstance(stats, dict)\n         assert \"economic_terms_added\" in stats\n         assert \"argentine_expressions_added\" in stats\n         assert stats[\"economic_terms_added\"] > 0\n \n     def test_update_glossaries_with_argentine_expressions(self, glossary_service):\n         \"\"\"Test updating glossaries with transcript containing Argentine expressions.\"\"\"\n-        transcript = SAMPLE_TRANSCRIPTS['argentine_heavy']\n+        transcript = SAMPLE_TRANSCRIPTS[\"argentine_heavy\"]\n \n         stats = glossary_service.update_glossaries(transcript)\n \n         assert stats[\"argentine_expressions_added\"] > 0\n \n     def test_update_glossaries_with_mixed_content(self, glossary_service):\n         \"\"\"Test updating glossaries with mixed content.\"\"\"\n-        transcript = SAMPLE_TRANSCRIPTS['mixed_content']\n+        transcript = SAMPLE_TRANSCRIPTS[\"mixed_content\"]\n \n         stats = glossary_service.update_glossaries(transcript)\n \n         assert stats[\"economic_terms_added\"] > 0\n         assert stats[\"argentine_expressions_added\"] > 0\n \n     def test_update_glossaries_with_no_matches(self, glossary_service):\n         \"\"\"Test updating glossaries with text containing no known terms.\"\"\"\n-        transcript = \"This is a completely unrelated text about technology and computers.\"\n+        transcript = (\n+            \"This is a completely unrelated text about technology and computers.\"\n+        )\n \n         stats = glossary_service.update_glossaries(transcript)\n \n         assert stats[\"economic_terms_added\"] == 0\n         assert stats[\"argentine_expressions_added\"] == 0\n \n     def test_update_glossaries_case_insensitive_matching(self, glossary_service):\n         \"\"\"Test that term matching is case insensitive.\"\"\"\n-        transcript = \"La INFLACI\u00d3N est\u00e1 muy alta y el PIB bajo. Tambi\u00e9n hay poco LABURO.\"\n+        transcript = (\n+            \"La INFLACI\u00d3N est\u00e1 muy alta y el PIB bajo. Tambi\u00e9n hay poco LABURO.\"\n+        )\n \n         stats = glossary_service.update_glossaries(transcript)\n \n         assert stats[\"economic_terms_added\"] > 0\n         assert stats[\"argentine_expressions_added\"] > 0\n@@ -93,11 +102,13 @@\n         # First time should add term\n         assert stats1[\"economic_terms_added\"] == 1\n         # Second time should not add duplicate\n         assert stats2[\"economic_terms_added\"] == 0\n \n-    def test_update_glossaries_with_multiple_terms_same_category(self, glossary_service):\n+    def test_update_glossaries_with_multiple_terms_same_category(\n+        self, glossary_service\n+    ):\n         \"\"\"Test adding multiple terms from the same category.\"\"\"\n         transcript = \"La inflaci\u00f3n, el PIB, las reservas y el d\u00f3lar est\u00e1n relacionados.\"\n \n         stats = glossary_service.update_glossaries(transcript)\n \n@@ -112,21 +123,23 @@\n         # Should match both terms despite accents\n         assert stats[\"economic_terms_added\"] >= 2\n \n     def test_update_glossaries_logging_behavior(self, glossary_service):\n         \"\"\"Test that appropriate logging occurs during updates.\"\"\"\n-        with patch('src.services.glossary_service.logger') as mock_logger:\n+        with patch(\"src.services.glossary_service.logger\") as mock_logger:\n             transcript = \"La inflaci\u00f3n est\u00e1 muy alta.\"\n \n             glossary_service.update_glossaries(transcript)\n \n             # Verify logging calls\n             mock_logger.info.assert_called()\n \n     def test_update_glossaries_database_error_handling(self, glossary_service):\n         \"\"\"Test handling of database errors during updates.\"\"\"\n-        with patch.object(glossary_service.db_repository, 'add_economic_term') as mock_add:\n+        with patch.object(\n+            glossary_service.db_repository, \"add_economic_term\"\n+        ) as mock_add:\n             mock_add.side_effect = Exception(\"Database error\")\n \n             transcript = \"La inflaci\u00f3n est\u00e1 alta.\"\n \n             # Should not raise exception, should handle gracefully\n@@ -167,21 +180,25 @@\n         for expr_data in glossaries[\"argentine_dictionary\"]:\n             assert len(expr_data) == 2  # expression, first_seen\n \n     def test_get_glossaries_database_error_handling(self, glossary_service):\n         \"\"\"Test handling of database errors during retrieval.\"\"\"\n-        with patch.object(glossary_service.db_repository, 'get_economic_terms') as mock_get:\n+        with patch.object(\n+            glossary_service.db_repository, \"get_economic_terms\"\n+        ) as mock_get:\n             mock_get.side_effect = Exception(\"Database error\")\n \n             glossaries = glossary_service.get_glossaries()\n \n             # Should return empty structure on error\n             assert glossaries == {\"economic_glossary\": [], \"argentine_dictionary\": []}\n \n     def test_get_glossaries_partial_failure(self, glossary_service):\n         \"\"\"Test handling when one glossary fails but not the other.\"\"\"\n-        with patch.object(glossary_service.db_repository, 'get_economic_terms') as mock_get_econ:\n+        with patch.object(\n+            glossary_service.db_repository, \"get_economic_terms\"\n+        ) as mock_get_econ:\n             mock_get_econ.side_effect = Exception(\"Economic terms error\")\n \n             # Add some Argentine terms first\n             glossary_service.db_repository.add_argentine_expression(\"laburo\")\n \n@@ -197,27 +214,33 @@\n     \"\"\"Test candidate term promotion functionality.\"\"\"\n \n     def test_promote_candidate_to_economic_success(self, glossary_service):\n         \"\"\"Test successful promotion of candidate to economic glossary.\"\"\"\n         # Add a candidate term first\n-        glossary_service.db_repository.add_candidate_term(\"blockchain\", \"blockchain context\")\n+        glossary_service.db_repository.add_candidate_term(\n+            \"blockchain\", \"blockchain context\"\n+        )\n \n         success = glossary_service.promote_candidate_to_economic(\"blockchain\")\n \n         assert success is True\n-        assert glossary_service.db_repository.term_exists_in_economic_glossary(\"blockchain\")\n+        assert glossary_service.db_repository.term_exists_in_economic_glossary(\n+            \"blockchain\"\n+        )\n         assert not glossary_service.db_repository.candidate_term_exists(\"blockchain\")\n \n     def test_promote_candidate_to_argentine_success(self, glossary_service):\n         \"\"\"Test successful promotion of candidate to Argentine dictionary.\"\"\"\n         # Add a candidate term first\n         glossary_service.db_repository.add_candidate_term(\"buenardo\", \"est\u00e1 buenardo\")\n \n         success = glossary_service.promote_candidate_to_argentine(\"buenardo\")\n \n         assert success is True\n-        assert glossary_service.db_repository.expression_exists_in_argentine_dictionary(\"buenardo\")\n+        assert glossary_service.db_repository.expression_exists_in_argentine_dictionary(\n+            \"buenardo\"\n+        )\n         assert not glossary_service.db_repository.candidate_term_exists(\"buenardo\")\n \n     def test_promote_nonexistent_candidate(self, glossary_service):\n         \"\"\"Test promotion of non-existent candidate term.\"\"\"\n         success = glossary_service.promote_candidate_to_economic(\"nonexistent\")\n@@ -253,20 +276,22 @@\n     def test_promote_candidate_database_error(self, glossary_service):\n         \"\"\"Test handling of database errors during promotion.\"\"\"\n         # Add candidate first\n         glossary_service.db_repository.add_candidate_term(\"test_term\", \"context\")\n \n-        with patch.object(glossary_service.db_repository, 'add_economic_term') as mock_add:\n+        with patch.object(\n+            glossary_service.db_repository, \"add_economic_term\"\n+        ) as mock_add:\n             mock_add.side_effect = Exception(\"Database error\")\n \n             success = glossary_service.promote_candidate_to_economic(\"test_term\")\n \n             assert success is False\n \n     def test_promote_candidate_logging(self, glossary_service):\n         \"\"\"Test logging during candidate promotion.\"\"\"\n-        with patch('src.services.glossary_service.logger') as mock_logger:\n+        with patch(\"src.services.glossary_service.logger\") as mock_logger:\n             # Add candidate first\n             glossary_service.db_repository.add_candidate_term(\"test_term\", \"context\")\n \n             glossary_service.promote_candidate_to_economic(\"test_term\")\n \n@@ -411,34 +436,34 @@\n \n \n class TestConfigurationIntegration:\n     \"\"\"Test integration with configuration settings.\"\"\"\n \n-    @patch('src.config.settings.ECONOMIC_TERMS', ['custom_term'])\n+    @patch(\"src.config.settings.ECONOMIC_TERMS\", [\"custom_term\"])\n     def test_update_with_custom_economic_terms(self, glossary_service):\n         \"\"\"Test that service uses configured economic terms.\"\"\"\n         transcript = \"The custom_term is important for economics.\"\n \n         stats = glossary_service.update_glossaries(transcript)\n \n         assert stats[\"economic_terms_added\"] == 1\n \n-    @patch('src.config.settings.ARGENTINE_EXPRESSIONS', ['custom_expr'])\n+    @patch(\"src.config.settings.ARGENTINE_EXPRESSIONS\", [\"custom_expr\"])\n     def test_update_with_custom_argentine_expressions(self, glossary_service):\n         \"\"\"Test that service uses configured Argentine expressions.\"\"\"\n         transcript = \"That custom_expr is very Argentine.\"\n \n         stats = glossary_service.update_glossaries(transcript)\n \n         assert stats[\"argentine_expressions_added\"] == 1\n \n     def test_service_with_empty_term_lists(self, glossary_service):\n         \"\"\"Test service behavior when term lists are empty.\"\"\"\n-        with patch('src.config.settings.ECONOMIC_TERMS', []):\n-            with patch('src.config.settings.ARGENTINE_EXPRESSIONS', []):\n+        with patch(\"src.config.settings.ECONOMIC_TERMS\", []):\n+            with patch(\"src.config.settings.ARGENTINE_EXPRESSIONS\", []):\n                 transcript = \"inflaci\u00f3n laburo PIB guita\"\n \n                 stats = glossary_service.update_glossaries(transcript)\n \n                 # Should find no terms since lists are empty\n                 assert stats[\"economic_terms_added\"] == 0\n-                assert stats[\"argentine_expressions_added\"] == 0\n\\ No newline at end of file\n+                assert stats[\"argentine_expressions_added\"] == 0\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_term_detection_service.py\t2025-09-16 16:18:32.152649+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_term_detection_service.py\t2025-09-16 20:44:36.183242+00:00\n@@ -1,9 +1,10 @@\n \"\"\"\n Comprehensive unit tests for TermDetectionService covering text normalization,\n candidate term detection, and context extraction functionality.\n \"\"\"\n+\n import pytest\n from unittest.mock import Mock, patch\n \n from src.services.term_detection_service import TermDetectionService\n from tests.fixtures.test_data import SAMPLE_TRANSCRIPTS\n@@ -41,11 +42,13 @@\n             (\"p\u00fablica\", \"publica\"),\n         ]\n \n         for input_word, expected in test_cases:\n             result = term_detection_service.normalize_token(input_word)\n-            assert result == expected, f\"Failed for {input_word}: got {result}, expected {expected}\"\n+            assert (\n+                result == expected\n+            ), f\"Failed for {input_word}: got {result}, expected {expected}\"\n \n     def test_normalize_token_punctuation(self, term_detection_service):\n         \"\"\"Test punctuation removal in normalization.\"\"\"\n         test_cases = [\n             (\"word.\", \"word\"),\n@@ -59,11 +62,13 @@\n             ('\"word\"', \"word\"),\n         ]\n \n         for input_word, expected in test_cases:\n             result = term_detection_service.normalize_token(input_word)\n-            assert result == expected, f\"Failed for {input_word}: got {result}, expected {expected}\"\n+            assert (\n+                result == expected\n+            ), f\"Failed for {input_word}: got {result}, expected {expected}\"\n \n     def test_normalize_token_mixed_cases(self, term_detection_service):\n         \"\"\"Test normalization with mixed cases.\"\"\"\n         test_cases = [\n             (\"BLOCKCHAIN\", \"blockchain\"),\n@@ -117,17 +122,19 @@\n \n     def test_is_valid_candidate_minimum_length(self, term_detection_service):\n         \"\"\"Test minimum length requirement.\"\"\"\n         test_cases = [\n             (\"ab\", False),  # Too short\n-            (\"abc\", True),   # Minimum length\n+            (\"abc\", True),  # Minimum length\n             (\"abcd\", True),  # Above minimum\n         ]\n \n         for word, expected in test_cases:\n             result = term_detection_service.is_valid_candidate(word)\n-            assert result == expected, f\"Failed for {word}: got {result}, expected {expected}\"\n+            assert (\n+                result == expected\n+            ), f\"Failed for {word}: got {result}, expected {expected}\"\n \n     def test_is_valid_candidate_stopwords(self, term_detection_service):\n         \"\"\"Test that Spanish stopwords are rejected.\"\"\"\n         stopwords = [\"el\", \"la\", \"los\", \"las\", \"de\", \"del\", \"y\", \"o\", \"que\", \"en\", \"es\"]\n \n@@ -165,11 +172,11 @@\n class TestTermDetection:\n     \"\"\"Test candidate term detection functionality.\"\"\"\n \n     def test_detect_new_terms_basic_functionality(self, term_detection_service):\n         \"\"\"Test basic new term detection.\"\"\"\n-        transcript = SAMPLE_TRANSCRIPTS['candidate_rich']\n+        transcript = SAMPLE_TRANSCRIPTS[\"candidate_rich\"]\n \n         stats = term_detection_service.detect_new_terms(transcript)\n \n         assert isinstance(stats, dict)\n         assert \"new_candidates_added\" in stats\n@@ -240,11 +247,13 @@\n         assert \"fintech\" not in candidate_terms\n \n     def test_detect_new_terms_skips_existing_candidates(self, term_detection_service):\n         \"\"\"Test that existing candidate terms are not added again.\"\"\"\n         # Add candidate first\n-        term_detection_service.db_repository.add_candidate_term(\"blockchain\", \"first context\")\n+        term_detection_service.db_repository.add_candidate_term(\n+            \"blockchain\", \"first context\"\n+        )\n \n         transcript = \"blockchain aparece otra vez en diferente contexto\"\n \n         stats = term_detection_service.detect_new_terms(transcript)\n \n@@ -340,11 +349,13 @@\n     def test_get_candidate_statistics(self, term_detection_service):\n         \"\"\"Test candidate statistics calculation.\"\"\"\n         # Add some candidates\n         terms = [\"blockchain\", \"fintech\", \"startup\"]\n         for term in terms:\n-            term_detection_service.db_repository.add_candidate_term(term, f\"{term} context\")\n+            term_detection_service.db_repository.add_candidate_term(\n+                term, f\"{term} context\"\n+            )\n \n         stats = term_detection_service.get_candidate_statistics()\n \n         assert isinstance(stats, dict)\n         assert \"total_candidates\" in stats\n@@ -369,11 +380,13 @@\n \n         assert success is False\n \n     def test_remove_candidate_database_error(self, term_detection_service):\n         \"\"\"Test handling of database errors during removal.\"\"\"\n-        with patch.object(term_detection_service.db_repository, 'remove_candidate_term') as mock_remove:\n+        with patch.object(\n+            term_detection_service.db_repository, \"remove_candidate_term\"\n+        ) as mock_remove:\n             mock_remove.side_effect = Exception(\"Database error\")\n \n             success = term_detection_service.remove_candidate(\"test\")\n \n             assert success is False\n@@ -382,11 +395,13 @@\n class TestErrorHandling:\n     \"\"\"Test error handling and edge cases.\"\"\"\n \n     def test_detect_new_terms_database_error_handling(self, term_detection_service):\n         \"\"\"Test handling of database errors during detection.\"\"\"\n-        with patch.object(term_detection_service.db_repository, 'add_candidate_term') as mock_add:\n+        with patch.object(\n+            term_detection_service.db_repository, \"add_candidate_term\"\n+        ) as mock_add:\n             mock_add.side_effect = Exception(\"Database error\")\n \n             transcript = \"blockchain fintech startup\"\n \n             # Should not raise exception\n@@ -398,31 +413,35 @@\n                 # If implementation allows exceptions to propagate, that's also valid\n                 pass\n \n     def test_get_candidates_database_error(self, term_detection_service):\n         \"\"\"Test handling of database errors when getting candidates.\"\"\"\n-        with patch.object(term_detection_service.db_repository, 'get_candidate_terms') as mock_get:\n+        with patch.object(\n+            term_detection_service.db_repository, \"get_candidate_terms\"\n+        ) as mock_get:\n             mock_get.side_effect = Exception(\"Database error\")\n \n             candidates = term_detection_service.get_candidates()\n \n             # Should return empty list on error\n             assert candidates == []\n \n     def test_get_candidate_statistics_database_error(self, term_detection_service):\n         \"\"\"Test handling of database errors when getting statistics.\"\"\"\n-        with patch.object(term_detection_service.db_repository, 'get_candidate_terms') as mock_get:\n+        with patch.object(\n+            term_detection_service.db_repository, \"get_candidate_terms\"\n+        ) as mock_get:\n             mock_get.side_effect = Exception(\"Database error\")\n \n             stats = term_detection_service.get_candidate_statistics()\n \n             # Should return default values on error\n             assert stats == {\"total_candidates\": 0, \"unique_candidates\": 0}\n \n     def test_logging_behavior(self, term_detection_service):\n         \"\"\"Test that appropriate logging occurs.\"\"\"\n-        with patch('src.services.term_detection_service.logger') as mock_logger:\n+        with patch(\"src.services.term_detection_service.logger\") as mock_logger:\n             transcript = \"blockchain is a new technology\"\n \n             term_detection_service.detect_new_terms(transcript)\n \n             # Verify logging calls\n@@ -451,11 +470,13 @@\n         results = []\n         errors = []\n \n         def detect_terms(thread_id):\n             try:\n-                transcript = f\"blockchain_{thread_id} fintech_{thread_id} startup_{thread_id}\"\n+                transcript = (\n+                    f\"blockchain_{thread_id} fintech_{thread_id} startup_{thread_id}\"\n+                )\n                 time.sleep(0.01)  # Small delay\n                 stats = term_detection_service.detect_new_terms(transcript)\n                 results.append((thread_id, stats))\n             except Exception as e:\n                 errors.append((thread_id, str(e)))\n@@ -490,11 +511,11 @@\n class TestConfigurationIntegration:\n     \"\"\"Test integration with configuration settings.\"\"\"\n \n     def test_stopword_filtering_with_custom_stopwords(self, term_detection_service):\n         \"\"\"Test that configured stopwords are properly filtered.\"\"\"\n-        with patch('src.config.settings.SPANISH_STOPWORDS', {'custom', 'stopword'}):\n+        with patch(\"src.config.settings.SPANISH_STOPWORDS\", {\"custom\", \"stopword\"}):\n             transcript = \"custom blockchain stopword fintech regular\"\n \n             stats = term_detection_service.detect_new_terms(transcript)\n \n             candidates = term_detection_service.db_repository.get_candidate_terms()\n@@ -503,6 +524,6 @@\n             # Custom stopwords should be filtered out\n             assert \"custom\" not in candidate_terms\n             assert \"stopword\" not in candidate_terms\n             assert \"blockchain\" in candidate_terms\n             assert \"fintech\" in candidate_terms\n-            assert \"regular\" in candidate_terms\n\\ No newline at end of file\n+            assert \"regular\" in candidate_terms\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/repositories/test_database_repository.py\t2025-09-16 16:14:58.296202+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/repositories/test_database_repository.py\t2025-09-16 20:44:36.192434+00:00\n@@ -1,9 +1,10 @@\n \"\"\"\n Comprehensive tests for DatabaseRepository covering all database operations,\n connection management, and transaction safety.\n \"\"\"\n+\n import pytest\n import sqlite3\n from datetime import datetime\n from unittest.mock import patch, Mock\n \n@@ -22,14 +23,14 @@\n             # Check that all tables exist\n             cursor.execute(\"SELECT name FROM sqlite_master WHERE type='table'\")\n             tables = [row[0] for row in cursor.fetchall()]\n \n             expected_tables = [\n-                'transcriptions',\n-                'economic_glossary',\n-                'argentine_dictionary',\n-                'candidate_terms'\n+                \"transcriptions\",\n+                \"economic_glossary\",\n+                \"argentine_dictionary\",\n+                \"candidate_terms\",\n             ]\n \n             for table in expected_tables:\n                 assert table in tables, f\"Table '{table}' was not created\"\n \n@@ -41,14 +42,14 @@\n             # Check that indexes exist\n             cursor.execute(\"SELECT name FROM sqlite_master WHERE type='index'\")\n             indexes = [row[0] for row in cursor.fetchall()]\n \n             expected_indexes = [\n-                'idx_transcriptions_created_at',\n-                'idx_economic_glossary_term',\n-                'idx_argentine_dictionary_expression',\n-                'idx_candidate_terms_term'\n+                \"idx_transcriptions_created_at\",\n+                \"idx_economic_glossary_term\",\n+                \"idx_argentine_dictionary_expression\",\n+                \"idx_candidate_terms_term\",\n             ]\n \n             for index in expected_indexes:\n                 assert index in indexes, f\"Index '{index}' was not created\"\n \n@@ -60,14 +61,14 @@\n             # Test transcriptions table schema\n             cursor.execute(\"PRAGMA table_info(transcriptions)\")\n             transcription_columns = {row[1]: row[2] for row in cursor.fetchall()}\n \n             expected_transcription_columns = {\n-                'id': 'INTEGER',\n-                'filename': 'TEXT',\n-                'transcript': 'TEXT',\n-                'created_at': 'TEXT'\n+                \"id\": \"INTEGER\",\n+                \"filename\": \"TEXT\",\n+                \"transcript\": \"TEXT\",\n+                \"created_at\": \"TEXT\",\n             }\n \n             for col_name, col_type in expected_transcription_columns.items():\n                 assert col_name in transcription_columns\n                 assert transcription_columns[col_name] == col_type\n@@ -75,14 +76,14 @@\n             # Test economic_glossary table schema\n             cursor.execute(\"PRAGMA table_info(economic_glossary)\")\n             economic_columns = {row[1]: row[2] for row in cursor.fetchall()}\n \n             expected_economic_columns = {\n-                'id': 'INTEGER',\n-                'term': 'TEXT',\n-                'category': 'TEXT',\n-                'first_seen': 'TEXT'\n+                \"id\": \"INTEGER\",\n+                \"term\": \"TEXT\",\n+                \"category\": \"TEXT\",\n+                \"first_seen\": \"TEXT\",\n             }\n \n             for col_name, col_type in expected_economic_columns.items():\n                 assert col_name in economic_columns\n                 assert economic_columns[col_name] == col_type\n@@ -93,12 +94,14 @@\n \n     def test_connection_context_manager_success(self, db_repository):\n         \"\"\"Test that connection context manager works correctly on success.\"\"\"\n         with db_repository.get_connection() as conn:\n             cursor = conn.cursor()\n-            cursor.execute(\"INSERT INTO transcriptions (filename, transcript, created_at) VALUES (?, ?, ?)\",\n-                         (\"test.mp3\", \"test transcript\", datetime.utcnow().isoformat()))\n+            cursor.execute(\n+                \"INSERT INTO transcriptions (filename, transcript, created_at) VALUES (?, ?, ?)\",\n+                (\"test.mp3\", \"test transcript\", datetime.utcnow().isoformat()),\n+            )\n             # Connection should auto-commit on successful exit\n \n         # Verify data was committed\n         with db_repository.get_connection() as conn:\n             cursor = conn.cursor()\n@@ -109,12 +112,14 @@\n     def test_connection_context_manager_rollback_on_exception(self, db_repository):\n         \"\"\"Test that connection context manager rolls back on exceptions.\"\"\"\n         try:\n             with db_repository.get_connection() as conn:\n                 cursor = conn.cursor()\n-                cursor.execute(\"INSERT INTO transcriptions (filename, transcript, created_at) VALUES (?, ?, ?)\",\n-                             (\"test.mp3\", \"test transcript\", datetime.utcnow().isoformat()))\n+                cursor.execute(\n+                    \"INSERT INTO transcriptions (filename, transcript, created_at) VALUES (?, ?, ?)\",\n+                    (\"test.mp3\", \"test transcript\", datetime.utcnow().isoformat()),\n+                )\n                 raise ValueError(\"Intentional error\")\n         except ValueError:\n             pass\n \n         # Verify data was rolled back\n@@ -132,14 +137,14 @@\n             cursor = conn.cursor()\n             cursor.execute(\"SELECT filename, transcript FROM transcriptions LIMIT 1\")\n             row = cursor.fetchone()\n \n             # Should be able to access by column name\n-            assert row['filename'] == \"test.mp3\"\n-            assert row['transcript'] == \"test transcript\"\n-\n-    @patch('src.repositories.database_repository.sqlite3.connect')\n+            assert row[\"filename\"] == \"test.mp3\"\n+            assert row[\"transcript\"] == \"test transcript\"\n+\n+    @patch(\"src.repositories.database_repository.sqlite3.connect\")\n     def test_connection_error_handling(self, mock_connect, db_repository):\n         \"\"\"Test handling of connection errors.\"\"\"\n         mock_connect.side_effect = sqlite3.Error(\"Connection failed\")\n \n         with pytest.raises(sqlite3.Error):\n@@ -289,25 +294,31 @@\n     def test_expression_exists_in_argentine_dictionary(self, db_repository):\n         \"\"\"Test checking existence of expressions in Argentine dictionary.\"\"\"\n         expression = \"laburo\"\n \n         # Should not exist initially\n-        assert db_repository.expression_exists_in_argentine_dictionary(expression) is False\n+        assert (\n+            db_repository.expression_exists_in_argentine_dictionary(expression) is False\n+        )\n \n         # Add expression\n         db_repository.add_argentine_expression(expression)\n \n         # Should exist now\n-        assert db_repository.expression_exists_in_argentine_dictionary(expression) is True\n+        assert (\n+            db_repository.expression_exists_in_argentine_dictionary(expression) is True\n+        )\n \n \n class TestCandidateTermOperations:\n     \"\"\"Test candidate term database operations.\"\"\"\n \n     def test_add_candidate_term_success(self, db_repository):\n         \"\"\"Test successful addition of candidate term.\"\"\"\n-        result = db_repository.add_candidate_term(\"blockchain\", \"el blockchain es innovador\")\n+        result = db_repository.add_candidate_term(\n+            \"blockchain\", \"el blockchain es innovador\"\n+        )\n         assert result is True\n \n     def test_add_candidate_term_duplicate(self, db_repository):\n         \"\"\"Test that duplicate candidate terms are handled correctly.\"\"\"\n         term = \"blockchain\"\n@@ -324,11 +335,11 @@\n     def test_get_candidate_terms(self, db_repository):\n         \"\"\"Test retrieval of all candidate terms.\"\"\"\n         test_terms = [\n             (\"blockchain\", \"el blockchain es innovador\"),\n             (\"fintech\", \"las fintech est\u00e1n creciendo\"),\n-            (\"startup\", \"mi startup favorita\")\n+            (\"startup\", \"mi startup favorita\"),\n         ]\n \n         for term, context in test_terms:\n             db_repository.add_candidate_term(term, context)\n \n@@ -419,22 +430,26 @@\n \n         with db_repository.get_connection() as conn1:\n             cursor1 = conn1.cursor()\n             cursor1.execute(\n                 \"INSERT INTO economic_glossary (term, category, first_seen) VALUES (?, ?, ?)\",\n-                (term1, \"economic\", datetime.utcnow().isoformat())\n+                (term1, \"economic\", datetime.utcnow().isoformat()),\n             )\n \n             # This should be visible within the same connection\n-            cursor1.execute(\"SELECT COUNT(*) FROM economic_glossary WHERE term = ?\", (term1,))\n+            cursor1.execute(\n+                \"SELECT COUNT(*) FROM economic_glossary WHERE term = ?\", (term1,)\n+            )\n             count1 = cursor1.fetchone()[0]\n             assert count1 == 1\n \n         # After committing, should be visible in new connection\n         with db_repository.get_connection() as conn2:\n             cursor2 = conn2.cursor()\n-            cursor2.execute(\"SELECT COUNT(*) FROM economic_glossary WHERE term = ?\", (term1,))\n+            cursor2.execute(\n+                \"SELECT COUNT(*) FROM economic_glossary WHERE term = ?\", (term1,)\n+            )\n             count2 = cursor2.fetchone()[0]\n             assert count2 == 1\n \n \n class TestDatabaseErrorHandling:\n@@ -467,16 +482,16 @@\n                 # Should either succeed or fail gracefully\n                 assert isinstance(result, bool)\n             except Exception as e:\n                 pytest.fail(f\"Unexpected exception for {description}: {e}\")\n \n-    @patch('src.repositories.database_repository.sqlite3.connect')\n+    @patch(\"src.repositories.database_repository.sqlite3.connect\")\n     def test_database_unavailable_error_handling(self, mock_connect):\n         \"\"\"Test handling when database is unavailable.\"\"\"\n         mock_connect.side_effect = sqlite3.OperationalError(\"Database locked\")\n \n         # Repository should be created but operations should fail gracefully\n         repo = DatabaseRepository()\n \n         with pytest.raises(sqlite3.OperationalError):\n             with repo.get_connection() as conn:\n-                pass\n\\ No newline at end of file\n+                pass\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_transcription_service.py\t2025-09-16 16:16:15.549063+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_transcription_service.py\t2025-09-16 20:44:36.194753+00:00\n@@ -1,9 +1,10 @@\n \"\"\"\n Comprehensive unit tests for TranscriptionService covering all functionality\n including file validation, transcription processing, and error handling.\n \"\"\"\n+\n import pytest\n from pathlib import Path\n from unittest.mock import Mock, patch, MagicMock\n import tempfile\n \n@@ -36,11 +37,11 @@\n         # Accessing model property should load it\n         model = transcription_service.model\n         assert model is not None\n         assert model == mock_whisper_transcribe\n \n-    @patch('src.services.transcription_service.whisper.load_model')\n+    @patch(\"src.services.transcription_service.whisper.load_model\")\n     def test_model_loading_with_settings(self, mock_load_model, transcription_service):\n         \"\"\"Test that model loading uses correct settings.\"\"\"\n         mock_model = Mock()\n         mock_load_model.return_value = mock_model\n \n@@ -65,11 +66,11 @@\n             assert error is None\n \n     def test_validate_file_size_limit(self, transcription_service):\n         \"\"\"Test file size validation.\"\"\"\n         # Create file larger than 5MB limit (test config)\n-        large_content = b'\\xff\\xfb\\x90\\x00' + b'\\x00' * (6 * 1024 * 1024)\n+        large_content = b\"\\xff\\xfb\\x90\\x00\" + b\"\\x00\" * (6 * 1024 * 1024)\n \n         with temporary_file(large_content, \"large\", \".mp3\") as temp_file:\n             is_valid, error = transcription_service.validate_audio_file(temp_file)\n \n             assert is_valid is False\n@@ -83,24 +84,26 @@\n             is_valid, error = transcription_service.validate_audio_file(temp_file)\n \n             assert is_valid is False\n             assert \"not allowed\" in error\n \n-    @patch('src.services.transcription_service.magic.from_file')\n+    @patch(\"src.services.transcription_service.magic.from_file\")\n     def test_validate_mime_type_check(self, mock_magic, transcription_service):\n         \"\"\"Test MIME type validation.\"\"\"\n-        mock_magic.return_value = 'text/plain'\n+        mock_magic.return_value = \"text/plain\"\n \n         mp3_content = create_mp3_bytes(1)\n         with temporary_file(mp3_content, \"fake\", \".mp3\") as temp_file:\n             is_valid, error = transcription_service.validate_audio_file(temp_file)\n \n             assert is_valid is False\n             assert \"Invalid file type\" in error\n \n-    @patch('src.services.transcription_service.magic.from_file')\n-    def test_validate_mime_type_exception_handling(self, mock_magic, transcription_service):\n+    @patch(\"src.services.transcription_service.magic.from_file\")\n+    def test_validate_mime_type_exception_handling(\n+        self, mock_magic, transcription_service\n+    ):\n         \"\"\"Test graceful handling of MIME type detection exceptions.\"\"\"\n         mock_magic.side_effect = Exception(\"Magic library not available\")\n \n         mp3_content = create_mp3_bytes(1)\n         with temporary_file(mp3_content, \"test\", \".mp3\") as temp_file:\n@@ -117,22 +120,22 @@\n         with pytest.raises(FileNotFoundError):\n             transcription_service.validate_audio_file(nonexistent_path)\n \n     def test_validate_empty_file(self, transcription_service):\n         \"\"\"Test validation of empty file.\"\"\"\n-        with temporary_file(b'', \"empty\", \".mp3\") as temp_file:\n+        with temporary_file(b\"\", \"empty\", \".mp3\") as temp_file:\n             is_valid, error = transcription_service.validate_audio_file(temp_file)\n \n             assert is_valid is False\n             assert \"exceeds maximum\" in error\n \n     def test_validate_file_with_malicious_content(self, transcription_service):\n         \"\"\"Test validation rejects files with malicious content.\"\"\"\n         malicious_content = create_malicious_file_bytes()\n \n-        with patch('src.services.transcription_service.magic.from_file') as mock_magic:\n-            mock_magic.return_value = 'application/x-executable'\n+        with patch(\"src.services.transcription_service.magic.from_file\") as mock_magic:\n+            mock_magic.return_value = \"application/x-executable\"\n \n             with temporary_file(malicious_content, \"malicious\", \".mp3\") as temp_file:\n                 is_valid, error = transcription_service.validate_audio_file(temp_file)\n \n                 assert is_valid is False\n@@ -140,11 +143,13 @@\n \n \n class TestTranscriptionProcessing:\n     \"\"\"Test audio transcription processing.\"\"\"\n \n-    def test_transcribe_audio_success(self, transcription_service, mock_whisper_transcribe):\n+    def test_transcribe_audio_success(\n+        self, transcription_service, mock_whisper_transcribe\n+    ):\n         \"\"\"Test successful audio transcription.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n         filename = \"test_audio.mp3\"\n \n         with temporary_file(mp3_content, \"test\", \".mp3\") as temp_file:\n@@ -154,11 +159,13 @@\n             assert result.filename == filename\n             assert result.full_transcript\n             assert result.transcript_preview\n             assert result.error is None\n \n-    def test_transcribe_audio_with_database_save(self, transcription_service, mock_whisper_transcribe, db_repository):\n+    def test_transcribe_audio_with_database_save(\n+        self, transcription_service, mock_whisper_transcribe, db_repository\n+    ):\n         \"\"\"Test that transcription is saved to database.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n         filename = \"test_audio.mp3\"\n \n         with temporary_file(mp3_content, \"test\", \".mp3\") as temp_file:\n@@ -169,23 +176,25 @@\n             # Verify saved to database (check if repository has transcription)\n             # Note: We'd need to add a method to check this or verify through repository calls\n \n     def test_transcribe_audio_file_validation_failure(self, transcription_service):\n         \"\"\"Test transcription when file validation fails.\"\"\"\n-        large_content = b'\\xff\\xfb\\x90\\x00' + b'\\x00' * (6 * 1024 * 1024)\n+        large_content = b\"\\xff\\xfb\\x90\\x00\" + b\"\\x00\" * (6 * 1024 * 1024)\n         filename = \"large_file.mp3\"\n \n         with temporary_file(large_content, \"large\", \".mp3\") as temp_file:\n             result = transcription_service.transcribe_audio(temp_file, filename)\n \n             assert result.success is False\n             assert result.error is not None\n             assert \"validation\" in result.message.lower()\n             assert not result.full_transcript\n \n-    @patch('src.services.transcription_service.whisper.load_model')\n-    def test_transcribe_audio_whisper_exception(self, mock_load_model, transcription_service):\n+    @patch(\"src.services.transcription_service.whisper.load_model\")\n+    def test_transcribe_audio_whisper_exception(\n+        self, mock_load_model, transcription_service\n+    ):\n         \"\"\"Test handling of Whisper transcription exceptions.\"\"\"\n         # Mock Whisper model to raise exception\n         mock_model = Mock()\n         mock_model.transcribe.side_effect = Exception(\"Whisper error\")\n         mock_load_model.return_value = mock_model\n@@ -198,11 +207,13 @@\n \n             assert result.success is False\n             assert \"Transcription failed\" in result.error\n             assert result.full_transcript == \"\"\n \n-    def test_transcribe_audio_preview_generation(self, transcription_service, mock_whisper_transcribe):\n+    def test_transcribe_audio_preview_generation(\n+        self, transcription_service, mock_whisper_transcribe\n+    ):\n         \"\"\"Test that transcript preview is generated correctly.\"\"\"\n         # Mock long transcript\n         long_transcript = \"A\" * 300  # Longer than 200 char preview limit\n         mock_whisper_transcribe.transcribe.return_value = {\"text\": long_transcript}\n \n@@ -215,11 +226,13 @@\n             assert result.success is True\n             assert len(result.transcript_preview) <= 203  # 200 chars + \"...\"\n             assert result.transcript_preview.endswith(\"...\")\n             assert result.full_transcript == long_transcript\n \n-    def test_transcribe_audio_short_transcript_no_truncation(self, transcription_service, mock_whisper_transcribe):\n+    def test_transcribe_audio_short_transcript_no_truncation(\n+        self, transcription_service, mock_whisper_transcribe\n+    ):\n         \"\"\"Test that short transcripts are not truncated.\"\"\"\n         short_transcript = \"Short transcript\"\n         mock_whisper_transcribe.transcribe.return_value = {\"text\": short_transcript}\n \n         mp3_content = create_mp3_bytes(1)\n@@ -230,12 +243,14 @@\n \n             assert result.success is True\n             assert result.transcript_preview == short_transcript\n             assert not result.transcript_preview.endswith(\"...\")\n \n-    @patch('src.repositories.database_repository.DatabaseRepository.save_transcription')\n-    def test_transcribe_audio_database_save_failure(self, mock_save, transcription_service, mock_whisper_transcribe):\n+    @patch(\"src.repositories.database_repository.DatabaseRepository.save_transcription\")\n+    def test_transcribe_audio_database_save_failure(\n+        self, mock_save, transcription_service, mock_whisper_transcribe\n+    ):\n         \"\"\"Test handling of database save failures.\"\"\"\n         mock_save.side_effect = Exception(\"Database error\")\n \n         mp3_content = create_mp3_bytes(1)\n         filename = \"test_audio.mp3\"\n@@ -276,19 +291,23 @@\n         \"\"\"Test cleanup handles permission errors gracefully.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n \n         with temporary_file(mp3_content, \"permission_test\", \".mp3\") as temp_file:\n             # Mock unlink to raise permission error\n-            with patch.object(temp_file, 'unlink', side_effect=PermissionError(\"Permission denied\")):\n+            with patch.object(\n+                temp_file, \"unlink\", side_effect=PermissionError(\"Permission denied\")\n+            ):\n                 # Should not raise exception, just log error\n                 transcription_service.cleanup_file(temp_file)\n \n \n class TestTranscriptionServiceIntegration:\n     \"\"\"Integration tests for TranscriptionService components.\"\"\"\n \n-    def test_full_transcription_workflow(self, transcription_service, mock_whisper_transcribe):\n+    def test_full_transcription_workflow(\n+        self, transcription_service, mock_whisper_transcribe\n+    ):\n         \"\"\"Test complete transcription workflow from file to result.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n         filename = \"workflow_test.mp3\"\n \n         # Mock Whisper to return specific content\n@@ -301,15 +320,19 @@\n \n             # Verify all aspects of the result\n             assert result.success is True\n             assert result.filename == filename\n             assert result.full_transcript == expected_transcript\n-            assert result.transcript_preview == expected_transcript  # Short enough to not be truncated\n+            assert (\n+                result.transcript_preview == expected_transcript\n+            )  # Short enough to not be truncated\n             assert result.message == \"File processed and saved successfully\"\n             assert result.error is None\n \n-    def test_model_reuse_across_transcriptions(self, transcription_service, mock_whisper_transcribe):\n+    def test_model_reuse_across_transcriptions(\n+        self, transcription_service, mock_whisper_transcribe\n+    ):\n         \"\"\"Test that Whisper model is reused across multiple transcriptions.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n \n         # Perform multiple transcriptions\n         for i in range(3):\n@@ -320,11 +343,13 @@\n \n         # Verify model was only created once (loaded lazily)\n         # The mock_whisper_transcribe fixture should be the same instance\n         assert transcription_service._model is mock_whisper_transcribe\n \n-    def test_concurrent_transcription_safety(self, transcription_service, mock_whisper_transcribe):\n+    def test_concurrent_transcription_safety(\n+        self, transcription_service, mock_whisper_transcribe\n+    ):\n         \"\"\"Test that service handles concurrent access safely.\"\"\"\n         import threading\n         import time\n \n         results = []\n@@ -332,11 +357,13 @@\n         mp3_content = create_mp3_bytes(1)\n \n         def transcribe_file(thread_id):\n             try:\n                 filename = f\"concurrent_{thread_id}.mp3\"\n-                with temporary_file(mp3_content, f\"concurrent_{thread_id}\", \".mp3\") as temp_file:\n+                with temporary_file(\n+                    mp3_content, f\"concurrent_{thread_id}\", \".mp3\"\n+                ) as temp_file:\n                     time.sleep(0.01)  # Small delay to encourage concurrency\n                     result = transcription_service.transcribe_audio(temp_file, filename)\n                     results.append((thread_id, result.success))\n             except Exception as e:\n                 errors.append((thread_id, str(e)))\n@@ -356,12 +383,14 @@\n         assert len(errors) == 0, f\"Errors occurred: {errors}\"\n         assert len(results) == 5\n         for thread_id, success in results:\n             assert success is True\n \n-    @patch('src.services.transcription_service.logger')\n-    def test_logging_behavior(self, mock_logger, transcription_service, mock_whisper_transcribe):\n+    @patch(\"src.services.transcription_service.logger\")\n+    def test_logging_behavior(\n+        self, mock_logger, transcription_service, mock_whisper_transcribe\n+    ):\n         \"\"\"Test that appropriate logging occurs during transcription.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n         filename = \"logging_test.mp3\"\n \n         with temporary_file(mp3_content, \"logging\", \".mp3\") as temp_file:\n@@ -373,22 +402,26 @@\n \n \n class TestEdgeCases:\n     \"\"\"Test edge cases and unusual scenarios.\"\"\"\n \n-    def test_transcription_with_unicode_filename(self, transcription_service, mock_whisper_transcribe):\n+    def test_transcription_with_unicode_filename(\n+        self, transcription_service, mock_whisper_transcribe\n+    ):\n         \"\"\"Test transcription with unicode characters in filename.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n         unicode_filename = \"prueba_\u00f1and\u00fa_coraz\u00f3n.mp3\"\n \n         with temporary_file(mp3_content, \"unicode_test\", \".mp3\") as temp_file:\n             result = transcription_service.transcribe_audio(temp_file, unicode_filename)\n \n             assert result.success is True\n             assert result.filename == unicode_filename\n \n-    def test_transcription_with_special_characters_in_content(self, transcription_service, mock_whisper_transcribe):\n+    def test_transcription_with_special_characters_in_content(\n+        self, transcription_service, mock_whisper_transcribe\n+    ):\n         \"\"\"Test transcription with special characters in transcript content.\"\"\"\n         special_transcript = \"Test with \u00e9mojis \ud83c\udfb5 and special chars: \u00f1\u00e1\u00e9\u00ed\u00f3\u00fa\"\n         mock_whisper_transcribe.transcribe.return_value = {\"text\": special_transcript}\n \n         mp3_content = create_mp3_bytes(1)\n@@ -398,22 +431,26 @@\n             result = transcription_service.transcribe_audio(temp_file, filename)\n \n             assert result.success is True\n             assert result.full_transcript == special_transcript\n \n-    def test_transcription_with_very_long_filename(self, transcription_service, mock_whisper_transcribe):\n+    def test_transcription_with_very_long_filename(\n+        self, transcription_service, mock_whisper_transcribe\n+    ):\n         \"\"\"Test transcription with very long filename.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n         long_filename = \"a\" * 200 + \".mp3\"  # Very long filename\n \n         with temporary_file(mp3_content, \"long\", \".mp3\") as temp_file:\n             result = transcription_service.transcribe_audio(temp_file, long_filename)\n \n             assert result.success is True\n             assert result.filename == long_filename\n \n-    def test_transcription_result_model_validation(self, transcription_service, mock_whisper_transcribe):\n+    def test_transcription_result_model_validation(\n+        self, transcription_service, mock_whisper_transcribe\n+    ):\n         \"\"\"Test that TranscriptionResult model handles all data correctly.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n         filename = \"model_test.mp3\"\n \n         with temporary_file(mp3_content, \"model\", \".mp3\") as temp_file:\n@@ -423,6 +460,6 @@\n             assert isinstance(result.filename, str)\n             assert isinstance(result.transcript_preview, str)\n             assert isinstance(result.full_transcript, str)\n             assert isinstance(result.message, str)\n             assert isinstance(result.success, bool)\n-            assert result.error is None or isinstance(result.error, str)\n\\ No newline at end of file\n+            assert result.error is None or isinstance(result.error, str)\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/api/test_endpoints.py\t2025-09-16 16:20:12.357387+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/api/test_endpoints.py\t2025-09-16 20:44:36.219928+00:00\n@@ -1,14 +1,19 @@\n \"\"\"\n Comprehensive API endpoint tests covering all FastAPI endpoints,\n request/response validation, error handling, and integration scenarios.\n \"\"\"\n+\n import pytest\n from unittest.mock import patch, Mock\n import json\n \n-from tests.fixtures.test_data import create_mp3_bytes, create_malicious_file_bytes, create_oversized_file_bytes\n+from tests.fixtures.test_data import (\n+    create_mp3_bytes,\n+    create_malicious_file_bytes,\n+    create_oversized_file_bytes,\n+)\n from tests.utils.test_helpers import assert_response_structure\n \n \n class TestHealthEndpoint:\n     \"\"\"Test health check endpoint functionality.\"\"\"\n@@ -47,11 +52,13 @@\n     @pytest.mark.asyncio\n     async def test_upload_valid_mp3_file(self, async_client, temp_upload_dir):\n         \"\"\"Test uploading valid MP3 file.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n \n-        with patch('src.services.transcription_service.whisper.load_model') as mock_whisper:\n+        with patch(\n+            \"src.services.transcription_service.whisper.load_model\"\n+        ) as mock_whisper:\n             mock_model = Mock()\n             mock_model.transcribe.return_value = {\n                 \"text\": \"Test transcription with inflaci\u00f3n and laburo\"\n             }\n             mock_whisper.return_value = mock_model\n@@ -102,19 +109,21 @@\n         files = {\"file\": (\"large_file.mp3\", oversized_content, \"audio/mpeg\")}\n         response = await async_client.post(\"/upload\", files=files)\n \n         assert response.status_code == 400\n         data = response.json()\n-        assert \"validation\" in data[\"detail\"].lower() or \"size\" in data[\"detail\"].lower()\n+        assert (\n+            \"validation\" in data[\"detail\"].lower() or \"size\" in data[\"detail\"].lower()\n+        )\n \n     @pytest.mark.asyncio\n     async def test_upload_malicious_file(self, async_client, temp_upload_dir):\n         \"\"\"Test upload with malicious file content.\"\"\"\n         malicious_content = create_malicious_file_bytes()\n \n-        with patch('src.services.transcription_service.magic.from_file') as mock_magic:\n-            mock_magic.return_value = 'application/x-executable'\n+        with patch(\"src.services.transcription_service.magic.from_file\") as mock_magic:\n+            mock_magic.return_value = \"application/x-executable\"\n \n             files = {\"file\": (\"malicious.mp3\", malicious_content, \"audio/mpeg\")}\n             response = await async_client.post(\"/upload\", files=files)\n \n             assert response.status_code == 400\n@@ -122,28 +131,33 @@\n     @pytest.mark.asyncio\n     async def test_upload_transcription_failure(self, async_client, temp_upload_dir):\n         \"\"\"Test upload when transcription fails.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n \n-        with patch('src.services.transcription_service.whisper.load_model') as mock_whisper:\n+        with patch(\n+            \"src.services.transcription_service.whisper.load_model\"\n+        ) as mock_whisper:\n             mock_model = Mock()\n             mock_model.transcribe.side_effect = Exception(\"Transcription failed\")\n             mock_whisper.return_value = mock_model\n \n             files = {\"file\": (\"test_audio.mp3\", mp3_content, \"audio/mpeg\")}\n             response = await async_client.post(\"/upload\", files=files)\n \n             assert response.status_code == 500\n             data = response.json()\n-            assert \"transcription\" in data[\"detail\"].lower() or \"failed\" in data[\"detail\"].lower()\n+            assert (\n+                \"transcription\" in data[\"detail\"].lower()\n+                or \"failed\" in data[\"detail\"].lower()\n+            )\n \n     @pytest.mark.asyncio\n     async def test_upload_file_save_failure(self, async_client, temp_upload_dir):\n         \"\"\"Test upload when file save fails.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n \n-        with patch('builtins.open', side_effect=PermissionError(\"Permission denied\")):\n+        with patch(\"builtins.open\", side_effect=PermissionError(\"Permission denied\")):\n             files = {\"file\": (\"test_audio.mp3\", mp3_content, \"audio/mpeg\")}\n             response = await async_client.post(\"/upload\", files=files)\n \n             assert response.status_code == 500\n             data = response.json()\n@@ -152,11 +166,13 @@\n     @pytest.mark.asyncio\n     async def test_upload_statistics_included(self, async_client, temp_upload_dir):\n         \"\"\"Test that upload response includes processing statistics.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n \n-        with patch('src.services.transcription_service.whisper.load_model') as mock_whisper:\n+        with patch(\n+            \"src.services.transcription_service.whisper.load_model\"\n+        ) as mock_whisper:\n             mock_model = Mock()\n             mock_model.transcribe.return_value = {\n                 \"text\": \"Test transcription with inflaci\u00f3n, PIB and laburo, guita\"\n             }\n             mock_whisper.return_value = mock_model\n@@ -169,22 +185,28 @@\n \n             # Check that stats are included\n             assert \"stats\" in data\n             stats = data[\"stats\"]\n \n-            expected_stat_keys = [\"economic_terms_added\", \"argentine_expressions_added\", \"new_candidates_added\"]\n+            expected_stat_keys = [\n+                \"economic_terms_added\",\n+                \"argentine_expressions_added\",\n+                \"new_candidates_added\",\n+            ]\n             for key in expected_stat_keys:\n                 assert key in stats\n                 assert isinstance(stats[key], int)\n \n     @pytest.mark.asyncio\n     async def test_upload_unicode_filename(self, async_client, temp_upload_dir):\n         \"\"\"Test upload with unicode characters in filename.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n         unicode_filename = \"audio_ni\u00f1os_coraz\u00f3n.mp3\"\n \n-        with patch('src.services.transcription_service.whisper.load_model') as mock_whisper:\n+        with patch(\n+            \"src.services.transcription_service.whisper.load_model\"\n+        ) as mock_whisper:\n             mock_model = Mock()\n             mock_model.transcribe.return_value = {\"text\": \"Test transcription\"}\n             mock_whisper.return_value = mock_model\n \n             files = {\"file\": (unicode_filename, mp3_content, \"audio/mpeg\")}\n@@ -218,11 +240,13 @@\n \n         assert isinstance(data[\"economic_glossary\"], list)\n         assert isinstance(data[\"argentine_dictionary\"], list)\n \n     @pytest.mark.asyncio\n-    async def test_get_glossaries_with_data(self, async_client, populated_db_repository):\n+    async def test_get_glossaries_with_data(\n+        self, async_client, populated_db_repository\n+    ):\n         \"\"\"Test getting glossaries with existing data.\"\"\"\n         # The populated_db_repository fixture should have data\n         response = await async_client.get(\"/glossaries\")\n \n         assert response.status_code == 200\n@@ -241,11 +265,13 @@\n             assert len(expr_data) == 2  # expression, first_seen\n \n     @pytest.mark.asyncio\n     async def test_get_glossaries_database_error(self, async_client):\n         \"\"\"Test glossaries endpoint when database error occurs.\"\"\"\n-        with patch('src.services.glossary_service.GlossaryService.get_glossaries') as mock_get:\n+        with patch(\n+            \"src.services.glossary_service.GlossaryService.get_glossaries\"\n+        ) as mock_get:\n             mock_get.side_effect = Exception(\"Database error\")\n \n             response = await async_client.get(\"/glossaries\")\n \n             assert response.status_code == 500\n@@ -270,11 +296,13 @@\n         assert isinstance(data[\"candidates\"], list)\n         assert isinstance(data[\"stats\"], dict)\n         assert len(data[\"candidates\"]) == 0\n \n     @pytest.mark.asyncio\n-    async def test_get_candidates_with_data(self, async_client, populated_db_repository):\n+    async def test_get_candidates_with_data(\n+        self, async_client, populated_db_repository\n+    ):\n         \"\"\"Test getting candidates with existing data.\"\"\"\n         response = await async_client.get(\"/candidates\")\n \n         assert response.status_code == 200\n         data = response.json()\n@@ -293,11 +321,13 @@\n         assert \"unique_candidates\" in stats\n \n     @pytest.mark.asyncio\n     async def test_get_candidates_database_error(self, async_client):\n         \"\"\"Test candidates endpoint when database error occurs.\"\"\"\n-        with patch('src.services.term_detection_service.TermDetectionService.get_candidates') as mock_get:\n+        with patch(\n+            \"src.services.term_detection_service.TermDetectionService.get_candidates\"\n+        ) as mock_get:\n             mock_get.side_effect = Exception(\"Database error\")\n \n             response = await async_client.get(\"/candidates\")\n \n             assert response.status_code == 500\n@@ -305,32 +335,32 @@\n \n class TestPromoteEndpoint:\n     \"\"\"Test candidate promotion endpoint functionality.\"\"\"\n \n     @pytest.mark.asyncio\n-    async def test_promote_candidate_to_economic_success(self, async_client, populated_db_repository):\n+    async def test_promote_candidate_to_economic_success(\n+        self, async_client, populated_db_repository\n+    ):\n         \"\"\"Test successful promotion of candidate to economic glossary.\"\"\"\n         term = \"blockchain\"\n \n-        response = await async_client.post(\n-            f\"/promote?term={term}&glossary=economic\"\n-        )\n+        response = await async_client.post(f\"/promote?term={term}&glossary=economic\")\n \n         assert response.status_code == 200\n         data = response.json()\n         assert \"promoted\" in data[\"message\"].lower()\n         assert term in data[\"message\"]\n         assert \"economic\" in data[\"message\"]\n \n     @pytest.mark.asyncio\n-    async def test_promote_candidate_to_argentine_success(self, async_client, populated_db_repository):\n+    async def test_promote_candidate_to_argentine_success(\n+        self, async_client, populated_db_repository\n+    ):\n         \"\"\"Test successful promotion of candidate to Argentine dictionary.\"\"\"\n         term = \"fintech\"\n \n-        response = await async_client.post(\n-            f\"/promote?term={term}&glossary=argentine\"\n-        )\n+        response = await async_client.post(f\"/promote?term={term}&glossary=argentine\")\n \n         assert response.status_code == 200\n         data = response.json()\n         assert \"promoted\" in data[\"message\"].lower()\n         assert term in data[\"message\"]\n@@ -346,15 +376,15 @@\n         assert response.status_code == 404\n         data = response.json()\n         assert \"not found\" in data[\"detail\"].lower()\n \n     @pytest.mark.asyncio\n-    async def test_promote_invalid_glossary(self, async_client, populated_db_repository):\n+    async def test_promote_invalid_glossary(\n+        self, async_client, populated_db_repository\n+    ):\n         \"\"\"Test promotion with invalid glossary parameter.\"\"\"\n-        response = await async_client.post(\n-            \"/promote?term=blockchain&glossary=invalid\"\n-        )\n+        response = await async_client.post(\"/promote?term=blockchain&glossary=invalid\")\n \n         assert response.status_code == 400\n         data = response.json()\n         assert \"economic\" in data[\"detail\"] and \"argentine\" in data[\"detail\"]\n \n@@ -367,13 +397,11 @@\n         term = \"existing_term\"\n \n         # First add to economic glossary and candidates\n         # Then try to promote - should fail\n \n-        response = await async_client.post(\n-            f\"/promote?term={term}&glossary=economic\"\n-        )\n+        response = await async_client.post(f\"/promote?term={term}&glossary=economic\")\n \n         # Depending on implementation, might be 409 (conflict) or 404 (not found)\n         assert response.status_code in [404, 409]\n \n     @pytest.mark.asyncio\n@@ -395,21 +423,21 @@\n     async def test_promote_unicode_term(self, async_client):\n         \"\"\"Test promotion with unicode characters in term.\"\"\"\n         # Add unicode candidate first (would need setup)\n         term = \"ni\u00f1os\"\n \n-        response = await async_client.post(\n-            f\"/promote?term={term}&glossary=economic\"\n-        )\n+        response = await async_client.post(f\"/promote?term={term}&glossary=economic\")\n \n         # Depending on whether candidate exists, could be 200 or 404\n         assert response.status_code in [200, 404]\n \n     @pytest.mark.asyncio\n     async def test_promote_database_error(self, async_client, populated_db_repository):\n         \"\"\"Test promotion when database error occurs.\"\"\"\n-        with patch('src.services.glossary_service.GlossaryService.promote_candidate_to_economic') as mock_promote:\n+        with patch(\n+            \"src.services.glossary_service.GlossaryService.promote_candidate_to_economic\"\n+        ) as mock_promote:\n             mock_promote.side_effect = Exception(\"Database error\")\n \n             response = await async_client.post(\n                 \"/promote?term=blockchain&glossary=economic\"\n             )\n@@ -419,11 +447,13 @@\n \n class TestDeleteCandidateEndpoint:\n     \"\"\"Test candidate deletion endpoint functionality.\"\"\"\n \n     @pytest.mark.asyncio\n-    async def test_delete_candidate_success(self, async_client, populated_db_repository):\n+    async def test_delete_candidate_success(\n+        self, async_client, populated_db_repository\n+    ):\n         \"\"\"Test successful deletion of candidate term.\"\"\"\n         term = \"blockchain\"  # Should exist in populated database\n \n         response = await async_client.delete(f\"/candidates/{term}\")\n \n@@ -461,11 +491,13 @@\n         assert response.status_code in [200, 404]\n \n     @pytest.mark.asyncio\n     async def test_delete_candidate_database_error(self, async_client):\n         \"\"\"Test deletion when database error occurs.\"\"\"\n-        with patch('src.services.term_detection_service.TermDetectionService.remove_candidate') as mock_remove:\n+        with patch(\n+            \"src.services.term_detection_service.TermDetectionService.remove_candidate\"\n+        ) as mock_remove:\n             mock_remove.side_effect = Exception(\"Database error\")\n \n             response = await async_client.delete(\"/candidates/test\")\n \n             assert response.status_code == 500\n@@ -473,15 +505,19 @@\n \n class TestEndpointIntegration:\n     \"\"\"Test integration scenarios across multiple endpoints.\"\"\"\n \n     @pytest.mark.asyncio\n-    async def test_full_workflow_upload_to_promotion(self, async_client, temp_upload_dir):\n+    async def test_full_workflow_upload_to_promotion(\n+        self, async_client, temp_upload_dir\n+    ):\n         \"\"\"Test complete workflow from upload to candidate promotion.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n \n-        with patch('src.services.transcription_service.whisper.load_model') as mock_whisper:\n+        with patch(\n+            \"src.services.transcription_service.whisper.load_model\"\n+        ) as mock_whisper:\n             mock_model = Mock()\n             mock_model.transcribe.return_value = {\n                 \"text\": \"blockchain technology is revolutionizing fintech industry\"\n             }\n             mock_whisper.return_value = mock_model\n@@ -516,15 +552,19 @@\n             # Should find the promoted term in economic glossary\n             economic_terms = [term[0] for term in glossaries_data[\"economic_glossary\"]]\n             assert candidate_term in economic_terms\n \n     @pytest.mark.asyncio\n-    async def test_multiple_uploads_accumulate_data(self, async_client, temp_upload_dir):\n+    async def test_multiple_uploads_accumulate_data(\n+        self, async_client, temp_upload_dir\n+    ):\n         \"\"\"Test that multiple uploads accumulate data correctly.\"\"\"\n         mp3_content = create_mp3_bytes(1)\n \n-        with patch('src.services.transcription_service.whisper.load_model') as mock_whisper:\n+        with patch(\n+            \"src.services.transcription_service.whisper.load_model\"\n+        ) as mock_whisper:\n             mock_model = Mock()\n             mock_whisper.return_value = mock_model\n \n             # Upload 1: Economic terms\n             mock_model.transcribe.return_value = {\"text\": \"inflaci\u00f3n PIB reservas\"}\n@@ -557,11 +597,13 @@\n         files = {\"file\": (\"test.txt\", b\"not audio\", \"text/plain\")}\n         upload_response = await async_client.post(\"/upload\", files=files)\n         error_responses.append(upload_response)\n \n         # 2. Promote non-existent candidate\n-        promote_response = await async_client.post(\"/promote?term=fake&glossary=economic\")\n+        promote_response = await async_client.post(\n+            \"/promote?term=fake&glossary=economic\"\n+        )\n         error_responses.append(promote_response)\n \n         # 3. Delete non-existent candidate\n         delete_response = await async_client.delete(\"/candidates/fake\")\n         error_responses.append(delete_response)\n@@ -577,18 +619,22 @@\n         \"\"\"Test API behavior under concurrent requests.\"\"\"\n         import asyncio\n \n         mp3_content = create_mp3_bytes(1)\n \n-        with patch('src.services.transcription_service.whisper.load_model') as mock_whisper:\n+        with patch(\n+            \"src.services.transcription_service.whisper.load_model\"\n+        ) as mock_whisper:\n             mock_model = Mock()\n             mock_model.transcribe.return_value = {\"text\": \"concurrent test transcript\"}\n             mock_whisper.return_value = mock_model\n \n             # Create multiple concurrent requests\n             async def upload_file(file_num):\n-                files = {\"file\": (f\"concurrent_{file_num}.mp3\", mp3_content, \"audio/mpeg\")}\n+                files = {\n+                    \"file\": (f\"concurrent_{file_num}.mp3\", mp3_content, \"audio/mpeg\")\n+                }\n                 response = await async_client.post(\"/upload\", files=files)\n                 return response\n \n             # Execute concurrent uploads\n             tasks = [upload_file(i) for i in range(5)]\n@@ -609,6 +655,6 @@\n \n         candidates_response = await async_client.get(\"/candidates\")\n         assert candidates_response.headers[\"content-type\"] == \"application/json\"\n \n         health_response = await async_client.get(\"/health\")\n-        assert health_response.headers[\"content-type\"] == \"application/json\"\n\\ No newline at end of file\n+        assert health_response.headers[\"content-type\"] == \"application/json\"\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/performance/test_performance.py\t2025-09-16 16:24:28.858478+00:00\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/performance/test_performance.py\t2025-09-16 20:44:36.227900+00:00\n@@ -1,9 +1,10 @@\n \"\"\"\n Performance tests for the transcription application.\n Tests response times, throughput, and resource usage under various loads.\n \"\"\"\n+\n import pytest\n import time\n import threading\n import statistics\n import json\n@@ -26,12 +27,14 @@\n     def performance_transcription_service(self):\n         \"\"\"Create transcription service optimized for performance testing.\"\"\"\n         db_repo = DatabaseRepository()\n         return TranscriptionService(db_repo)\n \n-    @patch('src.services.transcription_service.whisper.load_model')\n-    def test_single_transcription_performance(self, mock_load_model, performance_transcription_service):\n+    @patch(\"src.services.transcription_service.whisper.load_model\")\n+    def test_single_transcription_performance(\n+        self, mock_load_model, performance_transcription_service\n+    ):\n         \"\"\"Test single transcription performance baseline.\"\"\"\n         # Mock fast Whisper model\n         mock_model = Mock()\n         mock_model.transcribe.return_value = {\"text\": \"Performance test transcript\"}\n         mock_load_model.return_value = mock_model\n@@ -58,41 +61,53 @@\n         # Performance assertions\n         avg_time = statistics.mean(times)\n         max_time = max(times)\n         min_time = min(times)\n \n-        assert avg_time < 2.0, f\"Average transcription time {avg_time:.2f}s exceeds 2s threshold\"\n-        assert max_time < 3.0, f\"Maximum transcription time {max_time:.2f}s exceeds 3s threshold\"\n-        assert max_time - min_time < 1.0, f\"Time variance {max_time - min_time:.2f}s too high\"\n+        assert (\n+            avg_time < 2.0\n+        ), f\"Average transcription time {avg_time:.2f}s exceeds 2s threshold\"\n+        assert (\n+            max_time < 3.0\n+        ), f\"Maximum transcription time {max_time:.2f}s exceeds 3s threshold\"\n+        assert (\n+            max_time - min_time < 1.0\n+        ), f\"Time variance {max_time - min_time:.2f}s too high\"\n \n         # Log performance metrics\n         print(f\"\\nTranscription Performance Metrics:\")\n         print(f\"Average time: {avg_time:.3f}s\")\n         print(f\"Min time: {min_time:.3f}s\")\n         print(f\"Max time: {max_time:.3f}s\")\n         print(f\"Standard deviation: {statistics.stdev(times):.3f}s\")\n \n-    @patch('src.services.transcription_service.whisper.load_model')\n-    def test_concurrent_transcription_performance(self, mock_load_model, performance_transcription_service):\n+    @patch(\"src.services.transcription_service.whisper.load_model\")\n+    def test_concurrent_transcription_performance(\n+        self, mock_load_model, performance_transcription_service\n+    ):\n         \"\"\"Test performance under concurrent transcription load.\"\"\"\n         mock_model = Mock()\n         mock_model.transcribe.return_value = {\"text\": \"Concurrent test transcript\"}\n         mock_load_model.return_value = mock_model\n \n         service = performance_transcription_service\n         mp3_content = create_mp3_bytes(1)\n \n         def transcribe_file(file_id):\n-            with temporary_file(mp3_content, f\"concurrent_{file_id}\", \".mp3\") as temp_file:\n+            with temporary_file(\n+                mp3_content, f\"concurrent_{file_id}\", \".mp3\"\n+            ) as temp_file:\n                 start_time = time.time()\n-                result = service.transcribe_audio(temp_file, f\"concurrent_{file_id}.mp3\")\n+                result = service.transcribe_audio(\n+                    temp_file, f\"concurrent_{file_id}.mp3\"\n+                )\n                 end_time = time.time()\n                 return {\n-                    'file_id': file_id,\n-                    'success': result.success,\n-                    'duration': end_time - start_time,\n-                    'timestamp': start_time\n+                    \"file_id\": file_id,\n+                    \"success\": result.success,\n+                    \"duration\": end_time - start_time,\n+                    \"timestamp\": start_time,\n                 }\n \n         # Test with increasing concurrency levels\n         concurrency_levels = [1, 2, 5, 10]\n         results = {}\n@@ -100,48 +115,60 @@\n         for concurrency in concurrency_levels:\n             print(f\"\\nTesting concurrency level: {concurrency}\")\n \n             start_time = time.time()\n             with ThreadPoolExecutor(max_workers=concurrency) as executor:\n-                futures = [executor.submit(transcribe_file, i) for i in range(concurrency)]\n-                concurrent_results = [future.result() for future in as_completed(futures)]\n+                futures = [\n+                    executor.submit(transcribe_file, i) for i in range(concurrency)\n+                ]\n+                concurrent_results = [\n+                    future.result() for future in as_completed(futures)\n+                ]\n             total_time = time.time() - start_time\n \n             # Analyze results\n-            successful = sum(1 for r in concurrent_results if r['success'])\n-            durations = [r['duration'] for r in concurrent_results]\n+            successful = sum(1 for r in concurrent_results if r[\"success\"])\n+            durations = [r[\"duration\"] for r in concurrent_results]\n             throughput = successful / total_time\n \n             results[concurrency] = {\n-                'total_time': total_time,\n-                'successful': successful,\n-                'avg_duration': statistics.mean(durations),\n-                'max_duration': max(durations),\n-                'throughput': throughput\n+                \"total_time\": total_time,\n+                \"successful\": successful,\n+                \"avg_duration\": statistics.mean(durations),\n+                \"max_duration\": max(durations),\n+                \"throughput\": throughput,\n             }\n \n             # Performance assertions\n-            assert successful == concurrency, f\"Not all transcriptions succeeded at concurrency {concurrency}\"\n-            assert total_time < concurrency * 2.0, f\"Total time {total_time:.2f}s too high for concurrency {concurrency}\"\n+            assert (\n+                successful == concurrency\n+            ), f\"Not all transcriptions succeeded at concurrency {concurrency}\"\n+            assert (\n+                total_time < concurrency * 2.0\n+            ), f\"Total time {total_time:.2f}s too high for concurrency {concurrency}\"\n \n             print(f\"Successful: {successful}/{concurrency}\")\n             print(f\"Total time: {total_time:.2f}s\")\n             print(f\"Throughput: {throughput:.2f} files/second\")\n             print(f\"Average duration: {statistics.mean(durations):.3f}s\")\n \n         # Verify throughput scales reasonably\n-        assert results[5]['throughput'] > results[1]['throughput'] * 2, \"Throughput doesn't scale with concurrency\"\n+        assert (\n+            results[5][\"throughput\"] > results[1][\"throughput\"] * 2\n+        ), \"Throughput doesn't scale with concurrency\"\n \n     def test_memory_usage_under_load(self, performance_transcription_service):\n         \"\"\"Test memory usage during sustained load.\"\"\"\n         import psutil\n         import os\n \n         process = psutil.Process(os.getpid())\n         initial_memory = process.memory_info().rss / 1024 / 1024  # MB\n \n-        with patch('src.services.transcription_service.whisper.load_model') as mock_load_model:\n+        with patch(\n+            \"src.services.transcription_service.whisper.load_model\"\n+        ) as mock_load_model:\n             mock_model = Mock()\n             mock_model.transcribe.return_value = {\"text\": \"Memory test transcript\"}\n             mock_load_model.return_value = mock_model\n \n             service = performance_transcription_service\n@@ -168,11 +195,13 @@\n             print(f\"Final memory: {final_memory:.1f} MB\")\n             print(f\"Memory growth: {memory_growth:.1f} MB\")\n             print(f\"Memory samples: {[f'{m:.1f}' for m in memory_samples]}\")\n \n             # Memory growth should be reasonable (less than 100MB for 50 files)\n-            assert memory_growth < 100, f\"Memory growth {memory_growth:.1f}MB exceeds 100MB threshold\"\n+            assert (\n+                memory_growth < 100\n+            ), f\"Memory growth {memory_growth:.1f}MB exceeds 100MB threshold\"\n \n \n class TestGlossaryPerformance:\n     \"\"\"Test glossary service performance characteristics.\"\"\"\n \n@@ -180,48 +209,57 @@\n         \"\"\"Test performance with large text inputs.\"\"\"\n         db_repo = DatabaseRepository()\n         service = GlossaryService(db_repo)\n \n         # Create progressively larger texts\n-        base_text = \"La inflaci\u00f3n en Argentina afecta el PIB y genera preocupaci\u00f3n. \" \\\n-                   \"Los trabajadores buscan laburo y manejan la guita con cuidado. \"\n+        base_text = (\n+            \"La inflaci\u00f3n en Argentina afecta el PIB y genera preocupaci\u00f3n. \"\n+            \"Los trabajadores buscan laburo y manejan la guita con cuidado. \"\n+        )\n \n         text_sizes = [100, 500, 1000, 5000]  # Number of repetitions\n         performance_data = []\n \n         for size in text_sizes:\n-            large_text = (base_text * size)\n+            large_text = base_text * size\n             text_length = len(large_text)\n \n             start_time = time.time()\n             stats = service.update_glossaries(large_text)\n             end_time = time.time()\n \n             duration = end_time - start_time\n             chars_per_second = text_length / duration\n \n-            performance_data.append({\n-                'size': size,\n-                'text_length': text_length,\n-                'duration': duration,\n-                'chars_per_second': chars_per_second,\n-                'terms_added': stats['economic_terms_added'] + stats['argentine_expressions_added']\n-            })\n+            performance_data.append(\n+                {\n+                    \"size\": size,\n+                    \"text_length\": text_length,\n+                    \"duration\": duration,\n+                    \"chars_per_second\": chars_per_second,\n+                    \"terms_added\": stats[\"economic_terms_added\"]\n+                    + stats[\"argentine_expressions_added\"],\n+                }\n+            )\n \n             print(f\"\\nText size {size} repetitions ({text_length:,} chars):\")\n             print(f\"Duration: {duration:.3f}s\")\n             print(f\"Processing rate: {chars_per_second:,.0f} chars/second\")\n             print(f\"Terms added: {performance_data[-1]['terms_added']}\")\n \n             # Performance thresholds\n-            assert chars_per_second > 10000, f\"Processing rate {chars_per_second:,.0f} chars/s too slow\"\n+            assert (\n+                chars_per_second > 10000\n+            ), f\"Processing rate {chars_per_second:,.0f} chars/s too slow\"\n             assert duration < 5.0, f\"Duration {duration:.3f}s exceeds 5s threshold\"\n \n         # Verify processing rate is consistent across sizes\n-        rates = [data['chars_per_second'] for data in performance_data]\n+        rates = [data[\"chars_per_second\"] for data in performance_data]\n         rate_variance = max(rates) / min(rates)\n-        assert rate_variance < 5.0, f\"Processing rate variance {rate_variance:.1f}x too high\"\n+        assert (\n+            rate_variance < 5.0\n+        ), f\"Processing rate variance {rate_variance:.1f}x too high\"\n \n     def test_database_insertion_performance(self):\n         \"\"\"Test database insertion performance under high load.\"\"\"\n         db_repo = DatabaseRepository()\n         service = GlossaryService(db_repo)\n@@ -236,20 +274,26 @@\n         start_time = time.time()\n         stats = service.update_glossaries(test_text)\n         end_time = time.time()\n \n         duration = end_time - start_time\n-        terms_per_second = (stats['economic_terms_added'] + stats['argentine_expressions_added']) / duration\n+        terms_per_second = (\n+            stats[\"economic_terms_added\"] + stats[\"argentine_expressions_added\"]\n+        ) / duration\n \n         print(f\"\\nDatabase Insertion Performance:\")\n         print(f\"Terms processed: {len(all_terms)}\")\n-        print(f\"Terms added: {stats['economic_terms_added'] + stats['argentine_expressions_added']}\")\n+        print(\n+            f\"Terms added: {stats['economic_terms_added'] + stats['argentine_expressions_added']}\"\n+        )\n         print(f\"Duration: {duration:.3f}s\")\n         print(f\"Insertion rate: {terms_per_second:.1f} terms/second\")\n \n         # Performance assertions\n-        assert terms_per_second > 50, f\"Insertion rate {terms_per_second:.1f} terms/s too slow\"\n+        assert (\n+            terms_per_second > 50\n+        ), f\"Insertion rate {terms_per_second:.1f} terms/s too slow\"\n         assert duration < 3.0, f\"Duration {duration:.3f}s exceeds 3s threshold\"\n \n \n class TestTermDetectionPerformance:\n     \"\"\"Test term detection service performance characteristics.\"\"\"\n@@ -258,15 +302,29 @@\n         \"\"\"Test performance of candidate term detection.\"\"\"\n         db_repo = DatabaseRepository()\n         service = TermDetectionService(db_repo)\n \n         # Create text with many potential candidates\n-        candidate_text = \" \".join([\n-            \"blockchain\", \"fintech\", \"startup\", \"unicornio\", \"disrupci\u00f3n\",\n-            \"innovaci\u00f3n\", \"digitalizaci\u00f3n\", \"ecosistema\", \"escalabilidad\",\n-            \"monetizaci\u00f3n\", \"valoraci\u00f3n\", \"inversi\u00f3n\", \"venture\", \"capital\"\n-        ] * 20)  # 280 words total\n+        candidate_text = \" \".join(\n+            [\n+                \"blockchain\",\n+                \"fintech\",\n+                \"startup\",\n+                \"unicornio\",\n+                \"disrupci\u00f3n\",\n+                \"innovaci\u00f3n\",\n+                \"digitalizaci\u00f3n\",\n+                \"ecosistema\",\n+                \"escalabilidad\",\n+                \"monetizaci\u00f3n\",\n+                \"valoraci\u00f3n\",\n+                \"inversi\u00f3n\",\n+                \"venture\",\n+                \"capital\",\n+            ]\n+            * 20\n+        )  # 280 words total\n \n         times = []\n         candidate_counts = []\n \n         # Run multiple iterations\n@@ -281,18 +339,24 @@\n         avg_time = statistics.mean(times)\n         avg_candidates = statistics.mean(candidate_counts)\n         words_per_second = len(candidate_text.split()) / avg_time\n \n         print(f\"\\nCandidate Detection Performance:\")\n-        print(f\"Text length: {len(candidate_text)} characters, {len(candidate_text.split())} words\")\n+        print(\n+            f\"Text length: {len(candidate_text)} characters, {len(candidate_text.split())} words\"\n+        )\n         print(f\"Average time: {avg_time:.3f}s\")\n         print(f\"Average candidates found: {avg_candidates:.1f}\")\n         print(f\"Processing rate: {words_per_second:.0f} words/second\")\n \n         # Performance assertions\n-        assert avg_time < 1.0, f\"Average detection time {avg_time:.3f}s exceeds 1s threshold\"\n-        assert words_per_second > 500, f\"Processing rate {words_per_second:.0f} words/s too slow\"\n+        assert (\n+            avg_time < 1.0\n+        ), f\"Average detection time {avg_time:.3f}s exceeds 1s threshold\"\n+        assert (\n+            words_per_second > 500\n+        ), f\"Processing rate {words_per_second:.0f} words/s too slow\"\n         assert avg_candidates > 5, f\"Should detect at least 5 candidates on average\"\n \n \n class TestSystemPerformance:\n     \"\"\"Test overall system performance and resource usage.\"\"\"\n@@ -302,87 +366,123 @@\n         db_repo = DatabaseRepository()\n         transcription_service = TranscriptionService(db_repo)\n         glossary_service = GlossaryService(db_repo)\n         term_detection_service = TermDetectionService(db_repo)\n \n-        with patch('src.services.transcription_service.whisper.load_model') as mock_load_model:\n+        with patch(\n+            \"src.services.transcription_service.whisper.load_model\"\n+        ) as mock_load_model:\n             mock_model = Mock()\n-            mock_model.transcribe.return_value = {\"text\": SAMPLE_TRANSCRIPTS['economic_heavy']}\n+            mock_model.transcribe.return_value = {\n+                \"text\": SAMPLE_TRANSCRIPTS[\"economic_heavy\"]\n+            }\n             mock_load_model.return_value = mock_model\n \n             mp3_content = create_mp3_bytes(2)\n             filename = \"e2e_performance.mp3\"\n \n             overall_start = time.time()\n \n             # Step 1: Transcription\n             with temporary_file(mp3_content, \"e2e\", \".mp3\") as temp_file:\n                 transcription_start = time.time()\n-                transcription_result = transcription_service.transcribe_audio(temp_file, filename)\n+                transcription_result = transcription_service.transcribe_audio(\n+                    temp_file, filename\n+                )\n                 transcription_time = time.time() - transcription_start\n \n             assert transcription_result.success is True\n \n             # Step 2: Glossary update\n             glossary_start = time.time()\n-            glossary_stats = glossary_service.update_glossaries(transcription_result.full_transcript)\n+            glossary_stats = glossary_service.update_glossaries(\n+                transcription_result.full_transcript\n+            )\n             glossary_time = time.time() - glossary_start\n \n             # Step 3: Term detection\n             detection_start = time.time()\n-            candidates = term_detection_service.detect_candidate_terms(transcription_result.full_transcript)\n+            candidates = term_detection_service.detect_candidate_terms(\n+                transcription_result.full_transcript\n+            )\n             detection_time = time.time() - detection_start\n \n             total_time = time.time() - overall_start\n \n             print(f\"\\nEnd-to-End Performance:\")\n             print(f\"Transcription time: {transcription_time:.3f}s\")\n             print(f\"Glossary update time: {glossary_time:.3f}s\")\n             print(f\"Term detection time: {detection_time:.3f}s\")\n             print(f\"Total time: {total_time:.3f}s\")\n             print(f\"Economic terms added: {glossary_stats['economic_terms_added']}\")\n-            print(f\"Argentine expressions added: {glossary_stats['argentine_expressions_added']}\")\n+            print(\n+                f\"Argentine expressions added: {glossary_stats['argentine_expressions_added']}\"\n+            )\n             print(f\"Candidates detected: {len(candidates)}\")\n \n             # Performance assertions\n-            assert transcription_time < 2.0, f\"Transcription time {transcription_time:.3f}s too slow\"\n+            assert (\n+                transcription_time < 2.0\n+            ), f\"Transcription time {transcription_time:.3f}s too slow\"\n             assert glossary_time < 1.0, f\"Glossary time {glossary_time:.3f}s too slow\"\n-            assert detection_time < 1.0, f\"Detection time {detection_time:.3f}s too slow\"\n-            assert total_time < 4.0, f\"Total time {total_time:.3f}s exceeds 4s threshold\"\n+            assert (\n+                detection_time < 1.0\n+            ), f\"Detection time {detection_time:.3f}s too slow\"\n+            assert (\n+                total_time < 4.0\n+            ), f\"Total time {total_time:.3f}s exceeds 4s threshold\"\n \n     def test_concurrent_mixed_operations(self):\n         \"\"\"Test performance under mixed concurrent operations.\"\"\"\n         db_repo = DatabaseRepository()\n         services = {\n-            'transcription': TranscriptionService(db_repo),\n-            'glossary': GlossaryService(db_repo),\n-            'term_detection': TermDetectionService(db_repo)\n+            \"transcription\": TranscriptionService(db_repo),\n+            \"glossary\": GlossaryService(db_repo),\n+            \"term_detection\": TermDetectionService(db_repo),\n         }\n \n-        with patch('src.services.transcription_service.whisper.load_model') as mock_load_model:\n+        with patch(\n+            \"src.services.transcription_service.whisper.load_model\"\n+        ) as mock_load_model:\n             mock_model = Mock()\n-            mock_model.transcribe.return_value = {\"text\": \"Concurrent mixed operations test\"}\n+            mock_model.transcribe.return_value = {\n+                \"text\": \"Concurrent mixed operations test\"\n+            }\n             mock_load_model.return_value = mock_model\n \n             def transcription_task(task_id):\n                 mp3_content = create_mp3_bytes(1)\n-                with temporary_file(mp3_content, f\"mixed_{task_id}\", \".mp3\") as temp_file:\n+                with temporary_file(\n+                    mp3_content, f\"mixed_{task_id}\", \".mp3\"\n+                ) as temp_file:\n                     start = time.time()\n-                    result = services['transcription'].transcribe_audio(temp_file, f\"mixed_{task_id}.mp3\")\n-                    return ('transcription', task_id, time.time() - start, result.success)\n+                    result = services[\"transcription\"].transcribe_audio(\n+                        temp_file, f\"mixed_{task_id}.mp3\"\n+                    )\n+                    return (\n+                        \"transcription\",\n+                        task_id,\n+                        time.time() - start,\n+                        result.success,\n+                    )\n \n             def glossary_task(task_id):\n                 text = f\"La inflaci\u00f3n y el laburo en Argentina {task_id}\"\n                 start = time.time()\n-                stats = services['glossary'].update_glossaries(text)\n-                return ('glossary', task_id, time.time() - start, stats['economic_terms_added'] > 0)\n+                stats = services[\"glossary\"].update_glossaries(text)\n+                return (\n+                    \"glossary\",\n+                    task_id,\n+                    time.time() - start,\n+                    stats[\"economic_terms_added\"] > 0,\n+                )\n \n             def detection_task(task_id):\n                 text = f\"Hablamos de blockchain y fintech {task_id}\"\n                 start = time.time()\n-                candidates = services['term_detection'].detect_candidate_terms(text)\n-                return ('detection', task_id, time.time() - start, len(candidates) > 0)\n+                candidates = services[\"term_detection\"].detect_candidate_terms(text)\n+                return (\"detection\", task_id, time.time() - start, len(candidates) > 0)\n \n             # Mix different types of operations\n             tasks = []\n             with ThreadPoolExecutor(max_workers=6) as executor:\n                 # Submit various tasks\n@@ -415,16 +515,22 @@\n                 successes = [s for d, s in task_results]\n \n                 avg_duration = statistics.mean(durations)\n                 success_rate = sum(successes) / len(successes)\n \n-                print(f\"{operation_type}: {success_rate:.1%} success, {avg_duration:.3f}s avg\")\n+                print(\n+                    f\"{operation_type}: {success_rate:.1%} success, {avg_duration:.3f}s avg\"\n+                )\n \n                 assert success_rate == 1.0, f\"{operation_type} had failures\"\n-                assert avg_duration < 2.0, f\"{operation_type} average time {avg_duration:.3f}s too slow\"\n-\n-            assert total_time < 8.0, f\"Total concurrent time {total_time:.3f}s exceeds 8s threshold\"\n+                assert (\n+                    avg_duration < 2.0\n+                ), f\"{operation_type} average time {avg_duration:.3f}s too slow\"\n+\n+            assert (\n+                total_time < 8.0\n+            ), f\"Total concurrent time {total_time:.3f}s exceeds 8s threshold\"\n \n \n class TestPerformanceReporting:\n     \"\"\"Generate performance reports and save metrics.\"\"\"\n \n@@ -433,51 +539,51 @@\n         import json\n         from datetime import datetime\n \n         # This would be called by CI/CD to generate performance reports\n         report = {\n-            'timestamp': datetime.utcnow().isoformat(),\n-            'test_environment': {\n-                'python_version': '3.9+',\n-                'database': 'SQLite in-memory',\n-                'whisper_model': 'tiny (mocked)'\n+            \"timestamp\": datetime.utcnow().isoformat(),\n+            \"test_environment\": {\n+                \"python_version\": \"3.9+\",\n+                \"database\": \"SQLite in-memory\",\n+                \"whisper_model\": \"tiny (mocked)\",\n             },\n-            'performance_metrics': {\n-                'transcription': {\n-                    'single_file_avg_time': '< 2.0s',\n-                    'concurrent_throughput': '> 2 files/second',\n-                    'memory_growth': '< 100MB for 50 files'\n+            \"performance_metrics\": {\n+                \"transcription\": {\n+                    \"single_file_avg_time\": \"< 2.0s\",\n+                    \"concurrent_throughput\": \"> 2 files/second\",\n+                    \"memory_growth\": \"< 100MB for 50 files\",\n                 },\n-                'glossary': {\n-                    'text_processing_rate': '> 10,000 chars/second',\n-                    'database_insertion_rate': '> 50 terms/second'\n+                \"glossary\": {\n+                    \"text_processing_rate\": \"> 10,000 chars/second\",\n+                    \"database_insertion_rate\": \"> 50 terms/second\",\n                 },\n-                'term_detection': {\n-                    'detection_rate': '> 500 words/second',\n-                    'detection_time': '< 1.0s'\n+                \"term_detection\": {\n+                    \"detection_rate\": \"> 500 words/second\",\n+                    \"detection_time\": \"< 1.0s\",\n                 },\n-                'end_to_end': {\n-                    'complete_workflow': '< 4.0s',\n-                    'concurrent_mixed_ops': '> 1.5 ops/second'\n-                }\n+                \"end_to_end\": {\n+                    \"complete_workflow\": \"< 4.0s\",\n+                    \"concurrent_mixed_ops\": \"> 1.5 ops/second\",\n+                },\n             },\n-            'quality_gates': {\n-                'all_tests_passed': True,\n-                'performance_thresholds_met': True,\n-                'memory_usage_acceptable': True,\n-                'concurrency_stable': True\n-            }\n+            \"quality_gates\": {\n+                \"all_tests_passed\": True,\n+                \"performance_thresholds_met\": True,\n+                \"memory_usage_acceptable\": True,\n+                \"concurrency_stable\": True,\n+            },\n         }\n \n         # Save report for CI/CD\n-        report_path = Path('performance-results.json')\n-        with open(report_path, 'w') as f:\n+        report_path = Path(\"performance-results.json\")\n+        with open(report_path, \"w\") as f:\n             json.dump(report, f, indent=2)\n \n         print(f\"\\nPerformance report saved to {report_path}\")\n         print(json.dumps(report, indent=2))\n \n         # Verify report structure\n-        assert 'timestamp' in report\n-        assert 'performance_metrics' in report\n-        assert 'quality_gates' in report\n-        assert all(report['quality_gates'].values()), \"All quality gates must pass\"\n\\ No newline at end of file\n+        assert \"timestamp\" in report\n+        assert \"performance_metrics\" in report\n+        assert \"quality_gates\" in report\n+        assert all(report[\"quality_gates\"].values()), \"All quality gates must pass\"\n",
      "stderr": "would reformat /home/beto/Dev/proyectos/personales/transcrip-app/tests/integration/__init__.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/tests/performance/__init__.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/src/config/settings.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/src/services/glossary_service.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/src/services/term_detection_service.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/src/services/transcription_service.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/tests/fixtures/test_data.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/src/repositories/database_repository.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/tests/conftest.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/tests/utils/test_helpers.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/tests/security/test_file_security.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/tests/integration/test_service_interactions.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_glossary_service.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_term_detection_service.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/repositories/test_database_repository.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_transcription_service.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/tests/api/test_endpoints.py\nwould reformat /home/beto/Dev/proyectos/personales/transcrip-app/tests/performance/test_performance.py\n\nOh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\n18 files would be reformatted, 4 files would be left unchanged.\n",
      "duration": 0.42166614532470703,
      "success": false
    },
    "isort": {
      "command": "isort --check-only --diff src/ tests/",
      "returncode": 1,
      "stdout": "--- /home/beto/Dev/proyectos/personales/transcrip-app/src/services/glossary_service.py:before\t2025-09-16 12:07:27.588082\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/src/services/glossary_service.py:after\t2025-09-16 17:44:36.324554\n@@ -1,5 +1,5 @@\n+import logging\n import re\n-import logging\n from typing import Dict, List, Tuple\n \n from ..config.settings import settings\n--- /home/beto/Dev/proyectos/personales/transcrip-app/src/services/term_detection_service.py:before\t2025-09-16 12:07:54.118706\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/src/services/term_detection_service.py:after\t2025-09-16 17:44:36.325511\n@@ -1,7 +1,7 @@\n+import logging\n import string\n import unicodedata\n-import logging\n-from typing import List, Tuple, Dict\n+from typing import Dict, List, Tuple\n \n from ..config.settings import settings\n from ..repositories.database_repository import DatabaseRepository\n--- /home/beto/Dev/proyectos/personales/transcrip-app/src/services/transcription_service.py:before\t2025-09-16 12:09:31.550997\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/src/services/transcription_service.py:after\t2025-09-16 17:44:36.327025\n@@ -1,9 +1,10 @@\n-import whisper\n import logging\n import os\n-import magic\n from pathlib import Path\n from typing import Optional\n+\n+import magic\n+import whisper\n \n from ..config.settings import settings\n from ..models.domain_models import TranscriptionResult\n--- /home/beto/Dev/proyectos/personales/transcrip-app/src/repositories/database_repository.py:before\t2025-09-16 12:06:42.098596\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/src/repositories/database_repository.py:after\t2025-09-16 17:44:36.328914\n@@ -1,11 +1,12 @@\n+import logging\n import sqlite3\n-import logging\n from contextlib import contextmanager\n+from datetime import datetime\n from typing import List, Optional, Tuple\n-from datetime import datetime\n \n from ..config.settings import settings\n-from ..models.domain_models import Transcription, EconomicTerm, ArgentineTerm, CandidateTerm\n+from ..models.domain_models import (ArgentineTerm, CandidateTerm, EconomicTerm,\n+                                    Transcription)\n \n logger = logging.getLogger(__name__)\n \n--- /home/beto/Dev/proyectos/personales/transcrip-app/src/config/settings.py:before\t2025-09-16 12:06:00.301952\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/src/config/settings.py:after\t2025-09-16 17:44:36.329891\n@@ -1,6 +1,7 @@\n import os\n from pathlib import Path\n from typing import List\n+\n \n class Settings:\n     \"\"\"Application configuration settings\"\"\"\n--- /home/beto/Dev/proyectos/personales/transcrip-app/src/models/domain_models.py:before\t2025-09-16 12:08:59.525143\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/src/models/domain_models.py:after\t2025-09-16 17:44:36.331055\n@@ -1,6 +1,7 @@\n+from dataclasses import dataclass\n from datetime import datetime\n from typing import Optional\n-from dataclasses import dataclass\n+\n \n @dataclass\n class Transcription:\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/conftest.py:before\t2025-09-16 13:11:14.193941\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/conftest.py:after\t2025-09-16 17:44:36.335398\n@@ -1,14 +1,15 @@\n \"\"\"\n Shared test fixtures and configuration for the transcription API test suite.\n \"\"\"\n+import asyncio\n import os\n import tempfile\n-import pytest\n-import asyncio\n from pathlib import Path\n from unittest.mock import Mock, patch\n+\n+import pytest\n+from fastapi.testclient import TestClient\n from httpx import AsyncClient\n-from fastapi.testclient import TestClient\n \n # Set test environment variables before importing application code\n os.environ.update({\n@@ -23,9 +24,9 @@\n from main import app\n from src.config.settings import settings\n from src.repositories.database_repository import DatabaseRepository\n-from src.services.transcription_service import TranscriptionService\n from src.services.glossary_service import GlossaryService\n from src.services.term_detection_service import TermDetectionService\n+from src.services.transcription_service import TranscriptionService\n \n # ============================================================================\n # Pytest Configuration\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/utils/test_helpers.py:before\t2025-09-16 13:12:25.249550\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/utils/test_helpers.py:after\t2025-09-16 17:44:36.337426\n@@ -4,13 +4,13 @@\n import os\n import tempfile\n import time\n+from contextlib import contextmanager\n from pathlib import Path\n-from typing import Dict, Any, Optional\n-from contextlib import contextmanager\n+from typing import Any, Dict, Optional\n from unittest.mock import patch\n \n+from fastapi.testclient import TestClient\n from httpx import AsyncClient\n-from fastapi.testclient import TestClient\n \n \n class TestTimer:\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/integration/test_service_interactions.py:before\t2025-09-16 13:22:11.058342\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/integration/test_service_interactions.py:after\t2025-09-16 17:44:36.341441\n@@ -2,15 +2,16 @@\n Integration tests for service interactions and end-to-end workflows.\n Tests the integration between services and real database operations.\n \"\"\"\n+from pathlib import Path\n+from unittest.mock import Mock, patch\n+\n import pytest\n-from pathlib import Path\n-from unittest.mock import patch, Mock\n-\n-from src.services.transcription_service import TranscriptionService\n+\n+from src.repositories.database_repository import DatabaseRepository\n from src.services.glossary_service import GlossaryService\n from src.services.term_detection_service import TermDetectionService\n-from src.repositories.database_repository import DatabaseRepository\n-from tests.fixtures.test_data import create_mp3_bytes, SAMPLE_TRANSCRIPTS\n+from src.services.transcription_service import TranscriptionService\n+from tests.fixtures.test_data import SAMPLE_TRANSCRIPTS, create_mp3_bytes\n from tests.utils.test_helpers import temporary_file\n \n \n@@ -238,8 +239,8 @@\n \n     def test_database_path_configuration(self):\n         \"\"\"Test that services work with different database configurations.\"\"\"\n+        import os\n         import tempfile\n-        import os\n \n         # Create temporary database file\n         with tempfile.NamedTemporaryFile(suffix='.db', delete=False) as temp_db:\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/security/test_file_security.py:before\t2025-09-16 13:13:39.350381\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/security/test_file_security.py:after\t2025-09-16 17:44:36.344046\n@@ -8,19 +8,18 @@\n - Malicious file content\n - MIME type spoofing\n \"\"\"\n-import pytest\n import tempfile\n from pathlib import Path\n-from unittest.mock import patch, Mock\n+from unittest.mock import Mock, patch\n+\n+import pytest\n \n from src.services.transcription_service import TranscriptionService\n-from tests.fixtures.test_data import (\n-    create_mp3_bytes,\n-    create_malicious_file_bytes,\n-    create_invalid_file_bytes,\n-    create_oversized_file_bytes\n-)\n-from tests.utils.test_helpers import temporary_file, mock_environment\n+from tests.fixtures.test_data import (create_invalid_file_bytes,\n+                                      create_malicious_file_bytes,\n+                                      create_mp3_bytes,\n+                                      create_oversized_file_bytes)\n+from tests.utils.test_helpers import mock_environment, temporary_file\n \n \n class TestFileValidationSecurity:\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/fixtures/test_data.py:before\t2025-09-16 13:11:47.529631\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/fixtures/test_data.py:after\t2025-09-16 17:44:36.346466\n@@ -1,17 +1,14 @@\n \"\"\"\n Test data factories and utilities for generating consistent test data.\n \"\"\"\n-import factory\n from datetime import datetime\n from pathlib import Path\n \n-from src.models.domain_models import (\n-    Transcription,\n-    EconomicTerm,\n-    ArgentineTerm,\n-    CandidateTerm,\n-    TranscriptionResult\n-)\n+import factory\n+\n+from src.models.domain_models import (ArgentineTerm, CandidateTerm,\n+                                      EconomicTerm, Transcription,\n+                                      TranscriptionResult)\n \n \n class TranscriptionFactory(factory.Factory):\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/performance/test_performance.py:before\t2025-09-16 13:24:28.858478\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/performance/test_performance.py:after\t2025-09-16 17:44:36.350872\n@@ -2,20 +2,21 @@\n Performance tests for the transcription application.\n Tests response times, throughput, and resource usage under various loads.\n \"\"\"\n+import json\n+import statistics\n+import threading\n+import time\n+from concurrent.futures import ThreadPoolExecutor, as_completed\n+from pathlib import Path\n+from unittest.mock import Mock, patch\n+\n import pytest\n-import time\n-import threading\n-import statistics\n-import json\n-from pathlib import Path\n-from concurrent.futures import ThreadPoolExecutor, as_completed\n-from unittest.mock import patch, Mock\n-\n-from src.services.transcription_service import TranscriptionService\n+\n+from src.repositories.database_repository import DatabaseRepository\n from src.services.glossary_service import GlossaryService\n from src.services.term_detection_service import TermDetectionService\n-from src.repositories.database_repository import DatabaseRepository\n-from tests.fixtures.test_data import create_mp3_bytes, SAMPLE_TRANSCRIPTS\n+from src.services.transcription_service import TranscriptionService\n+from tests.fixtures.test_data import SAMPLE_TRANSCRIPTS, create_mp3_bytes\n from tests.utils.test_helpers import temporary_file\n \n \n@@ -133,8 +134,9 @@\n \n     def test_memory_usage_under_load(self, performance_transcription_service):\n         \"\"\"Test memory usage during sustained load.\"\"\"\n+        import os\n+\n         import psutil\n-        import os\n \n         process = psutil.Process(os.getpid())\n         initial_memory = process.memory_info().rss / 1024 / 1024  # MB\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/api/test_endpoints.py:before\t2025-09-16 13:20:12.357387\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/api/test_endpoints.py:after\t2025-09-16 17:44:36.354452\n@@ -2,11 +2,14 @@\n Comprehensive API endpoint tests covering all FastAPI endpoints,\n request/response validation, error handling, and integration scenarios.\n \"\"\"\n+import json\n+from unittest.mock import Mock, patch\n+\n import pytest\n-from unittest.mock import patch, Mock\n-import json\n-\n-from tests.fixtures.test_data import create_mp3_bytes, create_malicious_file_bytes, create_oversized_file_bytes\n+\n+from tests.fixtures.test_data import (create_malicious_file_bytes,\n+                                      create_mp3_bytes,\n+                                      create_oversized_file_bytes)\n from tests.utils.test_helpers import assert_response_structure\n \n \n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_term_detection_service.py:before\t2025-09-16 13:18:32.152649\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_term_detection_service.py:after\t2025-09-16 17:44:36.357951\n@@ -2,8 +2,9 @@\n Comprehensive unit tests for TermDetectionService covering text normalization,\n candidate term detection, and context extraction functionality.\n \"\"\"\n+from unittest.mock import Mock, patch\n+\n import pytest\n-from unittest.mock import Mock, patch\n \n from src.services.term_detection_service import TermDetectionService\n from tests.fixtures.test_data import SAMPLE_TRANSCRIPTS\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_transcription_service.py:before\t2025-09-16 13:16:15.549063\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_transcription_service.py:after\t2025-09-16 17:44:36.360730\n@@ -2,14 +2,16 @@\n Comprehensive unit tests for TranscriptionService covering all functionality\n including file validation, transcription processing, and error handling.\n \"\"\"\n+import tempfile\n+from pathlib import Path\n+from unittest.mock import MagicMock, Mock, patch\n+\n import pytest\n-from pathlib import Path\n-from unittest.mock import Mock, patch, MagicMock\n-import tempfile\n-\n+\n+from src.models.domain_models import TranscriptionResult\n from src.services.transcription_service import TranscriptionService\n-from src.models.domain_models import TranscriptionResult\n-from tests.fixtures.test_data import create_mp3_bytes, create_malicious_file_bytes\n+from tests.fixtures.test_data import (create_malicious_file_bytes,\n+                                      create_mp3_bytes)\n from tests.utils.test_helpers import temporary_file\n \n \n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_glossary_service.py:before\t2025-09-16 13:17:22.623915\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_glossary_service.py:after\t2025-09-16 17:44:36.363728\n@@ -2,11 +2,14 @@\n Comprehensive unit tests for GlossaryService covering term detection,\n promotion functionality, and statistics tracking.\n \"\"\"\n+from unittest.mock import Mock, patch\n+\n import pytest\n-from unittest.mock import Mock, patch\n \n from src.services.glossary_service import GlossaryService\n-from tests.fixtures.test_data import SAMPLE_TRANSCRIPTS, SAMPLE_ECONOMIC_TERMS, SAMPLE_ARGENTINE_EXPRESSIONS\n+from tests.fixtures.test_data import (SAMPLE_ARGENTINE_EXPRESSIONS,\n+                                      SAMPLE_ECONOMIC_TERMS,\n+                                      SAMPLE_TRANSCRIPTS)\n \n \n class TestGlossaryServiceInitialization:\n--- /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/repositories/test_database_repository.py:before\t2025-09-16 13:14:58.296202\n+++ /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/repositories/test_database_repository.py:after\t2025-09-16 17:44:36.366873\n@@ -2,13 +2,15 @@\n Comprehensive tests for DatabaseRepository covering all database operations,\n connection management, and transaction safety.\n \"\"\"\n-import pytest\n import sqlite3\n from datetime import datetime\n-from unittest.mock import patch, Mock\n+from unittest.mock import Mock, patch\n+\n+import pytest\n \n from src.repositories.database_repository import DatabaseRepository\n-from tests.fixtures.test_data import SAMPLE_ECONOMIC_TERMS, SAMPLE_ARGENTINE_EXPRESSIONS\n+from tests.fixtures.test_data import (SAMPLE_ARGENTINE_EXPRESSIONS,\n+                                      SAMPLE_ECONOMIC_TERMS)\n \n \n class TestDatabaseInitialization:\n",
      "stderr": "ERROR: /home/beto/Dev/proyectos/personales/transcrip-app/src/services/glossary_service.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/src/services/term_detection_service.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/src/services/transcription_service.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/src/repositories/database_repository.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/src/config/settings.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/src/models/domain_models.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/tests/conftest.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/tests/utils/test_helpers.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/tests/integration/test_service_interactions.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/tests/security/test_file_security.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/tests/fixtures/test_data.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/tests/performance/test_performance.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/tests/api/test_endpoints.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_term_detection_service.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_transcription_service.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/services/test_glossary_service.py Imports are incorrectly sorted and/or formatted.\nERROR: /home/beto/Dev/proyectos/personales/transcrip-app/tests/unit/repositories/test_database_repository.py Imports are incorrectly sorted and/or formatted.\n",
      "duration": 0.1177370548248291,
      "success": false
    },
    "mypy": {
      "command": "mypy src/ --ignore-missing-imports",
      "returncode": 1,
      "stdout": "src/repositories/database_repository.py:15: error: Incompatible default for argument \"db_path\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/repositories/database_repository.py:15: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/repositories/database_repository.py:15: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/services/transcription_service.py:17: error: Incompatible default for argument \"db_repository\" (default has type \"None\", argument has type \"DatabaseRepository\")  [assignment]\nsrc/services/transcription_service.py:17: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/services/transcription_service.py:17: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/services/term_detection_service.py:14: error: Incompatible default for argument \"db_repository\" (default has type \"None\", argument has type \"DatabaseRepository\")  [assignment]\nsrc/services/term_detection_service.py:14: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/services/term_detection_service.py:14: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/services/glossary_service.py:13: error: Incompatible default for argument \"db_repository\" (default has type \"None\", argument has type \"DatabaseRepository\")  [assignment]\nsrc/services/glossary_service.py:13: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/services/glossary_service.py:13: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nFound 4 errors in 4 files (checked 11 source files)\n",
      "stderr": "",
      "duration": 0.8894107341766357,
      "success": false
    },
    "overall_success": false
  }
}