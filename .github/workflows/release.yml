name: Release Pipeline

on:
  push:
    tags:
      - 'v*'

env:
  PYTHON_VERSION: '3.9'

jobs:
  test-release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libmagic1 ffmpeg
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run full test suite
      env:
        DB_PATH: ':memory:'
        WHISPER_MODEL: 'tiny'
      run: |
        pytest -v --cov=src --cov-report=xml --cov-fail-under=85

    - name: Run security checks
      run: |
        bandit -r src/ --severity-level medium
        safety check

  build-docs:
    runs-on: ubuntu-latest
    needs: test-release

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install sphinx sphinx-rtd-theme

    - name: Generate API documentation
      run: |
        sphinx-apidoc -o docs/source src/
        sphinx-build -b html docs/source docs/build

    - name: Upload documentation
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: docs/build/

  create-release:
    runs-on: ubuntu-latest
    needs: [test-release, build-docs]

    steps:
    - uses: actions/checkout@v4

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        body: |
          ## Changes in ${{ steps.get_version.outputs.VERSION }}

          ### Features
          - Spanish audio transcription with OpenAI Whisper
          - Economic term detection and glossary management
          - Argentine expression recognition
          - RESTful API with FastAPI
          - Comprehensive test suite

          ### Testing
          - Unit tests with ${{ steps.test-release.outputs.coverage }}% coverage
          - Integration tests for service interactions
          - Security testing for file uploads
          - Performance testing framework

          ### Quality Assurance
          - All security checks passed
          - Code quality metrics met
          - Full CI/CD pipeline validation